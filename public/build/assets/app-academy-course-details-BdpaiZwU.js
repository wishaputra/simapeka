document.addEventListener("DOMContentLoaded",function(){const i=document.querySelectorAll(".lesson-selector"),p=document.querySelectorAll(".quiz-selector"),r=document.getElementById("lesson-content"),f=document.querySelector('input[name="course_id"]').value,h=document.getElementById("startExamBtn"),g=document.getElementById("examRequirementMsg");let o=0,d=[],l=[],b=null;const m=t=>{const e=t.dataset.type;let n=t.dataset.content;e==="video"?(n.includes("youtube.com/watch")&&(n=n.replace("watch?v=","embed/")),r.innerHTML=`
        <iframe
          class="w-100"
          src="${n}"
          frameborder="0"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
          allowfullscreen
          style="height: 500px;">
        </iframe>
      `):e==="pdf"?r.innerHTML=`
        <iframe class="w-100" src="${n}" frameborder="0" style="height: 500px;"></iframe>
      `:r.innerHTML="<p>No content available for this lesson.</p>"},u=()=>{var t,e,n;if(d.length>0){const s=d[o],a=o===d.length-1;let c=`
        <h4>${s.quiz_title}</h4>
        <div class="mb-4">
          <p><strong>${s.question_text}</strong></p>
          ${s.type==="multiple_choice"?s.options.map((q,k)=>`<div>
                        <input type="radio" id="q${s.id}-o${k}" name="q${s.id}" value="${q}">
                        <label for="q${s.id}-o${k}">${q}</label>
                      </div>`).join(""):'<textarea class="form-control" placeholder="Write your answer here"></textarea>'}
        </div>
        <div id="feedback" class="mb-3"></div>
        <div class="d-flex justify-content-between">
          <button id="prev-button" class="btn btn-secondary ${o===0?"d-none":""}">Previous</button>
          <button id="check-answer" class="btn btn-primary">Check Answer</button>
          <button id="next-button" class="btn btn-primary d-none">${a?"Finish Quiz":"Next"}</button>
        </div>
      `;r.innerHTML=c,(t=document.getElementById("prev-button"))==null||t.addEventListener("click",()=>{o--,u()}),(e=document.getElementById("check-answer"))==null||e.addEventListener("click",()=>{E(s)}),(n=document.getElementById("next-button"))==null||n.addEventListener("click",()=>{a?L():(o++,u())})}else r.innerHTML="<p>No questions available for this quiz.</p>"},E=t=>{const e=document.getElementById("feedback"),n=document.getElementById("next-button"),s=document.getElementById("check-answer");let a;if(t.type==="multiple_choice"){const c=document.querySelector(`input[name="q${t.id}"]:checked`);if(!c){e.innerHTML='<p class="text-warning">Please select an answer.</p>';return}a=c.value}else{const c=document.querySelector("textarea").value.trim();if(!c){e.innerHTML='<p class="text-warning">Please enter your answer.</p>';return}a=c}a===t.correct_answer?(e.innerHTML='<p class="text-success">Correct! You can move to the next question.</p>',n.classList.remove("d-none"),s.classList.add("d-none"),l[o]=!0):(e.innerHTML='<p class="text-danger">Incorrect. Please try again.</p>',l[o]=!1)},v=t=>{b=t,fetch(`/dev/corpu2/simapeka/public/quiz/${t}/questions`).then(e=>e.json()).then(e=>{e.length>0?(d=e,l=new Array(e.length).fill(!1),o=0,u()):r.innerHTML="<p>No questions available for this quiz.</p>"}).catch(e=>{console.error("Error fetching quiz questions:",e),r.innerHTML="<p>Failed to load quiz questions. Please try again later.</p>"})},w=t=>{fetch("/dev/corpu2/simapeka/public/lesson/progress",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")},body:JSON.stringify({lesson_id:t,course_id:f})}).then(e=>{if(!e.ok)throw new Error("Failed to update lesson progress");return e.json()}).then(e=>{console.log(e.message)}).catch(e=>{console.error("Error:",e)})},L=()=>{if(l.every(t=>t===!0))x(b);else{alert("Please answer all questions correctly before finishing the quiz.");const t=l.findIndex(e=>e===!1);t!==-1&&(o=t,u())}},x=t=>{fetch("/dev/corpu2/simapeka/public/quiz/progress",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').getAttribute("content")},body:JSON.stringify({quiz_id:t,course_id:f})}).then(e=>{if(!e.ok)throw new Error("Failed to update quiz progress");return e.json()}).then(e=>{console.log(e.message),r.innerHTML="<p>Quiz completed successfully!</p>";const n=document.querySelector(`.quiz-selector[data-id="${t}"]`);n&&(n.checked=!0)}).catch(e=>{console.error("Error:",e)})},z=()=>{const t=Array.from(i).find(n=>n.checked),e=Array.from(p).find(n=>n.checked);t?m(t):e?v(e.dataset.id):i.length>0&&(i[0].checked=!0,m(i[0]))},$=()=>{fetch(`/dev/corpu2/simapeka/public/course/${f}/progress`).then(t=>t.json()).then(t=>{t.lesson_progress&&t.lesson_progress.forEach(e=>{const n=document.querySelector(`.lesson-selector[data-id="${e}"]`);n&&(n.checked=!0)}),t.quiz_progress&&t.quiz_progress.forEach(e=>{const n=document.querySelector(`.quiz-selector[data-id="${e}"]`);n&&(n.checked=!0)})}).catch(t=>console.error("Error fetching progress:",t))};function y(){const t=Array.from(i).every(n=>n.checked),e=Array.from(p).every(n=>n.checked);t&&e?(h.disabled=!1,g.style.display="none"):(h.disabled=!0,g.style.display="block")}y(),$(),z(),i.forEach(t=>{t.addEventListener("change",y),t.addEventListener("change",function(){this.checked&&(m(this),w(this.dataset.id))})}),p.forEach(t=>{t.addEventListener("change",y),t.addEventListener("change",function(){this.checked&&v(this.dataset.id)}),h.addEventListener("click",function(e){if(e.preventDefault(),!this.disabled){const n=this.dataset.examId;window.location.href=`/dev/corpu2/simapeka/public/final-exam/${n}`}})})});
