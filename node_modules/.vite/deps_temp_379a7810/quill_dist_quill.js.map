{
  "version": 3,
  "sources": ["../../quill/dist/webpack:/Quill/webpack/universalModuleDefinition", "../../quill/dist/webpack:/Quill/src/blots/block.ts", "../../quill/dist/webpack:/Quill/src/blots/break.ts", "../../quill/dist/webpack:/Quill/src/blots/container.ts", "../../quill/dist/webpack:/Quill/src/blots/cursor.ts", "../../quill/dist/webpack:/Quill/src/blots/embed.ts", "../../quill/dist/webpack:/Quill/src/blots/inline.ts", "../../quill/dist/webpack:/Quill/src/blots/text.ts", "../../quill/dist/webpack:/Quill/src/blots/scroll.ts", "../../quill/dist/webpack:/Quill/src/modules/history.ts", "../../quill/dist/webpack:/Quill/src/modules/uploader.ts", "../../quill/dist/webpack:/Quill/src/modules/input.ts", "../../quill/dist/webpack:/Quill/src/modules/uiNode.ts", "../../quill/dist/webpack:/Quill/src/core.ts", "../../quill/dist/webpack:/Quill/src/core/emitter.ts", "../../quill/dist/webpack:/Quill/src/core/instances.ts", "../../quill/dist/webpack:/Quill/src/core/logger.ts", "../../quill/dist/webpack:/Quill/src/core/module.ts", "../../quill/dist/webpack:/Quill/src/core/editor.ts", "../../quill/dist/webpack:/Quill/src/core/composition.ts", "../../quill/dist/webpack:/Quill/src/core/utils/scrollRectIntoView.ts", "../../quill/dist/webpack:/Quill/src/core/utils/createRegistryWithFormats.ts", "../../quill/dist/webpack:/Quill/src/core/quill.ts", "../../quill/dist/webpack:/Quill/src/core/selection.ts", "../../quill/dist/webpack:/Quill/src/core/theme.ts", "../../quill/dist/webpack:/Quill/src/formats/align.ts", "../../quill/dist/webpack:/Quill/src/formats/background.ts", "../../quill/dist/webpack:/Quill/src/formats/code.ts", "../../quill/dist/webpack:/Quill/src/formats/color.ts", "../../quill/dist/webpack:/Quill/src/formats/direction.ts", "../../quill/dist/webpack:/Quill/src/formats/font.ts", "../../quill/dist/webpack:/Quill/src/formats/size.ts", "../../quill/dist/webpack:/Quill/src/modules/normalizeExternalHTML/normalizers/googleDocs.ts", "../../quill/dist/webpack:/Quill/src/modules/normalizeExternalHTML/normalizers/msWord.ts", "../../quill/dist/webpack:/Quill/src/modules/normalizeExternalHTML/index.ts", "../../quill/dist/webpack:/Quill/src/modules/clipboard.ts", "../../quill/dist/webpack:/Quill/src/modules/keyboard.ts", "../../quill/dist/node_modules/eventemitter3/index.js", "../../quill/dist/node_modules/fast-diff/diff.js", "../../quill/dist/node_modules/lodash.clonedeep/index.js", "../../quill/dist/node_modules/lodash.isequal/index.js", "../../quill/dist/node_modules/quill-delta/src/AttributeMap.ts", "../../quill/dist/node_modules/quill-delta/src/Delta.ts", "../../quill/dist/node_modules/quill-delta/src/Op.ts", "../../quill/dist/node_modules/quill-delta/src/OpIterator.ts", "../../quill/dist/node_modules/lodash-es/_listCacheClear.js", "../../quill/dist/node_modules/lodash-es/_assocIndexOf.js", "../../quill/dist/node_modules/lodash-es/_listCacheDelete.js", "../../quill/dist/node_modules/lodash-es/_ListCache.js", "../../quill/dist/node_modules/lodash-es/_listCacheGet.js", "../../quill/dist/node_modules/lodash-es/_listCacheHas.js", "../../quill/dist/node_modules/lodash-es/_listCacheSet.js", "../../quill/dist/node_modules/lodash-es/_Map.js", "../../quill/dist/node_modules/lodash-es/_nativeCreate.js", "../../quill/dist/node_modules/lodash-es/_hashGet.js", "../../quill/dist/node_modules/lodash-es/_hashHas.js", "../../quill/dist/node_modules/lodash-es/_Hash.js", "../../quill/dist/node_modules/lodash-es/_hashClear.js", "../../quill/dist/node_modules/lodash-es/_hashDelete.js", "../../quill/dist/node_modules/lodash-es/_hashSet.js", "../../quill/dist/node_modules/lodash-es/_getMapData.js", "../../quill/dist/node_modules/lodash-es/_isKeyable.js", "../../quill/dist/node_modules/lodash-es/_MapCache.js", "../../quill/dist/node_modules/lodash-es/_mapCacheClear.js", "../../quill/dist/node_modules/lodash-es/_mapCacheDelete.js", "../../quill/dist/node_modules/lodash-es/_mapCacheGet.js", "../../quill/dist/node_modules/lodash-es/_mapCacheHas.js", "../../quill/dist/node_modules/lodash-es/_mapCacheSet.js", "../../quill/dist/node_modules/lodash-es/_Stack.js", "../../quill/dist/node_modules/lodash-es/_stackClear.js", "../../quill/dist/node_modules/lodash-es/_stackDelete.js", "../../quill/dist/node_modules/lodash-es/_stackGet.js", "../../quill/dist/node_modules/lodash-es/_stackHas.js", "../../quill/dist/node_modules/lodash-es/_stackSet.js", "../../quill/dist/node_modules/lodash-es/_Symbol.js", "../../quill/dist/node_modules/lodash-es/_Uint8Array.js", "../../quill/dist/node_modules/lodash-es/_baseTimes.js", "../../quill/dist/node_modules/lodash-es/_arrayLikeKeys.js", "../../quill/dist/node_modules/lodash-es/_arrayPush.js", "../../quill/dist/node_modules/lodash-es/_assignValue.js", "../../quill/dist/node_modules/lodash-es/_baseAssignValue.js", "../../quill/dist/node_modules/lodash-es/_baseGetAllKeys.js", "../../quill/dist/node_modules/lodash-es/_getRawTag.js", "../../quill/dist/node_modules/lodash-es/_objectToString.js", "../../quill/dist/node_modules/lodash-es/_baseGetTag.js", "../../quill/dist/node_modules/lodash-es/_baseUnary.js", "../../quill/dist/node_modules/lodash-es/_cloneArrayBuffer.js", "../../quill/dist/node_modules/lodash-es/_cloneBuffer.js", "../../quill/dist/node_modules/lodash-es/_cloneTypedArray.js", "../../quill/dist/node_modules/lodash-es/_copyArray.js", "../../quill/dist/node_modules/lodash-es/_copyObject.js", "../../quill/dist/node_modules/lodash-es/_defineProperty.js", "../../quill/dist/node_modules/lodash-es/_freeGlobal.js", "../../quill/dist/node_modules/lodash-es/_getAllKeys.js", "../../quill/dist/node_modules/lodash-es/_isMasked.js", "../../quill/dist/node_modules/lodash-es/_coreJsData.js", "../../quill/dist/node_modules/lodash-es/_baseIsNative.js", "../../quill/dist/node_modules/lodash-es/_getNative.js", "../../quill/dist/node_modules/lodash-es/_getValue.js", "../../quill/dist/node_modules/lodash-es/_getPrototype.js", "../../quill/dist/node_modules/lodash-es/_arrayFilter.js", "../../quill/dist/node_modules/lodash-es/_getSymbols.js", "../../quill/dist/node_modules/lodash-es/_DataView.js", "../../quill/dist/node_modules/lodash-es/_Promise.js", "../../quill/dist/node_modules/lodash-es/_Set.js", "../../quill/dist/node_modules/lodash-es/_WeakMap.js", "../../quill/dist/node_modules/lodash-es/_getTag.js", "../../quill/dist/node_modules/lodash-es/_baseCreate.js", "../../quill/dist/node_modules/lodash-es/_initCloneObject.js", "../../quill/dist/node_modules/lodash-es/_isIndex.js", "../../quill/dist/node_modules/lodash-es/_isPrototype.js", "../../quill/dist/node_modules/lodash-es/_nodeUtil.js", "../../quill/dist/node_modules/lodash-es/_overArg.js", "../../quill/dist/node_modules/lodash-es/_root.js", "../../quill/dist/node_modules/lodash-es/_toSource.js", "../../quill/dist/node_modules/lodash-es/_getSymbolsIn.js", "../../quill/dist/node_modules/lodash-es/_getAllKeysIn.js", "../../quill/dist/node_modules/lodash-es/_initCloneArray.js", "../../quill/dist/node_modules/lodash-es/_cloneRegExp.js", "../../quill/dist/node_modules/lodash-es/_cloneSymbol.js", "../../quill/dist/node_modules/lodash-es/_initCloneByTag.js", "../../quill/dist/node_modules/lodash-es/_cloneDataView.js", "../../quill/dist/node_modules/lodash-es/isMap.js", "../../quill/dist/node_modules/lodash-es/_baseIsMap.js", "../../quill/dist/node_modules/lodash-es/isSet.js", "../../quill/dist/node_modules/lodash-es/_baseIsSet.js", "../../quill/dist/node_modules/lodash-es/_baseClone.js", "../../quill/dist/node_modules/lodash-es/_copySymbolsIn.js", "../../quill/dist/node_modules/lodash-es/_baseAssignIn.js", "../../quill/dist/node_modules/lodash-es/_copySymbols.js", "../../quill/dist/node_modules/lodash-es/_baseAssign.js", "../../quill/dist/node_modules/lodash-es/_arrayEach.js", "../../quill/dist/node_modules/lodash-es/cloneDeep.js", "../../quill/dist/node_modules/lodash-es/eq.js", "../../quill/dist/node_modules/lodash-es/_baseIsArguments.js", "../../quill/dist/node_modules/lodash-es/isArguments.js", "../../quill/dist/node_modules/lodash-es/isArray.js", "../../quill/dist/node_modules/lodash-es/isArrayLike.js", "../../quill/dist/node_modules/lodash-es/isBuffer.js", "../../quill/dist/node_modules/lodash-es/stubFalse.js", "../../quill/dist/node_modules/lodash-es/_SetCache.js", "../../quill/dist/node_modules/lodash-es/_setCacheAdd.js", "../../quill/dist/node_modules/lodash-es/_setCacheHas.js", "../../quill/dist/node_modules/lodash-es/_arraySome.js", "../../quill/dist/node_modules/lodash-es/_equalArrays.js", "../../quill/dist/node_modules/lodash-es/_cacheHas.js", "../../quill/dist/node_modules/lodash-es/_mapToArray.js", "../../quill/dist/node_modules/lodash-es/_setToArray.js", "../../quill/dist/node_modules/lodash-es/_equalByTag.js", "../../quill/dist/node_modules/lodash-es/_equalObjects.js", "../../quill/dist/node_modules/lodash-es/_baseIsEqualDeep.js", "../../quill/dist/node_modules/lodash-es/_baseIsEqual.js", "../../quill/dist/node_modules/lodash-es/isEqual.js", "../../quill/dist/node_modules/lodash-es/isFunction.js", "../../quill/dist/node_modules/lodash-es/isLength.js", "../../quill/dist/node_modules/lodash-es/isObject.js", "../../quill/dist/node_modules/lodash-es/isObjectLike.js", "../../quill/dist/node_modules/lodash-es/_baseIsTypedArray.js", "../../quill/dist/node_modules/lodash-es/isTypedArray.js", "../../quill/dist/node_modules/lodash-es/_nativeKeys.js", "../../quill/dist/node_modules/lodash-es/_baseKeys.js", "../../quill/dist/node_modules/lodash-es/keys.js", "../../quill/dist/node_modules/lodash-es/_baseKeysIn.js", "../../quill/dist/node_modules/lodash-es/_nativeKeysIn.js", "../../quill/dist/node_modules/lodash-es/keysIn.js", "../../quill/dist/node_modules/lodash-es/_shortOut.js", "../../quill/dist/node_modules/lodash-es/_createAssigner.js", "../../quill/dist/node_modules/lodash-es/_assignMergeValue.js", "../../quill/dist/node_modules/lodash-es/_baseFor.js", "../../quill/dist/node_modules/lodash-es/_createBaseFor.js", "../../quill/dist/node_modules/lodash-es/isPlainObject.js", "../../quill/dist/node_modules/lodash-es/_safeGet.js", "../../quill/dist/node_modules/lodash-es/_baseMergeDeep.js", "../../quill/dist/node_modules/lodash-es/isArrayLikeObject.js", "../../quill/dist/node_modules/lodash-es/toPlainObject.js", "../../quill/dist/node_modules/lodash-es/_baseMerge.js", "../../quill/dist/node_modules/lodash-es/identity.js", "../../quill/dist/node_modules/lodash-es/_overRest.js", "../../quill/dist/node_modules/lodash-es/_baseSetToString.js", "../../quill/dist/node_modules/lodash-es/constant.js", "../../quill/dist/node_modules/lodash-es/_setToString.js", "../../quill/dist/node_modules/lodash-es/_baseRest.js", "../../quill/dist/node_modules/lodash-es/_apply.js", "../../quill/dist/node_modules/lodash-es/merge.js", "../../quill/dist/node_modules/lodash-es/_isIterateeCall.js", "../../quill/dist/node_modules/lodash-es/stubArray.js", "../../quill/dist/node_modules/parchment/src/scope.ts", "../../quill/dist/node_modules/parchment/src/attributor/attributor.ts", "../../quill/dist/node_modules/parchment/src/error.ts", "../../quill/dist/node_modules/parchment/src/registry.ts", "../../quill/dist/node_modules/parchment/src/attributor/class.ts", "../../quill/dist/node_modules/parchment/src/attributor/style.ts", "../../quill/dist/node_modules/parchment/src/attributor/store.ts", "../../quill/dist/node_modules/parchment/src/blot/abstract/shadow.ts", "../../quill/dist/node_modules/parchment/src/blot/abstract/leaf.ts", "../../quill/dist/node_modules/parchment/src/collection/linked-list.ts", "../../quill/dist/node_modules/parchment/src/blot/abstract/parent.ts", "../../quill/dist/node_modules/parchment/src/blot/inline.ts", "../../quill/dist/node_modules/parchment/src/blot/block.ts", "../../quill/dist/node_modules/parchment/src/blot/abstract/container.ts", "../../quill/dist/node_modules/parchment/src/blot/embed.ts", "../../quill/dist/node_modules/parchment/src/blot/scroll.ts", "../../quill/dist/node_modules/parchment/src/blot/text.ts", "../../quill/dist/webpack:/Quill/webpack/bootstrap", "../../quill/dist/webpack:/Quill/webpack/runtime/compat get default export", "../../quill/dist/webpack:/Quill/webpack/runtime/define property getters", "../../quill/dist/webpack:/Quill/webpack/runtime/global", "../../quill/dist/webpack:/Quill/webpack/runtime/hasOwnProperty shorthand", "../../quill/dist/webpack:/Quill/webpack/runtime/make namespace object", "../../quill/dist/webpack:/Quill/webpack/runtime/node module decorator", "../../quill/dist/webpack:/Quill/src/formats/indent.ts", "../../quill/dist/webpack:/Quill/src/formats/blockquote.ts", "../../quill/dist/webpack:/Quill/src/formats/header.ts", "../../quill/dist/webpack:/Quill/src/formats/list.ts", "../../quill/dist/webpack:/Quill/src/formats/bold.ts", "../../quill/dist/webpack:/Quill/src/formats/link.ts", "../../quill/dist/webpack:/Quill/src/formats/script.ts", "../../quill/dist/webpack:/Quill/src/formats/underline.ts", "../../quill/dist/webpack:/Quill/src/formats/formula.ts", "../../quill/dist/webpack:/Quill/src/formats/image.ts", "../../quill/dist/webpack:/Quill/src/formats/video.ts", "../../quill/dist/webpack:/Quill/src/modules/syntax.ts", "../../quill/dist/webpack:/Quill/src/formats/table.ts", "../../quill/dist/webpack:/Quill/src/modules/table.ts", "../../quill/dist/webpack:/Quill/src/modules/toolbar.ts", "../../quill/dist/webpack:/Quill/src/ui/icons.ts", "../../quill/dist/webpack:/Quill/src/ui/picker.ts", "../../quill/dist/webpack:/Quill/src/ui/color-picker.ts", "../../quill/dist/webpack:/Quill/src/ui/icon-picker.ts", "../../quill/dist/webpack:/Quill/src/ui/tooltip.ts", "../../quill/dist/webpack:/Quill/src/themes/base.ts", "../../quill/dist/webpack:/Quill/src/themes/bubble.ts", "../../quill/dist/webpack:/Quill/src/themes/snow.ts", "../../quill/dist/webpack:/Quill/src/quill.ts", "../../quill/dist/webpack:/Quill/src/formats/italic.ts", "../../quill/dist/webpack:/Quill/src/formats/strike.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Quill\"] = factory();\n\telse\n\t\troot[\"Quill\"] = factory();\n})(self, function() {\nreturn ", "import {\n  AttributorStore,\n  BlockBlot,\n  EmbedBlot,\n  LeafBlot,\n  Scope,\n} from 'parchment';\nimport type { Blot, Parent } from 'parchment';\nimport Delta from 'quill-delta';\nimport Break from './break.js';\nimport Inline from './inline.js';\nimport TextBlot from './text.js';\n\nconst NEWLINE_LENGTH = 1;\n\nclass Block extends BlockBlot {\n  cache: { delta?: Delta | null; length?: number } = {};\n\n  delta(): Delta {\n    if (this.cache.delta == null) {\n      this.cache.delta = blockDelta(this);\n    }\n    return this.cache.delta;\n  }\n\n  deleteAt(index: number, length: number) {\n    super.deleteAt(index, length);\n    this.cache = {};\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (length <= 0) return;\n    if (this.scroll.query(name, Scope.BLOCK)) {\n      if (index + length === this.length()) {\n        this.format(name, value);\n      }\n    } else {\n      super.formatAt(\n        index,\n        Math.min(length, this.length() - index - 1),\n        name,\n        value,\n      );\n    }\n    this.cache = {};\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      this.cache = {};\n      return;\n    }\n    if (value.length === 0) return;\n    const lines = value.split('\\n');\n    const text = lines.shift() as string;\n    if (text.length > 0) {\n      if (index < this.length() - 1 || this.children.tail == null) {\n        super.insertAt(Math.min(index, this.length() - 1), text);\n      } else {\n        this.children.tail.insertAt(this.children.tail.length(), text);\n      }\n      this.cache = {};\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let block: Blot | this = this;\n    lines.reduce((lineIndex, line) => {\n      // @ts-expect-error Fix me later\n      block = block.split(lineIndex, true);\n      block.insertAt(0, line);\n      return line.length;\n    }, index + text.length);\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    const { head } = this.children;\n    super.insertBefore(blot, ref);\n    if (head instanceof Break) {\n      head.remove();\n    }\n    this.cache = {};\n  }\n\n  length() {\n    if (this.cache.length == null) {\n      this.cache.length = super.length() + NEWLINE_LENGTH;\n    }\n    return this.cache.length;\n  }\n\n  moveChildren(target: Parent, ref?: Blot | null) {\n    super.moveChildren(target, ref);\n    this.cache = {};\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.cache = {};\n  }\n\n  path(index: number) {\n    return super.path(index, true);\n  }\n\n  removeChild(child: Blot) {\n    super.removeChild(child);\n    this.cache = {};\n  }\n\n  split(index: number, force: boolean | undefined = false): Blot | null {\n    if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {\n      const clone = this.clone();\n      if (index === 0) {\n        this.parent.insertBefore(clone, this);\n        return this;\n      }\n      this.parent.insertBefore(clone, this.next);\n      return clone;\n    }\n    const next = super.split(index, force);\n    this.cache = {};\n    return next;\n  }\n}\nBlock.blotName = 'block';\nBlock.tagName = 'P';\nBlock.defaultChild = Break;\nBlock.allowedChildren = [Break, Inline, EmbedBlot, TextBlot];\n\nclass BlockEmbed extends EmbedBlot {\n  attributes: AttributorStore;\n  domNode: HTMLElement;\n\n  attach() {\n    super.attach();\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  delta() {\n    return new Delta().insert(this.value(), {\n      ...this.formats(),\n      ...this.attributes.values(),\n    });\n  }\n\n  format(name: string, value: unknown) {\n    const attribute = this.scroll.query(name, Scope.BLOCK_ATTRIBUTE);\n    if (attribute != null) {\n      // @ts-expect-error TODO: Scroll#query() should return Attributor when scope is attribute\n      this.attributes.attribute(attribute, value);\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    this.format(name, value);\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      return;\n    }\n    const lines = value.split('\\n');\n    const text = lines.pop();\n    const blocks = lines.map((line) => {\n      const block = this.scroll.create(Block.blotName);\n      block.insertAt(0, line);\n      return block;\n    });\n    const ref = this.split(index);\n    blocks.forEach((block) => {\n      this.parent.insertBefore(block, ref);\n    });\n    if (text) {\n      this.parent.insertBefore(this.scroll.create('text', text), ref);\n    }\n  }\n}\nBlockEmbed.scope = Scope.BLOCK_BLOT;\n// It is important for cursor behavior BlockEmbeds use tags that are block level elements\n\nfunction blockDelta(blot: BlockBlot, filter = true) {\n  return blot\n    .descendants(LeafBlot)\n    .reduce((delta, leaf) => {\n      if (leaf.length() === 0) {\n        return delta;\n      }\n      return delta.insert(leaf.value(), bubbleFormats(leaf, {}, filter));\n    }, new Delta())\n    .insert('\\n', bubbleFormats(blot));\n}\n\nfunction bubbleFormats(\n  blot: Blot | null,\n  formats: Record<string, unknown> = {},\n  filter = true,\n): Record<string, unknown> {\n  if (blot == null) return formats;\n  if ('formats' in blot && typeof blot.formats === 'function') {\n    formats = {\n      ...formats,\n      ...blot.formats(),\n    };\n    if (filter) {\n      // exclude syntax highlighting from deltas and getFormat()\n      delete formats['code-token'];\n    }\n  }\n  if (\n    blot.parent == null ||\n    blot.parent.statics.blotName === 'scroll' ||\n    blot.parent.statics.scope !== blot.statics.scope\n  ) {\n    return formats;\n  }\n  return bubbleFormats(blot.parent, formats, filter);\n}\n\nexport { blockDelta, bubbleFormats, BlockEmbed, Block as default };\n", "import { EmbedBlot } from 'parchment';\n\nclass Break extends EmbedBlot {\n  static value() {\n    return undefined;\n  }\n\n  optimize() {\n    if (this.prev || this.next) {\n      this.remove();\n    }\n  }\n\n  length() {\n    return 0;\n  }\n\n  value() {\n    return '';\n  }\n}\nBreak.blotName = 'break';\nBreak.tagName = 'BR';\n\nexport default Break;\n", "import { ContainerBlot } from 'parchment';\n\nclass Container extends ContainerBlot {}\n\nexport default Container;\n", "import { EmbedBlot, Scope } from 'parchment';\nimport type { Parent, ScrollBlot } from 'parchment';\nimport type Selection from '../core/selection.js';\nimport TextBlot from './text.js';\nimport type { EmbedContextRange } from './embed.js';\n\nclass Cursor extends EmbedBlot {\n  static blotName = 'cursor';\n  static className = 'ql-cursor';\n  static tagName = 'span';\n  static CONTENTS = '\\uFEFF'; // Zero width no break space\n\n  static value() {\n    return undefined;\n  }\n\n  selection: Selection;\n  textNode: Text;\n  savedLength: number;\n\n  constructor(scroll: ScrollBlot, domNode: HTMLElement, selection: Selection) {\n    super(scroll, domNode);\n    this.selection = selection;\n    this.textNode = document.createTextNode(Cursor.CONTENTS);\n    this.domNode.appendChild(this.textNode);\n    this.savedLength = 0;\n  }\n\n  detach() {\n    // super.detach() will also clear domNode.__blot\n    if (this.parent != null) this.parent.removeChild(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (this.savedLength !== 0) {\n      super.format(name, value);\n      return;\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let target: Parent | this = this;\n    let index = 0;\n    while (target != null && target.statics.scope !== Scope.BLOCK_BLOT) {\n      index += target.offset(target.parent);\n      target = target.parent;\n    }\n    if (target != null) {\n      this.savedLength = Cursor.CONTENTS.length;\n      // @ts-expect-error TODO: allow empty context in Parchment\n      target.optimize();\n      target.formatAt(index, Cursor.CONTENTS.length, name, value);\n      this.savedLength = 0;\n    }\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.textNode) return 0;\n    return super.index(node, offset);\n  }\n\n  length() {\n    return this.savedLength;\n  }\n\n  position(): [Text, number] {\n    return [this.textNode, this.textNode.data.length];\n  }\n\n  remove() {\n    super.remove();\n    // @ts-expect-error Fix me later\n    this.parent = null;\n  }\n\n  restore(): EmbedContextRange | null {\n    if (this.selection.composing || this.parent == null) return null;\n    const range = this.selection.getNativeRange();\n    // Browser may push down styles/nodes inside the cursor blot.\n    // https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#push-down-values\n    while (\n      this.domNode.lastChild != null &&\n      this.domNode.lastChild !== this.textNode\n    ) {\n      // @ts-expect-error Fix me later\n      this.domNode.parentNode.insertBefore(\n        this.domNode.lastChild,\n        this.domNode,\n      );\n    }\n\n    const prevTextBlot = this.prev instanceof TextBlot ? this.prev : null;\n    const prevTextLength = prevTextBlot ? prevTextBlot.length() : 0;\n    const nextTextBlot = this.next instanceof TextBlot ? this.next : null;\n    // @ts-expect-error TODO: make TextBlot.text public\n    const nextText = nextTextBlot ? nextTextBlot.text : '';\n    const { textNode } = this;\n    // take text from inside this blot and reset it\n    const newText = textNode.data.split(Cursor.CONTENTS).join('');\n    textNode.data = Cursor.CONTENTS;\n\n    // proactively merge TextBlots around cursor so that optimization\n    // doesn't lose the cursor.  the reason we are here in cursor.restore\n    // could be that the user clicked in prevTextBlot or nextTextBlot, or\n    // the user typed something.\n    let mergedTextBlot;\n    if (prevTextBlot) {\n      mergedTextBlot = prevTextBlot;\n      if (newText || nextTextBlot) {\n        prevTextBlot.insertAt(prevTextBlot.length(), newText + nextText);\n        if (nextTextBlot) {\n          nextTextBlot.remove();\n        }\n      }\n    } else if (nextTextBlot) {\n      mergedTextBlot = nextTextBlot;\n      nextTextBlot.insertAt(0, newText);\n    } else {\n      const newTextNode = document.createTextNode(newText);\n      mergedTextBlot = this.scroll.create(newTextNode);\n      this.parent.insertBefore(mergedTextBlot, this);\n    }\n\n    this.remove();\n    if (range) {\n      // calculate selection to restore\n      const remapOffset = (node: Node, offset: number) => {\n        if (prevTextBlot && node === prevTextBlot.domNode) {\n          return offset;\n        }\n        if (node === textNode) {\n          return prevTextLength + offset - 1;\n        }\n        if (nextTextBlot && node === nextTextBlot.domNode) {\n          return prevTextLength + newText.length + offset;\n        }\n        return null;\n      };\n\n      const start = remapOffset(range.start.node, range.start.offset);\n      const end = remapOffset(range.end.node, range.end.offset);\n      if (start !== null && end !== null) {\n        return {\n          startNode: mergedTextBlot.domNode,\n          startOffset: start,\n          endNode: mergedTextBlot.domNode,\n          endOffset: end,\n        };\n      }\n    }\n    return null;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.textNode\n        );\n      })\n    ) {\n      const range = this.restore();\n      if (range) context.range = range;\n    }\n  }\n\n  // Avoid .ql-cursor being a descendant of `<a/>`.\n  // The reason is Safari pushes down `<a/>` on text insertion.\n  // That will cause DOM nodes not sync with the model.\n  //\n  // For example ({I} is the caret), given the markup:\n  //    <a><span class=\"ql-cursor\">\\uFEFF{I}</span></a>\n  // When typing a char \"x\", `<a/>` will be pushed down inside the `<span>` first:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF{I}</a></span>\n  // And then \"x\" will be inserted after `<a/>`:\n  //    <span class=\"ql-cursor\"><a>\\uFEFF</a>d{I}</span>\n  optimize(context?: unknown) {\n    // @ts-expect-error Fix me later\n    super.optimize(context);\n\n    let { parent } = this;\n    while (parent) {\n      if (parent.domNode.tagName === 'A') {\n        this.savedLength = Cursor.CONTENTS.length;\n        // @ts-expect-error TODO: make isolate generic\n        parent.isolate(this.offset(parent), this.length()).unwrap();\n        this.savedLength = 0;\n        break;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  value() {\n    return '';\n  }\n}\n\nexport default Cursor;\n", "import type { ScrollBlot } from 'parchment';\nimport { EmbedBlot } from 'parchment';\nimport TextBlot from './text.js';\n\nconst GUARD_TEXT = '\\uFEFF';\n\nexport interface EmbedContextRange {\n  startNode: Node | Text;\n  startOffset: number;\n  endNode?: Node | Text;\n  endOffset?: number;\n}\n\nclass Embed extends EmbedBlot {\n  contentNode: HTMLSpanElement;\n  leftGuard: Text;\n  rightGuard: Text;\n\n  constructor(scroll: ScrollBlot, node: Node) {\n    super(scroll, node);\n    this.contentNode = document.createElement('span');\n    this.contentNode.setAttribute('contenteditable', 'false');\n    Array.from(this.domNode.childNodes).forEach((childNode) => {\n      this.contentNode.appendChild(childNode);\n    });\n    this.leftGuard = document.createTextNode(GUARD_TEXT);\n    this.rightGuard = document.createTextNode(GUARD_TEXT);\n    this.domNode.appendChild(this.leftGuard);\n    this.domNode.appendChild(this.contentNode);\n    this.domNode.appendChild(this.rightGuard);\n  }\n\n  index(node: Node, offset: number) {\n    if (node === this.leftGuard) return 0;\n    if (node === this.rightGuard) return 1;\n    return super.index(node, offset);\n  }\n\n  restore(node: Text): EmbedContextRange | null {\n    let range: EmbedContextRange | null = null;\n    let textNode: Text;\n    const text = node.data.split(GUARD_TEXT).join('');\n    if (node === this.leftGuard) {\n      if (this.prev instanceof TextBlot) {\n        const prevLength = this.prev.length();\n        this.prev.insertAt(prevLength, text);\n        range = {\n          startNode: this.prev.domNode,\n          startOffset: prevLength + text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    } else if (node === this.rightGuard) {\n      if (this.next instanceof TextBlot) {\n        this.next.insertAt(0, text);\n        range = {\n          startNode: this.next.domNode,\n          startOffset: text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this.next);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    }\n    node.data = GUARD_TEXT;\n    return range;\n  }\n\n  update(mutations: MutationRecord[], context: Record<string, unknown>) {\n    mutations.forEach((mutation) => {\n      if (\n        mutation.type === 'characterData' &&\n        (mutation.target === this.leftGuard ||\n          mutation.target === this.rightGuard)\n      ) {\n        const range = this.restore(mutation.target as Text);\n        if (range) context.range = range;\n      }\n    });\n  }\n}\n\nexport default Embed;\n", "import { EmbedBlot, InlineBlot, Scope } from 'parchment';\nimport type { BlotConstructor } from 'parchment';\nimport Break from './break.js';\nimport Text from './text.js';\n\nclass Inline extends InlineBlot {\n  static allowedChildren: BlotConstructor[] = [Inline, Break, EmbedBlot, Text];\n  // Lower index means deeper in the DOM tree, since not found (-1) is for embeds\n  static order = [\n    'cursor',\n    'inline', // Must be lower\n    'link', // Chrome wants <a> to be lower\n    'underline',\n    'strike',\n    'italic',\n    'bold',\n    'script',\n    'code', // Must be higher\n  ];\n\n  static compare(self: string, other: string) {\n    const selfIndex = Inline.order.indexOf(self);\n    const otherIndex = Inline.order.indexOf(other);\n    if (selfIndex >= 0 || otherIndex >= 0) {\n      return selfIndex - otherIndex;\n    }\n    if (self === other) {\n      return 0;\n    }\n    if (self < other) {\n      return -1;\n    }\n    return 1;\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (\n      Inline.compare(this.statics.blotName, name) < 0 &&\n      this.scroll.query(name, Scope.BLOT)\n    ) {\n      const blot = this.isolate(index, length);\n      if (value) {\n        blot.wrap(name, value);\n      }\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (\n      this.parent instanceof Inline &&\n      Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0\n    ) {\n      const parent = this.parent.isolate(this.offset(), this.length());\n      // @ts-expect-error TODO: make isolate generic\n      this.moveChildren(parent);\n      parent.wrap(this);\n    }\n  }\n}\n\nexport default Inline;\n", "import { TextBlot } from 'parchment';\n\nclass Text extends TextBlot {}\n\nfunction escapeText(text: string) {\n  return text.replace(/[&<>\"']/g, (s) => {\n    // https://lodash.com/docs#escape\n    const entityMap: Record<string, string> = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;',\n    };\n    return entityMap[s];\n  });\n}\n\nexport { Text as default, escapeText };\n", "import { ContainerBlot, LeafBlot, Scope, ScrollBlot } from 'parchment';\nimport type { Blot, Parent, EmbedBlot, ParentBlot, Registry } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta';\nimport Emitter from '../core/emitter.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport Block, { BlockEmbed, bubbleFormats } from './block.js';\nimport Break from './break.js';\nimport Container from './container.js';\n\ntype RenderBlock =\n  | {\n      type: 'blockEmbed';\n      attributes: AttributeMap;\n      key: string;\n      value: unknown;\n    }\n  | { type: 'block'; attributes: AttributeMap; delta: Delta };\n\nfunction isLine(blot: unknown): blot is Block | BlockEmbed {\n  return blot instanceof Block || blot instanceof BlockEmbed;\n}\n\ninterface UpdatableEmbed {\n  updateContent(change: unknown): void;\n}\n\nfunction isUpdatable(blot: Blot): blot is Blot & UpdatableEmbed {\n  return typeof (blot as unknown as any).updateContent === 'function';\n}\n\nclass Scroll extends ScrollBlot {\n  static blotName = 'scroll';\n  static className = 'ql-editor';\n  static tagName = 'DIV';\n  static defaultChild = Block;\n  static allowedChildren = [Block, BlockEmbed, Container];\n\n  emitter: Emitter;\n  batch: false | MutationRecord[];\n\n  constructor(\n    registry: Registry,\n    domNode: HTMLDivElement,\n    { emitter }: { emitter: Emitter },\n  ) {\n    super(registry, domNode);\n    this.emitter = emitter;\n    this.batch = false;\n    this.optimize();\n    this.enable();\n    this.domNode.addEventListener('dragstart', (e) => this.handleDragStart(e));\n  }\n\n  batchStart() {\n    if (!Array.isArray(this.batch)) {\n      this.batch = [];\n    }\n  }\n\n  batchEnd() {\n    if (!this.batch) return;\n    const mutations = this.batch;\n    this.batch = false;\n    this.update(mutations);\n  }\n\n  emitMount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_MOUNT, blot);\n  }\n\n  emitUnmount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_UNMOUNT, blot);\n  }\n\n  emitEmbedUpdate(blot: Blot, change: unknown) {\n    this.emitter.emit(Emitter.events.SCROLL_EMBED_UPDATE, blot, change);\n  }\n\n  deleteAt(index: number, length: number) {\n    const [first, offset] = this.line(index);\n    const [last] = this.line(index + length);\n    super.deleteAt(index, length);\n    if (last != null && first !== last && offset > 0) {\n      if (first instanceof BlockEmbed || last instanceof BlockEmbed) {\n        this.optimize();\n        return;\n      }\n      const ref =\n        last.children.head instanceof Break ? null : last.children.head;\n      // @ts-expect-error\n      first.moveChildren(last, ref);\n      // @ts-expect-error\n      first.remove();\n    }\n    this.optimize();\n  }\n\n  enable(enabled = true) {\n    this.domNode.setAttribute('contenteditable', enabled ? 'true' : 'false');\n  }\n\n  formatAt(index: number, length: number, format: string, value: unknown) {\n    super.formatAt(index, length, format, value);\n    this.optimize();\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (index >= this.length()) {\n      if (def == null || this.scroll.query(value, Scope.BLOCK) == null) {\n        const blot = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(blot);\n        if (def == null && value.endsWith('\\n')) {\n          blot.insertAt(0, value.slice(0, -1), def);\n        } else {\n          blot.insertAt(0, value, def);\n        }\n      } else {\n        const embed = this.scroll.create(value, def);\n        this.appendChild(embed);\n      }\n    } else {\n      super.insertAt(index, value, def);\n    }\n    this.optimize();\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    if (blot.statics.scope === Scope.INLINE_BLOT) {\n      const wrapper = this.scroll.create(\n        this.statics.defaultChild.blotName,\n      ) as Parent;\n      wrapper.appendChild(blot);\n      super.insertBefore(wrapper, ref);\n    } else {\n      super.insertBefore(blot, ref);\n    }\n  }\n\n  insertContents(index: number, delta: Delta) {\n    const renderBlocks = this.deltaToRenderBlocks(\n      delta.concat(new Delta().insert('\\n')),\n    );\n    const last = renderBlocks.pop();\n    if (last == null) return;\n\n    this.batchStart();\n\n    const first = renderBlocks.shift();\n    if (first) {\n      const shouldInsertNewlineChar =\n        first.type === 'block' &&\n        (first.delta.length() === 0 ||\n          (!this.descendant(BlockEmbed, index)[0] && index < this.length()));\n      const delta =\n        first.type === 'block'\n          ? first.delta\n          : new Delta().insert({ [first.key]: first.value });\n      insertInlineContents(this, index, delta);\n      const newlineCharLength = first.type === 'block' ? 1 : 0;\n      const lineEndIndex = index + delta.length() + newlineCharLength;\n      if (shouldInsertNewlineChar) {\n        this.insertAt(lineEndIndex - 1, '\\n');\n      }\n\n      const formats = bubbleFormats(this.line(index)[0]);\n      const attributes = AttributeMap.diff(formats, first.attributes) || {};\n      Object.keys(attributes).forEach((name) => {\n        this.formatAt(lineEndIndex - 1, 1, name, attributes[name]);\n      });\n\n      index = lineEndIndex;\n    }\n\n    let [refBlot, refBlotOffset] = this.children.find(index);\n    if (renderBlocks.length) {\n      if (refBlot) {\n        refBlot = refBlot.split(refBlotOffset);\n        refBlotOffset = 0;\n      }\n\n      renderBlocks.forEach((renderBlock) => {\n        if (renderBlock.type === 'block') {\n          const block = this.createBlock(\n            renderBlock.attributes,\n            refBlot || undefined,\n          );\n          insertInlineContents(block, 0, renderBlock.delta);\n        } else {\n          const blockEmbed = this.create(\n            renderBlock.key,\n            renderBlock.value,\n          ) as EmbedBlot;\n          this.insertBefore(blockEmbed, refBlot || undefined);\n          Object.keys(renderBlock.attributes).forEach((name) => {\n            blockEmbed.format(name, renderBlock.attributes[name]);\n          });\n        }\n      });\n    }\n\n    if (last.type === 'block' && last.delta.length()) {\n      const offset = refBlot\n        ? refBlot.offset(refBlot.scroll) + refBlotOffset\n        : this.length();\n      insertInlineContents(this, offset, last.delta);\n    }\n\n    this.batchEnd();\n    this.optimize();\n  }\n\n  isEnabled() {\n    return this.domNode.getAttribute('contenteditable') === 'true';\n  }\n\n  leaf(index: number): [LeafBlot | null, number] {\n    const last = this.path(index).pop();\n    if (!last) {\n      return [null, -1];\n    }\n\n    const [blot, offset] = last;\n    return blot instanceof LeafBlot ? [blot, offset] : [null, -1];\n  }\n\n  line(index: number): [Block | BlockEmbed | null, number] {\n    if (index === this.length()) {\n      return this.line(index - 1);\n    }\n    // @ts-expect-error TODO: make descendant() generic\n    return this.descendant(isLine, index);\n  }\n\n  lines(index = 0, length = Number.MAX_VALUE): (Block | BlockEmbed)[] {\n    const getLines = (\n      blot: ParentBlot,\n      blotIndex: number,\n      blotLength: number,\n    ) => {\n      let lines: (Block | BlockEmbed)[] = [];\n      let lengthLeft = blotLength;\n      blot.children.forEachAt(\n        blotIndex,\n        blotLength,\n        (child, childIndex, childLength) => {\n          if (isLine(child)) {\n            lines.push(child);\n          } else if (child instanceof ContainerBlot) {\n            lines = lines.concat(getLines(child, childIndex, lengthLeft));\n          }\n          lengthLeft -= childLength;\n        },\n      );\n      return lines;\n    };\n    return getLines(this, index, length);\n  }\n\n  optimize(context?: { [key: string]: any }): void;\n  optimize(\n    mutations?: MutationRecord[],\n    context?: { [key: string]: any },\n  ): void;\n  optimize(mutations = [], context = {}) {\n    if (this.batch) return;\n    super.optimize(mutations, context);\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_OPTIMIZE, mutations, context);\n    }\n  }\n\n  path(index: number) {\n    return super.path(index).slice(1); // Exclude self\n  }\n\n  remove() {\n    // Never remove self\n  }\n\n  update(source?: EmitterSource): void;\n  update(mutations?: MutationRecord[]): void;\n  update(mutations?: MutationRecord[] | EmitterSource): void {\n    if (this.batch) {\n      if (Array.isArray(mutations)) {\n        this.batch = this.batch.concat(mutations);\n      }\n      return;\n    }\n    let source: EmitterSource = Emitter.sources.USER;\n    if (typeof mutations === 'string') {\n      source = mutations;\n    }\n    if (!Array.isArray(mutations)) {\n      mutations = this.observer.takeRecords();\n    }\n    mutations = mutations.filter(({ target }) => {\n      const blot = this.find(target, true);\n      return blot && !isUpdatable(blot);\n    });\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_BEFORE_UPDATE, source, mutations);\n    }\n    super.update(mutations.concat([])); // pass copy\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_UPDATE, source, mutations);\n    }\n  }\n\n  updateEmbedAt(index: number, key: string, change: unknown) {\n    // Currently it only supports top-level embeds (BlockEmbed).\n    // We can update `ParentBlot` in parchment to support inline embeds.\n    const [blot] = this.descendant((b: Blot) => b instanceof BlockEmbed, index);\n    if (blot && blot.statics.blotName === key && isUpdatable(blot)) {\n      blot.updateContent(change);\n    }\n  }\n\n  protected handleDragStart(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  private deltaToRenderBlocks(delta: Delta) {\n    const renderBlocks: RenderBlock[] = [];\n\n    let currentBlockDelta = new Delta();\n    delta.forEach((op) => {\n      const insert = op?.insert;\n      if (!insert) return;\n      if (typeof insert === 'string') {\n        const splitted = insert.split('\\n');\n        splitted.slice(0, -1).forEach((text) => {\n          currentBlockDelta.insert(text, op.attributes);\n          renderBlocks.push({\n            type: 'block',\n            delta: currentBlockDelta,\n            attributes: op.attributes ?? {},\n          });\n          currentBlockDelta = new Delta();\n        });\n        const last = splitted[splitted.length - 1];\n        if (last) {\n          currentBlockDelta.insert(last, op.attributes);\n        }\n      } else {\n        const key = Object.keys(insert)[0];\n        if (!key) return;\n        if (this.query(key, Scope.INLINE)) {\n          currentBlockDelta.push(op);\n        } else {\n          if (currentBlockDelta.length()) {\n            renderBlocks.push({\n              type: 'block',\n              delta: currentBlockDelta,\n              attributes: {},\n            });\n          }\n          currentBlockDelta = new Delta();\n          renderBlocks.push({\n            type: 'blockEmbed',\n            key,\n            value: insert[key],\n            attributes: op.attributes ?? {},\n          });\n        }\n      }\n    });\n\n    if (currentBlockDelta.length()) {\n      renderBlocks.push({\n        type: 'block',\n        delta: currentBlockDelta,\n        attributes: {},\n      });\n    }\n\n    return renderBlocks;\n  }\n\n  private createBlock(attributes: AttributeMap, refBlot?: Blot) {\n    let blotName: string | undefined;\n    const formats: AttributeMap = {};\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      const isBlockBlot = this.query(key, Scope.BLOCK & Scope.BLOT) != null;\n      if (isBlockBlot) {\n        blotName = key;\n      } else {\n        formats[key] = value;\n      }\n    });\n\n    const block = this.create(\n      blotName || this.statics.defaultChild.blotName,\n      blotName ? attributes[blotName] : undefined,\n    ) as ParentBlot;\n\n    this.insertBefore(block, refBlot || undefined);\n\n    const length = block.length();\n    Object.entries(formats).forEach(([key, value]) => {\n      block.formatAt(0, length, key, value);\n    });\n\n    return block;\n  }\n}\n\nfunction insertInlineContents(\n  parent: ParentBlot,\n  index: number,\n  inlineContents: Delta,\n) {\n  inlineContents.reduce((index, op) => {\n    const length = Op.length(op);\n    let attributes = op.attributes || {};\n    if (op.insert != null) {\n      if (typeof op.insert === 'string') {\n        const text = op.insert;\n        parent.insertAt(index, text);\n        const [leaf] = parent.descendant(LeafBlot, index);\n        const formats = bubbleFormats(leaf);\n        attributes = AttributeMap.diff(formats, attributes) || {};\n      } else if (typeof op.insert === 'object') {\n        const key = Object.keys(op.insert)[0]; // There should only be one key\n        if (key == null) return index;\n        parent.insertAt(index, key, op.insert[key]);\n        const isInlineEmbed = parent.scroll.query(key, Scope.INLINE) != null;\n        if (isInlineEmbed) {\n          const [leaf] = parent.descendant(LeafBlot, index);\n          const formats = bubbleFormats(leaf);\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        }\n      }\n    }\n    Object.keys(attributes).forEach((key) => {\n      parent.formatAt(index, length, key, attributes[key]);\n    });\n    return index + length;\n  }, index);\n}\n\nexport default Scroll;\n", "import { Scope } from 'parchment';\nimport type Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type Scroll from '../blots/scroll.js';\nimport type { Range } from '../core/selection.js';\n\nexport interface HistoryOptions {\n  userOnly: boolean;\n  delay: number;\n  maxStack: number;\n}\n\nexport interface StackItem {\n  delta: Delta;\n  range: Range | null;\n}\n\ninterface Stack {\n  undo: StackItem[];\n  redo: StackItem[];\n}\n\nclass History extends Module<HistoryOptions> {\n  static DEFAULTS: HistoryOptions = {\n    delay: 1000,\n    maxStack: 100,\n    userOnly: false,\n  };\n\n  lastRecorded = 0;\n  ignoreChange = false;\n  stack: Stack = { undo: [], redo: [] };\n  currentRange: Range | null = null;\n\n  constructor(quill: Quill, options: Partial<HistoryOptions>) {\n    super(quill, options);\n    this.quill.on(\n      Quill.events.EDITOR_CHANGE,\n      (eventName, value, oldValue, source) => {\n        if (eventName === Quill.events.SELECTION_CHANGE) {\n          if (value && source !== Quill.sources.SILENT) {\n            this.currentRange = value;\n          }\n        } else if (eventName === Quill.events.TEXT_CHANGE) {\n          if (!this.ignoreChange) {\n            if (!this.options.userOnly || source === Quill.sources.USER) {\n              this.record(value, oldValue);\n            } else {\n              this.transform(value);\n            }\n          }\n\n          this.currentRange = transformRange(this.currentRange, value);\n        }\n      },\n    );\n\n    this.quill.keyboard.addBinding(\n      { key: 'z', shortKey: true },\n      this.undo.bind(this),\n    );\n    this.quill.keyboard.addBinding(\n      { key: ['z', 'Z'], shortKey: true, shiftKey: true },\n      this.redo.bind(this),\n    );\n    if (/Win/i.test(navigator.platform)) {\n      this.quill.keyboard.addBinding(\n        { key: 'y', shortKey: true },\n        this.redo.bind(this),\n      );\n    }\n\n    this.quill.root.addEventListener('beforeinput', (event) => {\n      if (event.inputType === 'historyUndo') {\n        this.undo();\n        event.preventDefault();\n      } else if (event.inputType === 'historyRedo') {\n        this.redo();\n        event.preventDefault();\n      }\n    });\n  }\n\n  change(source: 'undo' | 'redo', dest: 'redo' | 'undo') {\n    if (this.stack[source].length === 0) return;\n    const item = this.stack[source].pop();\n    if (!item) return;\n    const base = this.quill.getContents();\n    const inverseDelta = item.delta.invert(base);\n    this.stack[dest].push({\n      delta: inverseDelta,\n      range: transformRange(item.range, inverseDelta),\n    });\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.updateContents(item.delta, Quill.sources.USER);\n    this.ignoreChange = false;\n\n    this.restoreSelection(item);\n  }\n\n  clear() {\n    this.stack = { undo: [], redo: [] };\n  }\n\n  cutoff() {\n    this.lastRecorded = 0;\n  }\n\n  record(changeDelta: Delta, oldDelta: Delta) {\n    if (changeDelta.ops.length === 0) return;\n    this.stack.redo = [];\n    let undoDelta = changeDelta.invert(oldDelta);\n    let undoRange = this.currentRange;\n    const timestamp = Date.now();\n    if (\n      // @ts-expect-error Fix me later\n      this.lastRecorded + this.options.delay > timestamp &&\n      this.stack.undo.length > 0\n    ) {\n      const item = this.stack.undo.pop();\n      if (item) {\n        undoDelta = undoDelta.compose(item.delta);\n        undoRange = item.range;\n      }\n    } else {\n      this.lastRecorded = timestamp;\n    }\n    if (undoDelta.length() === 0) return;\n    this.stack.undo.push({ delta: undoDelta, range: undoRange });\n    // @ts-expect-error Fix me later\n    if (this.stack.undo.length > this.options.maxStack) {\n      this.stack.undo.shift();\n    }\n  }\n\n  redo() {\n    this.change('redo', 'undo');\n  }\n\n  transform(delta: Delta) {\n    transformStack(this.stack.undo, delta);\n    transformStack(this.stack.redo, delta);\n  }\n\n  undo() {\n    this.change('undo', 'redo');\n  }\n\n  protected restoreSelection(stackItem: StackItem) {\n    if (stackItem.range) {\n      this.quill.setSelection(stackItem.range, Quill.sources.USER);\n    } else {\n      const index = getLastChangeIndex(this.quill.scroll, stackItem.delta);\n      this.quill.setSelection(index, Quill.sources.USER);\n    }\n  }\n}\n\nfunction transformStack(stack: StackItem[], delta: Delta) {\n  let remoteDelta = delta;\n  for (let i = stack.length - 1; i >= 0; i -= 1) {\n    const oldItem = stack[i];\n    stack[i] = {\n      delta: remoteDelta.transform(oldItem.delta, true),\n      range: oldItem.range && transformRange(oldItem.range, remoteDelta),\n    };\n    remoteDelta = oldItem.delta.transform(remoteDelta);\n    if (stack[i].delta.length() === 0) {\n      stack.splice(i, 1);\n    }\n  }\n}\n\nfunction endsWithNewlineChange(scroll: Scroll, delta: Delta) {\n  const lastOp = delta.ops[delta.ops.length - 1];\n  if (lastOp == null) return false;\n  if (lastOp.insert != null) {\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');\n  }\n  if (lastOp.attributes != null) {\n    return Object.keys(lastOp.attributes).some((attr) => {\n      return scroll.query(attr, Scope.BLOCK) != null;\n    });\n  }\n  return false;\n}\n\nfunction getLastChangeIndex(scroll: Scroll, delta: Delta) {\n  const deleteLength = delta.reduce((length, op) => {\n    return length + (op.delete || 0);\n  }, 0);\n  let changeIndex = delta.length() - deleteLength;\n  if (endsWithNewlineChange(scroll, delta)) {\n    changeIndex -= 1;\n  }\n  return changeIndex;\n}\n\nfunction transformRange(range: Range | null, delta: Delta) {\n  if (!range) return range;\n  const start = delta.transformPosition(range.index);\n  const end = delta.transformPosition(range.index + range.length);\n  return { index: start, length: end - start };\n}\n\nexport { History as default, getLastChangeIndex };\n", "import Delta from 'quill-delta';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\ninterface UploaderOptions {\n  mimetypes: string[];\n  handler: (this: { quill: Quill }, range: Range, files: File[]) => void;\n}\n\nclass Uploader extends Module<UploaderOptions> {\n  static DEFAULTS: UploaderOptions;\n\n  constructor(quill: Quill, options: Partial<UploaderOptions>) {\n    super(quill, options);\n    quill.root.addEventListener('drop', (e) => {\n      e.preventDefault();\n      let native: ReturnType<typeof document.createRange> | null = null;\n      if (document.caretRangeFromPoint) {\n        native = document.caretRangeFromPoint(e.clientX, e.clientY);\n        // @ts-expect-error\n      } else if (document.caretPositionFromPoint) {\n        // @ts-expect-error\n        const position = document.caretPositionFromPoint(e.clientX, e.clientY);\n        native = document.createRange();\n        native.setStart(position.offsetNode, position.offset);\n        native.setEnd(position.offsetNode, position.offset);\n      }\n\n      const normalized = native && quill.selection.normalizeNative(native);\n      if (normalized) {\n        const range = quill.selection.normalizedToRange(normalized);\n        if (e.dataTransfer?.files) {\n          this.upload(range, e.dataTransfer.files);\n        }\n      }\n    });\n  }\n\n  upload(range: Range, files: FileList | File[]) {\n    const uploads: File[] = [];\n    Array.from(files).forEach((file) => {\n      if (file && this.options.mimetypes?.includes(file.type)) {\n        uploads.push(file);\n      }\n    });\n    if (uploads.length > 0) {\n      // @ts-expect-error Fix me later\n      this.options.handler.call(this, range, uploads);\n    }\n  }\n}\n\nUploader.DEFAULTS = {\n  mimetypes: ['image/png', 'image/jpeg'],\n  handler(range: Range, files: File[]) {\n    if (!this.quill.scroll.query('image')) {\n      return;\n    }\n    const promises = files.map<Promise<string>>((file) => {\n      return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result as string);\n        };\n        reader.readAsDataURL(file);\n      });\n    });\n    Promise.all(promises).then((images) => {\n      const update = images.reduce((delta: Delta, image) => {\n        return delta.insert({ image });\n      }, new Delta().retain(range.index).delete(range.length)) as Delta;\n      this.quill.updateContents(update, Emitter.sources.USER);\n      this.quill.setSelection(\n        range.index + images.length,\n        Emitter.sources.SILENT,\n      );\n    });\n  },\n};\n\nexport default Uploader;\n", "import Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { deleteRange } from './keyboard.js';\n\nconst INSERT_TYPES = ['insertText', 'insertReplacementText'];\n\nclass Input extends Module {\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    quill.root.addEventListener('beforeinput', (event) => {\n      this.handleBeforeInput(event);\n    });\n\n    // Gboard with English input on Android triggers `compositionstart` sometimes even\n    // users are not going to type anything.\n    if (!/Android/i.test(navigator.userAgent)) {\n      quill.on(Quill.events.COMPOSITION_BEFORE_START, () => {\n        this.handleCompositionStart();\n      });\n    }\n  }\n\n  private deleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n  }\n\n  private replaceText(range: Range, text = '') {\n    if (range.length === 0) return false;\n\n    if (text) {\n      // Follow the native behavior that inherits the formats of the first character\n      const formats = this.quill.getFormat(range.index, 1);\n      this.deleteRange(range);\n      this.quill.updateContents(\n        new Delta().retain(range.index).insert(text, formats),\n        Quill.sources.USER,\n      );\n    } else {\n      this.deleteRange(range);\n    }\n\n    this.quill.setSelection(range.index + text.length, 0, Quill.sources.SILENT);\n    return true;\n  }\n\n  private handleBeforeInput(event: InputEvent) {\n    if (\n      this.quill.composition.isComposing ||\n      event.defaultPrevented ||\n      !INSERT_TYPES.includes(event.inputType)\n    ) {\n      return;\n    }\n\n    const staticRange = event.getTargetRanges\n      ? event.getTargetRanges()[0]\n      : null;\n    if (!staticRange || staticRange.collapsed === true) {\n      return;\n    }\n\n    const text = getPlainTextFromInputEvent(event);\n    if (text == null) {\n      return;\n    }\n    const normalized = this.quill.selection.normalizeNative(staticRange);\n    const range = normalized\n      ? this.quill.selection.normalizedToRange(normalized)\n      : null;\n    if (range && this.replaceText(range, text)) {\n      event.preventDefault();\n    }\n  }\n\n  private handleCompositionStart() {\n    const range = this.quill.getSelection();\n    if (range) {\n      this.replaceText(range);\n    }\n  }\n}\n\nfunction getPlainTextFromInputEvent(event: InputEvent) {\n  // When `inputType` is \"insertText\":\n  // - `event.data` should be string (Safari uses `event.dataTransfer`).\n  // - `event.dataTransfer` should be null.\n  // When `inputType` is \"insertReplacementText\":\n  // - `event.data` should be null.\n  // - `event.dataTransfer` should contain \"text/plain\" data.\n\n  if (typeof event.data === 'string') {\n    return event.data;\n  }\n  if (event.dataTransfer?.types.includes('text/plain')) {\n    return event.dataTransfer.getData('text/plain');\n  }\n  return null;\n}\n\nexport default Input;\n", "import { ParentBlot } from 'parchment';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\n\nconst isMac = /Mac/i.test(navigator.platform);\n\n// Export for testing\nexport const TTL_FOR_VALID_SELECTION_CHANGE = 100;\n\n// A loose check to determine if the shortcut can move the caret before a UI node:\n// <ANY_PARENT>[CARET]<div class=\"ql-ui\"></div>[CONTENT]</ANY_PARENT>\nconst canMoveCaretBeforeUINode = (event: KeyboardEvent) => {\n  if (\n    event.key === 'ArrowLeft' ||\n    event.key === 'ArrowRight' || // RTL scripts or moving from the end of the previous line\n    event.key === 'ArrowUp' ||\n    event.key === 'ArrowDown' ||\n    event.key === 'Home'\n  ) {\n    return true;\n  }\n\n  if (isMac && event.key === 'a' && event.ctrlKey === true) {\n    return true;\n  }\n\n  return false;\n};\n\nclass UINode extends Module {\n  isListening = false;\n  selectionChangeDeadline = 0;\n\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    this.handleArrowKeys();\n    this.handleNavigationShortcuts();\n  }\n\n  private handleArrowKeys() {\n    this.quill.keyboard.addBinding({\n      key: ['ArrowLeft', 'ArrowRight'],\n      offset: 0,\n      shiftKey: null,\n      handler(range, { line, event }) {\n        if (!(line instanceof ParentBlot) || !line.uiNode) {\n          return true;\n        }\n\n        const isRTL = getComputedStyle(line.domNode)['direction'] === 'rtl';\n        if (\n          (isRTL && event.key !== 'ArrowRight') ||\n          (!isRTL && event.key !== 'ArrowLeft')\n        ) {\n          return true;\n        }\n\n        this.quill.setSelection(\n          range.index - 1,\n          range.length + (event.shiftKey ? 1 : 0),\n          Quill.sources.USER,\n        );\n        return false;\n      },\n    });\n  }\n\n  private handleNavigationShortcuts() {\n    this.quill.root.addEventListener('keydown', (event) => {\n      if (!event.defaultPrevented && canMoveCaretBeforeUINode(event)) {\n        this.ensureListeningToSelectionChange();\n      }\n    });\n  }\n\n  /**\n   * We only listen to the `selectionchange` event when\n   * there is an intention of moving the caret to the beginning using shortcuts.\n   * This is primarily implemented to prevent infinite loops, as we are changing\n   * the selection within the handler of a `selectionchange` event.\n   */\n  private ensureListeningToSelectionChange() {\n    this.selectionChangeDeadline = Date.now() + TTL_FOR_VALID_SELECTION_CHANGE;\n\n    if (this.isListening) return;\n    this.isListening = true;\n\n    const listener = () => {\n      this.isListening = false;\n\n      if (Date.now() <= this.selectionChangeDeadline) {\n        this.handleSelectionChange();\n      }\n    };\n\n    document.addEventListener('selectionchange', listener, {\n      once: true,\n    });\n  }\n\n  private handleSelectionChange() {\n    const selection = document.getSelection();\n    if (!selection) return;\n    const range = selection.getRangeAt(0);\n    if (range.collapsed !== true || range.startOffset !== 0) return;\n\n    const line = this.quill.scroll.find(range.startContainer);\n    if (!(line instanceof ParentBlot) || !line.uiNode) return;\n\n    const newRange = document.createRange();\n    newRange.setStartAfter(line.uiNode);\n    newRange.setEndAfter(line.uiNode);\n    selection.removeAllRanges();\n    selection.addRange(newRange);\n  }\n}\n\nexport default UINode;\n", "import Quill, { Parchment, Range } from './core/quill.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core/quill.js';\n\nimport Block, { BlockEmbed } from './blots/block.js';\nimport Break from './blots/break.js';\nimport Container from './blots/container.js';\nimport Cursor from './blots/cursor.js';\nimport Embed from './blots/embed.js';\nimport Inline from './blots/inline.js';\nimport Scroll from './blots/scroll.js';\nimport TextBlot from './blots/text.js';\n\nimport Clipboard from './modules/clipboard.js';\nimport History from './modules/history.js';\nimport Keyboard from './modules/keyboard.js';\nimport Uploader from './modules/uploader.js';\nimport Delta, { Op, OpIterator, AttributeMap } from 'quill-delta';\nimport Input from './modules/input.js';\nimport UINode from './modules/uiNode.js';\n\nexport { default as Module } from './core/module.js';\nexport { Delta, Op, OpIterator, AttributeMap, Parchment, Range };\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nQuill.register({\n  'blots/block': Block,\n  'blots/block/embed': BlockEmbed,\n  'blots/break': Break,\n  'blots/container': Container,\n  'blots/cursor': Cursor,\n  'blots/embed': Embed,\n  'blots/inline': Inline,\n  'blots/scroll': Scroll,\n  'blots/text': TextBlot,\n\n  'modules/clipboard': Clipboard,\n  'modules/history': History,\n  'modules/keyboard': Keyboard,\n  'modules/uploader': Uploader,\n  'modules/input': Input,\n  'modules/uiNode': UINode,\n});\n\nexport default Quill;\n", "import { EventEmitter } from 'eventemitter3';\nimport instances from './instances.js';\nimport logger from './logger.js';\n\nconst debug = logger('quill:events');\nconst EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];\n\nEVENTS.forEach((eventName) => {\n  document.addEventListener(eventName, (...args) => {\n    Array.from(document.querySelectorAll('.ql-container')).forEach((node) => {\n      const quill = instances.get(node);\n      if (quill && quill.emitter) {\n        quill.emitter.handleDOM(...args);\n      }\n    });\n  });\n});\n\nclass Emitter extends EventEmitter<string> {\n  static events = {\n    EDITOR_CHANGE: 'editor-change',\n    SCROLL_BEFORE_UPDATE: 'scroll-before-update',\n    SCROLL_BLOT_MOUNT: 'scroll-blot-mount',\n    SCROLL_BLOT_UNMOUNT: 'scroll-blot-unmount',\n    SCROLL_OPTIMIZE: 'scroll-optimize',\n    SCROLL_UPDATE: 'scroll-update',\n    SCROLL_EMBED_UPDATE: 'scroll-embed-update',\n    SELECTION_CHANGE: 'selection-change',\n    TEXT_CHANGE: 'text-change',\n    COMPOSITION_BEFORE_START: 'composition-before-start',\n    COMPOSITION_START: 'composition-start',\n    COMPOSITION_BEFORE_END: 'composition-before-end',\n    COMPOSITION_END: 'composition-end',\n  } as const;\n\n  static sources = {\n    API: 'api',\n    SILENT: 'silent',\n    USER: 'user',\n  } as const;\n\n  protected domListeners: Record<string, { node: Node; handler: Function }[]>;\n\n  constructor() {\n    super();\n    this.domListeners = {};\n    this.on('error', debug.error);\n  }\n\n  emit(...args: unknown[]): boolean {\n    debug.log.call(debug, ...args);\n    // @ts-expect-error\n    return super.emit(...args);\n  }\n\n  handleDOM(event: Event, ...args: unknown[]) {\n    (this.domListeners[event.type] || []).forEach(({ node, handler }) => {\n      if (event.target === node || node.contains(event.target as Node)) {\n        handler(event, ...args);\n      }\n    });\n  }\n\n  listenDOM(eventName: string, node: Node, handler: EventListener) {\n    if (!this.domListeners[eventName]) {\n      this.domListeners[eventName] = [];\n    }\n    this.domListeners[eventName].push({ node, handler });\n  }\n}\n\nexport type EmitterSource =\n  (typeof Emitter.sources)[keyof typeof Emitter.sources];\n\nexport default Emitter;\n", "import type Quill from '../core.js';\n\nexport default new WeakMap<Node, Quill>();\n", "const levels = ['error', 'warn', 'log', 'info'] as const;\nexport type DebugLevel = (typeof levels)[number];\nlet level: DebugLevel | false = 'warn';\n\nfunction debug(method: DebugLevel, ...args: unknown[]) {\n  if (level) {\n    if (levels.indexOf(method) <= levels.indexOf(level)) {\n      console[method](...args); // eslint-disable-line no-console\n    }\n  }\n}\n\nfunction namespace(\n  ns: string,\n): Record<DebugLevel, (...args: unknown[]) => void> {\n  return levels.reduce(\n    (logger, method) => {\n      logger[method] = debug.bind(console, method, ns);\n      return logger;\n    },\n    {} as Record<DebugLevel, (...args: unknown[]) => void>,\n  );\n}\n\nnamespace.level = (newLevel: DebugLevel | false) => {\n  level = newLevel;\n};\ndebug.level = namespace.level;\n\nexport default namespace;\n", "import type Quill from './quill.js';\n\nabstract class Module<T extends {} = {}> {\n  static DEFAULTS = {};\n\n  constructor(\n    public quill: Quill,\n    protected options: Partial<T> = {},\n  ) {}\n}\n\nexport default Module;\n", "import { cloneDeep, isEqual, merge } from 'lodash-es';\nimport { LeafBlot, EmbedBlot, Scope, ParentBlot } from 'parchment';\nimport type { Blot } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta';\nimport Block, { BlockEmbed, bubbleFormats } from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport { Range } from './selection.js';\n\nconst ASCII = /^[ -~]*$/;\n\ntype SelectionInfo = {\n  newRange: Range;\n  oldRange: Range;\n};\n\nclass Editor {\n  scroll: Scroll;\n  delta: Delta;\n\n  constructor(scroll: Scroll) {\n    this.scroll = scroll;\n    this.delta = this.getDelta();\n  }\n\n  applyDelta(delta: Delta): Delta {\n    this.scroll.update();\n    let scrollLength = this.scroll.length();\n    this.scroll.batchStart();\n    const normalizedDelta = normalizeDelta(delta);\n    const deleteDelta = new Delta();\n    const normalizedOps = splitOpLines(normalizedDelta.ops.slice());\n    normalizedOps.reduce((index, op) => {\n      const length = Op.length(op);\n      let attributes = op.attributes || {};\n      let isImplicitNewlinePrepended = false;\n      let isImplicitNewlineAppended = false;\n      if (op.insert != null) {\n        deleteDelta.retain(length);\n        if (typeof op.insert === 'string') {\n          const text = op.insert;\n          isImplicitNewlineAppended =\n            !text.endsWith('\\n') &&\n            (scrollLength <= index ||\n              !!this.scroll.descendant(BlockEmbed, index)[0]);\n          this.scroll.insertAt(index, text);\n          const [line, offset] = this.scroll.line(index);\n          let formats = merge({}, bubbleFormats(line));\n          if (line instanceof Block) {\n            const [leaf] = line.descendant(LeafBlot, offset);\n            if (leaf) {\n              formats = merge(formats, bubbleFormats(leaf));\n            }\n          }\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        } else if (typeof op.insert === 'object') {\n          const key = Object.keys(op.insert)[0]; // There should only be one key\n          if (key == null) return index;\n          const isInlineEmbed = this.scroll.query(key, Scope.INLINE) != null;\n          if (isInlineEmbed) {\n            if (\n              scrollLength <= index ||\n              !!this.scroll.descendant(BlockEmbed, index)[0]\n            ) {\n              isImplicitNewlineAppended = true;\n            }\n          } else if (index > 0) {\n            const [leaf, offset] = this.scroll.descendant(LeafBlot, index - 1);\n            if (leaf instanceof TextBlot) {\n              const text = leaf.value();\n              if (text[offset] !== '\\n') {\n                isImplicitNewlinePrepended = true;\n              }\n            } else if (\n              leaf instanceof EmbedBlot &&\n              leaf.statics.scope === Scope.INLINE_BLOT\n            ) {\n              isImplicitNewlinePrepended = true;\n            }\n          }\n          this.scroll.insertAt(index, key, op.insert[key]);\n\n          if (isInlineEmbed) {\n            const [leaf] = this.scroll.descendant(LeafBlot, index);\n            if (leaf) {\n              const formats = merge({}, bubbleFormats(leaf));\n              attributes = AttributeMap.diff(formats, attributes) || {};\n            }\n          }\n        }\n        scrollLength += length;\n      } else {\n        deleteDelta.push(op);\n\n        if (op.retain !== null && typeof op.retain === 'object') {\n          const key = Object.keys(op.retain)[0];\n          if (key == null) return index;\n          this.scroll.updateEmbedAt(index, key, op.retain[key]);\n        }\n      }\n      Object.keys(attributes).forEach((name) => {\n        this.scroll.formatAt(index, length, name, attributes[name]);\n      });\n      const prependedLength = isImplicitNewlinePrepended ? 1 : 0;\n      const addedLength = isImplicitNewlineAppended ? 1 : 0;\n      scrollLength += prependedLength + addedLength;\n      deleteDelta.retain(prependedLength);\n      deleteDelta.delete(addedLength);\n      return index + length + prependedLength + addedLength;\n    }, 0);\n    deleteDelta.reduce((index, op) => {\n      if (typeof op.delete === 'number') {\n        this.scroll.deleteAt(index, op.delete);\n        return index;\n      }\n      return index + Op.length(op);\n    }, 0);\n    this.scroll.batchEnd();\n    this.scroll.optimize();\n    return this.update(normalizedDelta);\n  }\n\n  deleteText(index: number, length: number): Delta {\n    this.scroll.deleteAt(index, length);\n    return this.update(new Delta().retain(index).delete(length));\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    this.scroll.update();\n    Object.keys(formats).forEach((format) => {\n      this.scroll.lines(index, Math.max(length, 1)).forEach((line) => {\n        line.format(format, formats[format]);\n      });\n    });\n    this.scroll.optimize();\n    const delta = new Delta().retain(index).retain(length, cloneDeep(formats));\n    return this.update(delta);\n  }\n\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    Object.keys(formats).forEach((format) => {\n      this.scroll.formatAt(index, length, format, formats[format]);\n    });\n    const delta = new Delta().retain(index).retain(length, cloneDeep(formats));\n    return this.update(delta);\n  }\n\n  getContents(index: number, length: number): Delta {\n    return this.delta.slice(index, index + length);\n  }\n\n  getDelta(): Delta {\n    return this.scroll.lines().reduce((delta, line) => {\n      return delta.concat(line.delta());\n    }, new Delta());\n  }\n\n  getFormat(index: number, length = 0): Record<string, unknown> {\n    let lines: (Block | BlockEmbed)[] = [];\n    let leaves: LeafBlot[] = [];\n    if (length === 0) {\n      this.scroll.path(index).forEach((path) => {\n        const [blot] = path;\n        if (blot instanceof Block) {\n          lines.push(blot);\n        } else if (blot instanceof LeafBlot) {\n          leaves.push(blot);\n        }\n      });\n    } else {\n      lines = this.scroll.lines(index, length);\n      leaves = this.scroll.descendants(LeafBlot, index, length);\n    }\n    const [lineFormats, leafFormats] = [lines, leaves].map((blots) => {\n      const blot = blots.shift();\n      if (blot == null) return {};\n      let formats = bubbleFormats(blot);\n      while (Object.keys(formats).length > 0) {\n        const blot = blots.shift();\n        if (blot == null) return formats;\n        formats = combineFormats(bubbleFormats(blot), formats);\n      }\n      return formats;\n    });\n    return { ...lineFormats, ...leafFormats };\n  }\n\n  getHTML(index: number, length: number): string {\n    const [line, lineOffset] = this.scroll.line(index);\n    if (line) {\n      const lineLength = line.length();\n      const isWithinLine = line.length() >= lineOffset + length;\n      if (isWithinLine && !(lineOffset === 0 && length === lineLength)) {\n        return convertHTML(line, lineOffset, length, true);\n      }\n      return convertHTML(this.scroll, index, length, true);\n    }\n    return '';\n  }\n\n  getText(index: number, length: number): string {\n    return this.getContents(index, length)\n      .filter((op) => typeof op.insert === 'string')\n      .map((op) => op.insert)\n      .join('');\n  }\n\n  insertContents(index: number, contents: Delta): Delta {\n    const normalizedDelta = normalizeDelta(contents);\n    const change = new Delta().retain(index).concat(normalizedDelta);\n    this.scroll.insertContents(index, normalizedDelta);\n    return this.update(change);\n  }\n\n  insertEmbed(index: number, embed: string, value: unknown): Delta {\n    this.scroll.insertAt(index, embed, value);\n    return this.update(new Delta().retain(index).insert({ [embed]: value }));\n  }\n\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown> = {},\n  ): Delta {\n    text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    this.scroll.insertAt(index, text);\n    Object.keys(formats).forEach((format) => {\n      this.scroll.formatAt(index, text.length, format, formats[format]);\n    });\n    return this.update(\n      new Delta().retain(index).insert(text, cloneDeep(formats)),\n    );\n  }\n\n  isBlank(): boolean {\n    if (this.scroll.children.length === 0) return true;\n    if (this.scroll.children.length > 1) return false;\n    const blot = this.scroll.children.head;\n    if (blot?.statics.blotName !== Block.blotName) return false;\n    const block = blot as Block;\n    if (block.children.length > 1) return false;\n    return block.children.head instanceof Break;\n  }\n\n  removeFormat(index: number, length: number): Delta {\n    const text = this.getText(index, length);\n    const [line, offset] = this.scroll.line(index + length);\n    let suffixLength = 0;\n    let suffix = new Delta();\n    if (line != null) {\n      suffixLength = line.length() - offset;\n      suffix = line\n        .delta()\n        .slice(offset, offset + suffixLength - 1)\n        .insert('\\n');\n    }\n    const contents = this.getContents(index, length + suffixLength);\n    const diff = contents.diff(new Delta().insert(text).concat(suffix));\n    const delta = new Delta().retain(index).concat(diff);\n    return this.applyDelta(delta);\n  }\n\n  update(\n    change: Delta | null,\n    mutations: MutationRecord[] = [],\n    selectionInfo: SelectionInfo | undefined = undefined,\n  ): Delta {\n    const oldDelta = this.delta;\n    if (\n      mutations.length === 1 &&\n      mutations[0].type === 'characterData' &&\n      // @ts-expect-error Fix me later\n      mutations[0].target.data.match(ASCII) &&\n      this.scroll.find(mutations[0].target)\n    ) {\n      // Optimization for character changes\n      const textBlot = this.scroll.find(mutations[0].target) as Blot;\n      const formats = bubbleFormats(textBlot);\n      const index = textBlot.offset(this.scroll);\n      // @ts-expect-error Fix me later\n      const oldValue = mutations[0].oldValue.replace(CursorBlot.CONTENTS, '');\n      const oldText = new Delta().insert(oldValue);\n      // @ts-expect-error\n      const newText = new Delta().insert(textBlot.value());\n      const relativeSelectionInfo = selectionInfo && {\n        oldRange: shiftRange(selectionInfo.oldRange, -index),\n        newRange: shiftRange(selectionInfo.newRange, -index),\n      };\n      const diffDelta = new Delta()\n        .retain(index)\n        .concat(oldText.diff(newText, relativeSelectionInfo));\n      change = diffDelta.reduce((delta, op) => {\n        if (op.insert) {\n          return delta.insert(op.insert, formats);\n        }\n        return delta.push(op);\n      }, new Delta());\n      this.delta = oldDelta.compose(change);\n    } else {\n      this.delta = this.getDelta();\n      if (!change || !isEqual(oldDelta.compose(change), this.delta)) {\n        change = oldDelta.diff(this.delta, selectionInfo);\n      }\n    }\n    return change;\n  }\n}\n\ninterface ListItem {\n  child: Blot;\n  offset: number;\n  length: number;\n  indent: number;\n  type: string;\n}\nfunction convertListHTML(\n  items: ListItem[],\n  lastIndent: number,\n  types: string[],\n): string {\n  if (items.length === 0) {\n    const [endTag] = getListType(types.pop());\n    if (lastIndent <= 0) {\n      return `</li></${endTag}>`;\n    }\n    return `</li></${endTag}>${convertListHTML([], lastIndent - 1, types)}`;\n  }\n  const [{ child, offset, length, indent, type }, ...rest] = items;\n  const [tag, attribute] = getListType(type);\n  if (indent > lastIndent) {\n    types.push(type);\n    if (indent === lastIndent + 1) {\n      return `<${tag}><li${attribute}>${convertHTML(\n        child,\n        offset,\n        length,\n      )}${convertListHTML(rest, indent, types)}`;\n    }\n    return `<${tag}><li>${convertListHTML(items, lastIndent + 1, types)}`;\n  }\n  const previousType = types[types.length - 1];\n  if (indent === lastIndent && type === previousType) {\n    return `</li><li${attribute}>${convertHTML(\n      child,\n      offset,\n      length,\n    )}${convertListHTML(rest, indent, types)}`;\n  }\n  const [endTag] = getListType(types.pop());\n  return `</li></${endTag}>${convertListHTML(items, lastIndent - 1, types)}`;\n}\n\nfunction convertHTML(\n  blot: Blot,\n  index: number,\n  length: number,\n  isRoot = false,\n): string {\n  if ('html' in blot && typeof blot.html === 'function') {\n    return blot.html(index, length);\n  }\n  if (blot instanceof TextBlot) {\n    return escapeText(blot.value().slice(index, index + length));\n  }\n  if (blot instanceof ParentBlot) {\n    // TODO fix API\n    if (blot.statics.blotName === 'list-container') {\n      const items: any[] = [];\n      blot.children.forEachAt(index, length, (child, offset, childLength) => {\n        const formats =\n          'formats' in child && typeof child.formats === 'function'\n            ? child.formats()\n            : {};\n        items.push({\n          child,\n          offset,\n          length: childLength,\n          indent: formats.indent || 0,\n          type: formats.list,\n        });\n      });\n      return convertListHTML(items, -1, []);\n    }\n    const parts: string[] = [];\n    blot.children.forEachAt(index, length, (child, offset, childLength) => {\n      parts.push(convertHTML(child, offset, childLength));\n    });\n    if (isRoot || blot.statics.blotName === 'list') {\n      return parts.join('');\n    }\n    const { outerHTML, innerHTML } = blot.domNode as Element;\n    const [start, end] = outerHTML.split(`>${innerHTML}<`);\n    // TODO cleanup\n    if (start === '<table') {\n      return `<table style=\"border: 1px solid #000;\">${parts.join('')}<${end}`;\n    }\n    return `${start}>${parts.join('')}<${end}`;\n  }\n  return blot.domNode instanceof Element ? blot.domNode.outerHTML : '';\n}\n\nfunction combineFormats(\n  formats: Record<string, unknown>,\n  combined: Record<string, unknown>,\n): Record<string, unknown> {\n  return Object.keys(combined).reduce(\n    (merged, name) => {\n      if (formats[name] == null) return merged;\n      const combinedValue = combined[name];\n      if (combinedValue === formats[name]) {\n        merged[name] = combinedValue;\n      } else if (Array.isArray(combinedValue)) {\n        if (combinedValue.indexOf(formats[name]) < 0) {\n          merged[name] = combinedValue.concat([formats[name]]);\n        } else {\n          // If style already exists, don't add to an array, but don't lose other styles\n          merged[name] = combinedValue;\n        }\n      } else {\n        merged[name] = [combinedValue, formats[name]];\n      }\n      return merged;\n    },\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction getListType(type: string | undefined) {\n  const tag = type === 'ordered' ? 'ol' : 'ul';\n  switch (type) {\n    case 'checked':\n      return [tag, ' data-list=\"checked\"'];\n    case 'unchecked':\n      return [tag, ' data-list=\"unchecked\"'];\n    default:\n      return [tag, ''];\n  }\n}\n\nfunction normalizeDelta(delta: Delta) {\n  return delta.reduce((normalizedDelta, op) => {\n    if (typeof op.insert === 'string') {\n      const text = op.insert.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      return normalizedDelta.insert(text, op.attributes);\n    }\n    return normalizedDelta.push(op);\n  }, new Delta());\n}\n\nfunction shiftRange({ index, length }: Range, amount: number) {\n  return new Range(index + amount, length);\n}\n\nfunction splitOpLines(ops: Op[]) {\n  const split: Op[] = [];\n  ops.forEach((op) => {\n    if (typeof op.insert === 'string') {\n      const lines = op.insert.split('\\n');\n      lines.forEach((line, index) => {\n        if (index) split.push({ insert: '\\n', attributes: op.attributes });\n        if (line) split.push({ insert: line, attributes: op.attributes });\n      });\n    } else {\n      split.push(op);\n    }\n  });\n\n  return split;\n}\n\nexport default Editor;\n", "import Embed from '../blots/embed.js';\nimport type Scroll from '../blots/scroll.js';\nimport Emitter from './emitter.js';\n\nclass Composition {\n  isComposing = false;\n\n  constructor(\n    private scroll: Scroll,\n    private emitter: Emitter,\n  ) {\n    this.setupListeners();\n  }\n\n  private setupListeners() {\n    this.scroll.domNode.addEventListener('compositionstart', (event) => {\n      if (!this.isComposing) {\n        this.handleCompositionStart(event);\n      }\n    });\n\n    this.scroll.domNode.addEventListener('compositionend', (event) => {\n      if (this.isComposing) {\n        // Webkit makes DOM changes after compositionend, so we use microtask to\n        // ensure the order.\n        // https://bugs.webkit.org/show_bug.cgi?id=31902\n        queueMicrotask(() => {\n          this.handleCompositionEnd(event);\n        });\n      }\n    });\n  }\n\n  private handleCompositionStart(event: CompositionEvent) {\n    const blot =\n      event.target instanceof Node\n        ? this.scroll.find(event.target, true)\n        : null;\n\n    if (blot && !(blot instanceof Embed)) {\n      this.emitter.emit(Emitter.events.COMPOSITION_BEFORE_START, event);\n      this.scroll.batchStart();\n      this.emitter.emit(Emitter.events.COMPOSITION_START, event);\n      this.isComposing = true;\n    }\n  }\n\n  private handleCompositionEnd(event: CompositionEvent) {\n    this.emitter.emit(Emitter.events.COMPOSITION_BEFORE_END, event);\n    this.scroll.batchEnd();\n    this.emitter.emit(Emitter.events.COMPOSITION_END, event);\n    this.isComposing = false;\n  }\n}\n\nexport default Composition;\n", "export type Rect = {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n};\n\nconst getParentElement = (element: Node): Element | null =>\n  element.parentElement || (element.getRootNode() as ShadowRoot).host || null;\n\nconst getElementRect = (element: Element): Rect => {\n  const rect = element.getBoundingClientRect();\n  const scaleX =\n    ('offsetWidth' in element &&\n      Math.abs(rect.width) / (element as HTMLElement).offsetWidth) ||\n    1;\n  const scaleY =\n    ('offsetHeight' in element &&\n      Math.abs(rect.height) / (element as HTMLElement).offsetHeight) ||\n    1;\n  return {\n    top: rect.top,\n    right: rect.left + element.clientWidth * scaleX,\n    bottom: rect.top + element.clientHeight * scaleY,\n    left: rect.left,\n  };\n};\n\nconst paddingValueToInt = (value: string) => {\n  const number = parseInt(value, 10);\n  return Number.isNaN(number) ? 0 : number;\n};\n\n// Follow the steps described in https://www.w3.org/TR/cssom-view-1/#element-scrolling-members,\n// assuming that the scroll option is set to 'nearest'.\nconst getScrollDistance = (\n  targetStart: number,\n  targetEnd: number,\n  scrollStart: number,\n  scrollEnd: number,\n  scrollPaddingStart: number,\n  scrollPaddingEnd: number,\n) => {\n  if (targetStart < scrollStart && targetEnd > scrollEnd) {\n    return 0;\n  }\n\n  if (targetStart < scrollStart) {\n    return -(scrollStart - targetStart + scrollPaddingStart);\n  }\n\n  if (targetEnd > scrollEnd) {\n    return targetEnd - targetStart > scrollEnd - scrollStart\n      ? targetStart + scrollPaddingStart - scrollStart\n      : targetEnd - scrollEnd + scrollPaddingEnd;\n  }\n  return 0;\n};\n\nconst scrollRectIntoView = (root: HTMLElement, targetRect: Rect) => {\n  const document = root.ownerDocument;\n\n  let rect = targetRect;\n\n  let current: Element | null = root;\n  while (current) {\n    const isDocumentBody: boolean = current === document.body;\n    const bounding = isDocumentBody\n      ? {\n          top: 0,\n          right:\n            window.visualViewport?.width ??\n            document.documentElement.clientWidth,\n          bottom:\n            window.visualViewport?.height ??\n            document.documentElement.clientHeight,\n          left: 0,\n        }\n      : getElementRect(current);\n\n    const style = getComputedStyle(current);\n    const scrollDistanceX = getScrollDistance(\n      rect.left,\n      rect.right,\n      bounding.left,\n      bounding.right,\n      paddingValueToInt(style.scrollPaddingLeft),\n      paddingValueToInt(style.scrollPaddingRight),\n    );\n    const scrollDistanceY = getScrollDistance(\n      rect.top,\n      rect.bottom,\n      bounding.top,\n      bounding.bottom,\n      paddingValueToInt(style.scrollPaddingTop),\n      paddingValueToInt(style.scrollPaddingBottom),\n    );\n    if (scrollDistanceX || scrollDistanceY) {\n      if (isDocumentBody) {\n        document.defaultView?.scrollBy(scrollDistanceX, scrollDistanceY);\n      } else {\n        const { scrollLeft, scrollTop } = current;\n        if (scrollDistanceY) {\n          current.scrollTop += scrollDistanceY;\n        }\n        if (scrollDistanceX) {\n          current.scrollLeft += scrollDistanceX;\n        }\n        const scrolledLeft = current.scrollLeft - scrollLeft;\n        const scrolledTop = current.scrollTop - scrollTop;\n        rect = {\n          left: rect.left - scrolledLeft,\n          top: rect.top - scrolledTop,\n          right: rect.right - scrolledLeft,\n          bottom: rect.bottom - scrolledTop,\n        };\n      }\n    }\n\n    current =\n      isDocumentBody || style.position === 'fixed'\n        ? null\n        : getParentElement(current);\n  }\n};\n\nexport default scrollRectIntoView;\n", "import { Registry } from 'parchment';\n\nconst MAX_REGISTER_ITERATIONS = 100;\nconst CORE_FORMATS = ['block', 'break', 'cursor', 'inline', 'scroll', 'text'];\n\nconst createRegistryWithFormats = (\n  formats: string[],\n  sourceRegistry: Registry,\n  debug: { error: (errorMessage: string) => void },\n) => {\n  const registry = new Registry();\n  CORE_FORMATS.forEach((name) => {\n    const coreBlot = sourceRegistry.query(name);\n    if (coreBlot) registry.register(coreBlot);\n  });\n\n  formats.forEach((name) => {\n    let format = sourceRegistry.query(name);\n    if (!format) {\n      debug.error(\n        `Cannot register \"${name}\" specified in \"formats\" config. Are you sure it was registered?`,\n      );\n    }\n    let iterations = 0;\n    while (format) {\n      registry.register(format);\n      format = 'blotName' in format ? format.requiredContainer ?? null : null;\n\n      iterations += 1;\n      if (iterations > MAX_REGISTER_ITERATIONS) {\n        debug.error(\n          `Cycle detected in registering blot requiredContainer: \"${name}\"`,\n        );\n        break;\n      }\n    }\n  });\n\n  return registry;\n};\n\nexport default createRegistryWithFormats;\n", "import { merge } from 'lodash-es';\nimport * as Parchment from 'parchment';\nimport type { Op } from 'quill-delta';\nimport Delta from 'quill-delta';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type Block from '../blots/block.js';\nimport type Scroll from '../blots/scroll.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport Editor from './editor.js';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport instances from './instances.js';\nimport logger from './logger.js';\nimport type { DebugLevel } from './logger.js';\nimport Module from './module.js';\nimport Selection, { Range } from './selection.js';\nimport type { Bounds } from './selection.js';\nimport Composition from './composition.js';\nimport Theme from './theme.js';\nimport type { ThemeConstructor } from './theme.js';\nimport scrollRectIntoView from './utils/scrollRectIntoView.js';\nimport type { Rect } from './utils/scrollRectIntoView.js';\nimport createRegistryWithFormats from './utils/createRegistryWithFormats.js';\n\nconst debug = logger('quill');\n\nconst globalRegistry = new Parchment.Registry();\nParchment.ParentBlot.uiClass = 'ql-ui';\n\n/**\n * Options for initializing a Quill instance\n */\nexport interface QuillOptions {\n  theme?: string;\n  debug?: DebugLevel | boolean;\n  registry?: Parchment.Registry;\n  /**\n   * Whether to disable the editing\n   * @default false\n   */\n  readOnly?: boolean;\n\n  /**\n   * Placeholder text to display when the editor is empty\n   * @default \"\"\n   */\n  placeholder?: string;\n  bounds?: HTMLElement | string | null;\n  modules?: Record<string, unknown>;\n\n  /**\n   * A list of formats that are recognized and can exist within the editor contents.\n   * `null` means all formats are allowed.\n   * @default null\n   */\n  formats?: string[] | null;\n}\n\n/**\n * Similar to QuillOptions, but with all properties expanded to their default values,\n * and all selectors resolved to HTMLElements.\n */\nexport interface ExpandedQuillOptions\n  extends Omit<QuillOptions, 'theme' | 'formats'> {\n  theme: ThemeConstructor;\n  registry: Parchment.Registry;\n  container: HTMLElement;\n  modules: Record<string, unknown>;\n  bounds?: HTMLElement | null;\n  readOnly: boolean;\n}\n\nclass Quill {\n  static DEFAULTS = {\n    bounds: null,\n    modules: {\n      clipboard: true,\n      keyboard: true,\n      history: true,\n      uploader: true,\n    },\n    placeholder: '',\n    readOnly: false,\n    registry: globalRegistry,\n    theme: 'default',\n  } satisfies Partial<QuillOptions>;\n  static events = Emitter.events;\n  static sources = Emitter.sources;\n  static version = typeof QUILL_VERSION === 'undefined' ? 'dev' : QUILL_VERSION;\n\n  static imports: Record<string, unknown> = {\n    delta: Delta,\n    parchment: Parchment,\n    'core/module': Module,\n    'core/theme': Theme,\n  };\n\n  static debug(limit: DebugLevel | boolean) {\n    if (limit === true) {\n      limit = 'log';\n    }\n    logger.level(limit);\n  }\n\n  static find(node: Node, bubble = false) {\n    return instances.get(node) || globalRegistry.find(node, bubble);\n  }\n\n  static import(name: 'core/module'): typeof Module;\n  static import(name: `themes/${string}`): typeof Theme;\n  static import(name: 'parchment'): typeof Parchment;\n  static import(name: 'delta'): typeof Delta;\n  static import(name: string): unknown;\n  static import(name: string) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n    return this.imports[name];\n  }\n\n  static register(\n    targets: Record<\n      string,\n      | Parchment.RegistryDefinition\n      | Record<string, unknown> // any objects\n      | Theme\n      | Module\n      | Function // ES5 constructors\n    >,\n    overwrite?: boolean,\n  ): void;\n  static register(\n    target: Parchment.RegistryDefinition,\n    overwrite?: boolean,\n  ): void;\n  static register(path: string, target: any, overwrite?: boolean): void;\n  static register(...args: any[]): void {\n    if (typeof args[0] !== 'string') {\n      const target = args[0];\n      const overwrite = !!args[1];\n\n      const name = 'attrName' in target ? target.attrName : target.blotName;\n      if (typeof name === 'string') {\n        // Shortcut for formats:\n        // register(Blot | Attributor, overwrite)\n        this.register(`formats/${name}`, target, overwrite);\n      } else {\n        Object.keys(target).forEach((key) => {\n          this.register(key, target[key], overwrite);\n        });\n      }\n    } else {\n      const path = args[0];\n      const target = args[1];\n      const overwrite = !!args[2];\n\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n      this.imports[path] = target;\n      if (\n        (path.startsWith('blots/') || path.startsWith('formats/')) &&\n        target &&\n        typeof target !== 'boolean' &&\n        target.blotName !== 'abstract'\n      ) {\n        globalRegistry.register(target);\n      }\n      if (typeof target.register === 'function') {\n        target.register(globalRegistry);\n      }\n    }\n  }\n\n  container: HTMLElement;\n  root: HTMLDivElement;\n  scroll: Scroll;\n  emitter: Emitter;\n  protected allowReadOnlyEdits: boolean;\n  editor: Editor;\n  composition: Composition;\n  selection: Selection;\n\n  theme: Theme;\n  keyboard: Keyboard;\n  clipboard: Clipboard;\n  history: History;\n  uploader: Uploader;\n\n  options: ExpandedQuillOptions;\n\n  constructor(container: HTMLElement | string, options: QuillOptions = {}) {\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      debug.error('Invalid Quill container', container);\n      return;\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    const html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    instances.set(this.container, this);\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.emitter = new Emitter();\n    const scrollBlotName = Parchment.ScrollBlot.blotName;\n    const ScrollBlot = this.options.registry.query(scrollBlotName);\n    if (!ScrollBlot || !('blotName' in ScrollBlot)) {\n      throw new Error(\n        `Cannot initialize Quill without \"${scrollBlotName}\" blot`,\n      );\n    }\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\n      emitter: this.emitter,\n    }) as Scroll;\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.composition = new Composition(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.uploader = this.theme.addModule('uploader');\n    this.theme.addModule('input');\n    this.theme.addModule('uiNode');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, (type) => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => this.editor.update(null, mutations, selectionInfo),\n        source,\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_EMBED_UPDATE, (blot, delta) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => {\n          const change = new Delta()\n            .retain(blot.offset(this))\n            .retain({ [blot.statics.blotName]: delta });\n          return this.editor.update(change, [], selectionInfo);\n        },\n        Quill.sources.USER,\n      );\n    });\n    if (html) {\n      const contents = this.clipboard.convert({\n        html: `${html}<p><br></p>`,\n        text: '\\n',\n      });\n      this.setContents(contents);\n    }\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n    this.allowReadOnlyEdits = false;\n  }\n\n  addContainer(container: string, refNode?: Node | null): HTMLDivElement;\n  addContainer(container: HTMLElement, refNode?: Node | null): HTMLElement;\n  addContainer(\n    container: string | HTMLElement,\n    refNode: Node | null = null,\n  ): HTMLDivElement | HTMLElement {\n    if (typeof container === 'string') {\n      const className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n\n  blur() {\n    this.selection.setRange(null);\n  }\n\n  deleteText(range: Range, source?: EmitterSource): Delta;\n  deleteText(index: number, length: number, source?: EmitterSource): Delta;\n  deleteText(\n    index: number | Range,\n    length?: number | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    // @ts-expect-error\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.deleteText(index, length);\n      },\n      source,\n      index,\n      -1 * length,\n    );\n  }\n\n  disable() {\n    this.enable(false);\n  }\n\n  editReadOnly<T>(modifier: () => T): T {\n    this.allowReadOnlyEdits = true;\n    const value = modifier();\n    this.allowReadOnlyEdits = false;\n    return value;\n  }\n\n  enable(enabled = true) {\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n\n  focus(options: { preventScroll?: boolean } = {}) {\n    this.selection.focus();\n    if (!options.preventScroll) {\n      this.scrollSelectionIntoView();\n    }\n  }\n\n  format(\n    name: string,\n    value: unknown,\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        const range = this.getSelection(true);\n        let change = new Delta();\n        if (range == null) return change;\n        if (this.scroll.query(name, Parchment.Scope.BLOCK)) {\n          change = this.editor.formatLine(range.index, range.length, {\n            [name]: value,\n          });\n        } else if (range.length === 0) {\n          this.selection.format(name, value);\n          return change;\n        } else {\n          change = this.editor.formatText(range.index, range.length, {\n            [name]: value,\n          });\n        }\n        this.setSelection(range, Emitter.sources.SILENT);\n        return change;\n      },\n      source,\n    );\n  }\n\n  formatLine(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatLine(\n    index: number,\n    length: number,\n    name: string | Record<string, unknown>,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      index,\n      length,\n      // @ts-expect-error\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatLine(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  formatText(\n    range: Range,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number,\n    length: number,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  formatText(\n    index: number | Range,\n    length: number | string,\n    name: string | unknown,\n    value?: unknown | EmitterSource,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      // @ts-expect-error\n      index,\n      length,\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatText(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  getBounds(index: number | Range, length = 0): Bounds | null {\n    let bounds: Bounds | null = null;\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n    if (!bounds) return null;\n    const containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width,\n    };\n  }\n\n  getContents(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n\n  getFormat(index?: number, length?: number): { [format: string]: unknown };\n  getFormat(range?: Range): {\n    [format: string]: unknown;\n  };\n  getFormat(\n    index: Range | number = this.getSelection(true),\n    length = 0,\n  ): { [format: string]: unknown } {\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    }\n    return this.editor.getFormat(index.index, index.length);\n  }\n\n  getIndex(blot: Parchment.Blot) {\n    return blot.offset(this.scroll);\n  }\n\n  getLength() {\n    return this.scroll.length();\n  }\n\n  getLeaf(index: number) {\n    return this.scroll.leaf(index);\n  }\n\n  getLine(index: number) {\n    return this.scroll.line(index);\n  }\n\n  getLines(range: Range): (Block | BlockEmbed)[];\n  getLines(index?: number, length?: number): (Block | BlockEmbed)[];\n  getLines(\n    index: Range | number = 0,\n    length = Number.MAX_VALUE,\n  ): (Block | BlockEmbed)[] {\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    }\n    return this.scroll.lines(index, length);\n  }\n\n  getModule(name: string) {\n    return this.theme.modules[name];\n  }\n\n  getSelection(focus: true): Range;\n  getSelection(focus?: boolean): Range | null;\n  getSelection(focus = false): Range | null {\n    if (focus) this.focus();\n    this.update(); // Make sure we access getRange with editor in consistent state\n    return this.selection.getRange()[0];\n  }\n\n  getSemanticHTML(range: Range): string;\n  getSemanticHTML(index?: number, length?: number): string;\n  getSemanticHTML(index: Range | number = 0, length?: number) {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getHTML(index, length);\n  }\n\n  getText(range?: Range): string;\n  getText(index?: number, length?: number): string;\n  getText(index: Range | number = 0, length?: number): string {\n    if (typeof index === 'number') {\n      length = length ?? this.getLength() - index;\n    }\n    // @ts-expect-error\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n\n  insertEmbed(\n    index: number,\n    embed: string,\n    value: unknown,\n    source: EmitterSource = Quill.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertEmbed(index, embed, value);\n      },\n      source,\n      index,\n    );\n  }\n\n  insertText(index: number, text: string, source?: EmitterSource): Delta;\n  insertText(\n    index: number,\n    text: string,\n    formats: Record<string, unknown>,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name: string,\n    value: unknown,\n    source?: EmitterSource,\n  ): Delta;\n  insertText(\n    index: number,\n    text: string,\n    name?: string | Record<string, unknown> | EmitterSource,\n    value?: unknown,\n    source?: EmitterSource,\n  ): Delta {\n    let formats: Record<string, unknown>;\n    // eslint-disable-next-line prefer-const\n    // @ts-expect-error\n    [index, , formats, source] = overload(index, 0, name, value, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertText(index, text, formats);\n      },\n      source,\n      index,\n      text.length,\n    );\n  }\n\n  isEnabled() {\n    return this.scroll.isEnabled();\n  }\n\n  off(...args: Parameters<(typeof Emitter)['prototype']['off']>) {\n    return this.emitter.off(...args);\n  }\n\n  on(\n    event: (typeof Emitter)['events']['TEXT_CHANGE'],\n    handler: (delta: Delta, oldContent: Delta, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['SELECTION_CHANGE'],\n    handler: (range: Range, oldRange: Range, source: EmitterSource) => void,\n  ): Emitter;\n  on(\n    event: (typeof Emitter)['events']['EDITOR_CHANGE'],\n    handler: (\n      ...args:\n        | [\n            (typeof Emitter)['events']['TEXT_CHANGE'],\n            Delta,\n            Delta,\n            EmitterSource,\n          ]\n        | [\n            (typeof Emitter)['events']['SELECTION_CHANGE'],\n            Range,\n            Range,\n            EmitterSource,\n          ]\n    ) => void,\n  ): Emitter;\n  on(event: string, ...args: unknown[]): Emitter;\n  on(...args: Parameters<(typeof Emitter)['prototype']['on']>): Emitter {\n    return this.emitter.on(...args);\n  }\n\n  once(...args: Parameters<(typeof Emitter)['prototype']['once']>) {\n    return this.emitter.once(...args);\n  }\n\n  removeFormat(index: number, length: number, source?: EmitterSource): Delta {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.removeFormat(index, length);\n      },\n      source,\n      index,\n    );\n  }\n\n  scrollRectIntoView(rect: Rect) {\n    scrollRectIntoView(this.root, rect);\n  }\n\n  /**\n   * @deprecated Use Quill#scrollSelectionIntoView() instead.\n   */\n  scrollIntoView() {\n    console.warn(\n      'Quill#scrollIntoView() has been deprecated and will be removed in the near future. Please use Quill#scrollSelectionIntoView() instead.',\n    );\n    this.scrollSelectionIntoView();\n  }\n\n  /**\n   * Scroll the current selection into the visible area.\n   * If the selection is already visible, no scrolling will occur.\n   */\n  scrollSelectionIntoView() {\n    const range = this.selection.lastRange;\n    const bounds = range && this.selection.getBounds(range.index, range.length);\n    if (bounds) {\n      this.scrollRectIntoView(bounds);\n    }\n  }\n\n  setContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        const length = this.getLength();\n        // Quill will set empty editor to \\n\n        const delete1 = this.editor.deleteText(0, length);\n        const applied = this.editor.insertContents(0, delta);\n        // Remove extra \\n from empty editor initialization\n        const delete2 = this.editor.deleteText(this.getLength() - 1, 1);\n        return delete1.compose(applied).compose(delete2);\n      },\n      source,\n    );\n  }\n  setSelection(range: Range | null, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(index: number, length?: number, source?: EmitterSource): void;\n  setSelection(index: number, source?: EmitterSource): void;\n  setSelection(\n    index: Range | null | number,\n    length?: EmitterSource | number,\n    source?: EmitterSource,\n  ): void {\n    if (index == null) {\n      // @ts-expect-error https://github.com/microsoft/TypeScript/issues/22609\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      // @ts-expect-error\n      [index, length, , source] = overload(index, length, source);\n      this.selection.setRange(new Range(Math.max(0, index), length), source);\n      if (source !== Emitter.sources.SILENT) {\n        this.scrollSelectionIntoView();\n      }\n    }\n  }\n\n  setText(text: string, source: EmitterSource = Emitter.sources.API) {\n    const delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n    this.selection.update(source);\n    // TODO this is usually undefined\n    return change;\n  }\n\n  updateContents(\n    delta: Delta | Op[],\n    source: EmitterSource = Emitter.sources.API,\n  ): Delta {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        return this.editor.applyDelta(delta);\n      },\n      source,\n      true,\n    );\n  }\n}\n\nfunction resolveSelector(selector: string | HTMLElement | null | undefined) {\n  return typeof selector === 'string'\n    ? document.querySelector<HTMLElement>(selector)\n    : selector;\n}\n\nfunction expandModuleConfig(config: Record<string, unknown> | undefined) {\n  return Object.entries(config ?? {}).reduce(\n    (expanded, [key, value]) => ({\n      ...expanded,\n      [key]: value === true ? {} : value,\n    }),\n    {} as Record<string, unknown>,\n  );\n}\n\nfunction omitUndefinedValuesFromOptions(obj: QuillOptions) {\n  return Object.fromEntries(\n    Object.entries(obj).filter((entry) => entry[1] !== undefined),\n  );\n}\n\nfunction expandConfig(\n  containerOrSelector: HTMLElement | string,\n  options: QuillOptions,\n): ExpandedQuillOptions {\n  const container = resolveSelector(containerOrSelector);\n  if (!container) {\n    throw new Error('Invalid Quill container');\n  }\n\n  const shouldUseDefaultTheme =\n    !options.theme || options.theme === Quill.DEFAULTS.theme;\n  const theme = shouldUseDefaultTheme\n    ? Theme\n    : Quill.import(`themes/${options.theme}`);\n  if (!theme) {\n    throw new Error(`Invalid theme ${options.theme}. Did you register it?`);\n  }\n\n  const { modules: quillModuleDefaults, ...quillDefaults } = Quill.DEFAULTS;\n  const { modules: themeModuleDefaults, ...themeDefaults } = theme.DEFAULTS;\n\n  let userModuleOptions = expandModuleConfig(options.modules);\n  // Special case toolbar shorthand\n  if (\n    userModuleOptions != null &&\n    userModuleOptions.toolbar &&\n    userModuleOptions.toolbar.constructor !== Object\n  ) {\n    userModuleOptions = {\n      ...userModuleOptions,\n      toolbar: { container: userModuleOptions.toolbar },\n    };\n  }\n\n  const modules: ExpandedQuillOptions['modules'] = merge(\n    {},\n    expandModuleConfig(quillModuleDefaults),\n    expandModuleConfig(themeModuleDefaults),\n    userModuleOptions,\n  );\n\n  const config = {\n    ...quillDefaults,\n    ...omitUndefinedValuesFromOptions(themeDefaults),\n    ...omitUndefinedValuesFromOptions(options),\n  };\n\n  let registry = options.registry;\n  if (registry) {\n    if (options.formats) {\n      debug.warn('Ignoring \"formats\" option because \"registry\" is specified');\n    }\n  } else {\n    registry = options.formats\n      ? createRegistryWithFormats(options.formats, config.registry, debug)\n      : config.registry;\n  }\n\n  return {\n    ...config,\n    registry,\n    container,\n    theme,\n    modules: Object.entries(modules).reduce(\n      (modulesWithDefaults, [name, value]) => {\n        if (!value) return modulesWithDefaults;\n\n        const moduleClass = Quill.import(`modules/${name}`);\n        if (moduleClass == null) {\n          debug.error(\n            `Cannot load ${name} module. Are you sure you registered it?`,\n          );\n          return modulesWithDefaults;\n        }\n        return {\n          ...modulesWithDefaults,\n          // @ts-expect-error\n          [name]: merge({}, moduleClass.DEFAULTS || {}, value),\n        };\n      },\n      {},\n    ),\n    bounds: resolveSelector(config.bounds),\n  };\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(\n  modifier: () => Delta,\n  source: EmitterSource,\n  index: number | boolean,\n  shift: number | null,\n) {\n  if (\n    !this.isEnabled() &&\n    source === Emitter.sources.USER &&\n    !this.allowReadOnlyEdits\n  ) {\n    return new Delta();\n  }\n  let range = index == null ? null : this.getSelection();\n  const oldDelta = this.editor.delta;\n  const change = modifier();\n  if (range != null) {\n    if (index === true) {\n      index = range.index; // eslint-disable-line prefer-destructuring\n    }\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      // @ts-expect-error index should always be number\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    const args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n  return change;\n}\n\ntype NormalizedIndexLength = [\n  number,\n  number,\n  Record<string, unknown>,\n  EmitterSource,\n];\nfunction overload(index: number, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: number,\n  length: number,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(range: Range, source?: EmitterSource): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: string,\n  value: unknown,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  range: Range,\n  format: Record<string, unknown>,\n  source?: EmitterSource,\n): NormalizedIndexLength;\nfunction overload(\n  index: Range | number,\n  length?: number | string | Record<string, unknown> | EmitterSource,\n  name?: string | unknown | Record<string, unknown> | EmitterSource,\n  value?: unknown | EmitterSource,\n  source?: EmitterSource,\n): NormalizedIndexLength {\n  let formats: Record<string, unknown> = {};\n  // @ts-expect-error\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      // @ts-expect-error\n      source = value;\n      value = name;\n      name = length;\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    } else {\n      // @ts-expect-error\n      length = index.length; // eslint-disable-line prefer-destructuring\n      // @ts-expect-error\n      index = index.index; // eslint-disable-line prefer-destructuring\n    }\n  } else if (typeof length !== 'number') {\n    // @ts-expect-error\n    source = value;\n    value = name;\n    name = length;\n    length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (typeof name === 'object') {\n    // @ts-expect-error Fix me later\n    formats = name;\n    // @ts-expect-error\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      // @ts-expect-error\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  // @ts-expect-error\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range: Range, change: Delta, source?: EmitterSource): Range;\nfunction shiftRange(\n  range: Range,\n  index: number,\n  length?: number,\n  source?: EmitterSource,\n): Range;\nfunction shiftRange(\n  range: Range,\n  index: number | Delta,\n  lengthOrSource?: number | EmitterSource,\n  source?: EmitterSource,\n) {\n  const length = typeof lengthOrSource === 'number' ? lengthOrSource : 0;\n  if (range == null) return null;\n  let start;\n  let end;\n  // @ts-expect-error -- TODO: add a better type guard around `index`\n  if (index && typeof index.transformPosition === 'function') {\n    [start, end] = [range.index, range.index + range.length].map((pos) =>\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      index.transformPosition(pos, source !== Emitter.sources.USER),\n    );\n  } else {\n    [start, end] = [range.index, range.index + range.length].map((pos) => {\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      if (pos < index || (pos === index && source === Emitter.sources.USER))\n        return pos;\n      if (length >= 0) {\n        return pos + length;\n      }\n      // @ts-expect-error -- TODO: add a better type guard around `index`\n      return Math.max(index, pos + length);\n    });\n  }\n  return new Range(start, end - start);\n}\n\nexport type { Bounds, DebugLevel, EmitterSource };\nexport { Parchment, Range };\n\nexport { globalRegistry, expandConfig, overload, Quill as default };\n", "import { LeafBlot, Scope } from 'parchment';\nimport { cloneDeep, isEqual } from 'lodash-es';\nimport Emitter from './emitter.js';\nimport type { EmitterSource } from './emitter.js';\nimport logger from './logger.js';\nimport type Cursor from '../blots/cursor.js';\nimport type Scroll from '../blots/scroll.js';\n\nconst debug = logger('quill:selection');\n\ntype NativeRange = AbstractRange;\n\ninterface NormalizedRange {\n  start: {\n    node: NativeRange['startContainer'];\n    offset: NativeRange['startOffset'];\n  };\n  end: { node: NativeRange['endContainer']; offset: NativeRange['endOffset'] };\n  native: NativeRange;\n}\n\nexport interface Bounds {\n  bottom: number;\n  height: number;\n  left: number;\n  right: number;\n  top: number;\n  width: number;\n}\n\nexport class Range {\n  constructor(\n    public index: number,\n    public length = 0,\n  ) {}\n}\n\nclass Selection {\n  scroll: Scroll;\n  emitter: Emitter;\n  composing: boolean;\n  mouseDown: boolean;\n\n  root: HTMLElement;\n  cursor: Cursor;\n  savedRange: Range;\n  lastRange: Range | null;\n  lastNative: NormalizedRange | null;\n\n  constructor(scroll: Scroll, emitter: Emitter) {\n    this.emitter = emitter;\n    this.scroll = scroll;\n    this.composing = false;\n    this.mouseDown = false;\n    this.root = this.scroll.domNode;\n    // @ts-expect-error\n    this.cursor = this.scroll.create('cursor', this);\n    // savedRange is last non-null range\n    this.savedRange = new Range(0, 0);\n    this.lastRange = this.savedRange;\n    this.lastNative = null;\n    this.handleComposition();\n    this.handleDragging();\n    this.emitter.listenDOM('selectionchange', document, () => {\n      if (!this.mouseDown && !this.composing) {\n        setTimeout(this.update.bind(this, Emitter.sources.USER), 1);\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_BEFORE_UPDATE, () => {\n      if (!this.hasFocus()) return;\n      const native = this.getNativeRange();\n      if (native == null) return;\n      if (native.start.node === this.cursor.textNode) return; // cursor.restore() will handle\n      this.emitter.once(\n        Emitter.events.SCROLL_UPDATE,\n        (source, mutations: MutationRecord[]) => {\n          try {\n            if (\n              this.root.contains(native.start.node) &&\n              this.root.contains(native.end.node)\n            ) {\n              this.setNativeRange(\n                native.start.node,\n                native.start.offset,\n                native.end.node,\n                native.end.offset,\n              );\n            }\n            const triggeredByTyping = mutations.some(\n              (mutation) =>\n                mutation.type === 'characterData' ||\n                mutation.type === 'childList' ||\n                (mutation.type === 'attributes' &&\n                  mutation.target === this.root),\n            );\n            this.update(triggeredByTyping ? Emitter.sources.SILENT : source);\n          } catch (ignored) {\n            // ignore\n          }\n        },\n      );\n    });\n    this.emitter.on(Emitter.events.SCROLL_OPTIMIZE, (mutations, context) => {\n      if (context.range) {\n        const { startNode, startOffset, endNode, endOffset } = context.range;\n        this.setNativeRange(startNode, startOffset, endNode, endOffset);\n        this.update(Emitter.sources.SILENT);\n      }\n    });\n    this.update(Emitter.sources.SILENT);\n  }\n\n  handleComposition() {\n    this.emitter.on(Emitter.events.COMPOSITION_BEFORE_START, () => {\n      this.composing = true;\n    });\n    this.emitter.on(Emitter.events.COMPOSITION_END, () => {\n      this.composing = false;\n      if (this.cursor.parent) {\n        const range = this.cursor.restore();\n        if (!range) return;\n        setTimeout(() => {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }, 1);\n      }\n    });\n  }\n\n  handleDragging() {\n    this.emitter.listenDOM('mousedown', document.body, () => {\n      this.mouseDown = true;\n    });\n    this.emitter.listenDOM('mouseup', document.body, () => {\n      this.mouseDown = false;\n      this.update(Emitter.sources.USER);\n    });\n  }\n\n  focus() {\n    if (this.hasFocus()) return;\n    this.root.focus({ preventScroll: true });\n    this.setRange(this.savedRange);\n  }\n\n  format(format: string, value: unknown) {\n    this.scroll.update();\n    const nativeRange = this.getNativeRange();\n    if (\n      nativeRange == null ||\n      !nativeRange.native.collapsed ||\n      this.scroll.query(format, Scope.BLOCK)\n    )\n      return;\n    if (nativeRange.start.node !== this.cursor.textNode) {\n      const blot = this.scroll.find(nativeRange.start.node, false);\n      if (blot == null) return;\n      // TODO Give blot ability to not split\n      if (blot instanceof LeafBlot) {\n        const after = blot.split(nativeRange.start.offset);\n        blot.parent.insertBefore(this.cursor, after);\n      } else {\n        // @ts-expect-error TODO: nativeRange.start.node doesn't seem to match function signature\n        blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen\n      }\n      this.cursor.attach();\n    }\n    this.cursor.format(format, value);\n    this.scroll.optimize();\n    this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);\n    this.update();\n  }\n\n  getBounds(index: number, length = 0) {\n    const scrollLength = this.scroll.length();\n    index = Math.min(index, scrollLength - 1);\n    length = Math.min(index + length, scrollLength - 1) - index;\n    let node: Node;\n    let [leaf, offset] = this.scroll.leaf(index);\n    if (leaf == null) return null;\n    if (length > 0 && offset === leaf.length()) {\n      const [next] = this.scroll.leaf(index + 1);\n      if (next) {\n        const [line] = this.scroll.line(index);\n        const [nextLine] = this.scroll.line(index + 1);\n        if (line === nextLine) {\n          leaf = next;\n          offset = 0;\n        }\n      }\n    }\n    [node, offset] = leaf.position(offset, true);\n    const range = document.createRange();\n    if (length > 0) {\n      range.setStart(node, offset);\n      [leaf, offset] = this.scroll.leaf(index + length);\n      if (leaf == null) return null;\n      [node, offset] = leaf.position(offset, true);\n      range.setEnd(node, offset);\n      return range.getBoundingClientRect();\n    }\n    let side: 'left' | 'right' = 'left';\n    let rect: DOMRect;\n    if (node instanceof Text) {\n      // Return null if the text node is empty because it is\n      // not able to get a useful client rect:\n      // https://github.com/w3c/csswg-drafts/issues/2514.\n      // Empty text nodes are most likely caused by TextBlot#optimize()\n      // not getting called when editor content changes.\n      if (!node.data.length) {\n        return null;\n      }\n      if (offset < node.data.length) {\n        range.setStart(node, offset);\n        range.setEnd(node, offset + 1);\n      } else {\n        range.setStart(node, offset - 1);\n        range.setEnd(node, offset);\n        side = 'right';\n      }\n      rect = range.getBoundingClientRect();\n    } else {\n      if (!(leaf.domNode instanceof Element)) return null;\n      rect = leaf.domNode.getBoundingClientRect();\n      if (offset > 0) side = 'right';\n    }\n    return {\n      bottom: rect.top + rect.height,\n      height: rect.height,\n      left: rect[side],\n      right: rect[side],\n      top: rect.top,\n      width: 0,\n    };\n  }\n\n  getNativeRange(): NormalizedRange | null {\n    const selection = document.getSelection();\n    if (selection == null || selection.rangeCount <= 0) return null;\n    const nativeRange = selection.getRangeAt(0);\n    if (nativeRange == null) return null;\n    const range = this.normalizeNative(nativeRange);\n    debug.info('getNativeRange', range);\n    return range;\n  }\n\n  getRange(): [Range, NormalizedRange] | [null, null] {\n    const root = this.scroll.domNode;\n    if ('isConnected' in root && !root.isConnected) {\n      // document.getSelection() forces layout on Blink, so we trend to\n      // not calling it.\n      return [null, null];\n    }\n    const normalized = this.getNativeRange();\n    if (normalized == null) return [null, null];\n    const range = this.normalizedToRange(normalized);\n    return [range, normalized];\n  }\n\n  hasFocus(): boolean {\n    return (\n      document.activeElement === this.root ||\n      (document.activeElement != null &&\n        contains(this.root, document.activeElement))\n    );\n  }\n\n  normalizedToRange(range: NormalizedRange) {\n    const positions: [Node, number][] = [\n      [range.start.node, range.start.offset],\n    ];\n    if (!range.native.collapsed) {\n      positions.push([range.end.node, range.end.offset]);\n    }\n    const indexes = positions.map((position) => {\n      const [node, offset] = position;\n      const blot = this.scroll.find(node, true);\n      // @ts-expect-error Fix me later\n      const index = blot.offset(this.scroll);\n      if (offset === 0) {\n        return index;\n      }\n      if (blot instanceof LeafBlot) {\n        return index + blot.index(node, offset);\n      }\n      // @ts-expect-error Fix me later\n      return index + blot.length();\n    });\n    const end = Math.min(Math.max(...indexes), this.scroll.length() - 1);\n    const start = Math.min(end, ...indexes);\n    return new Range(start, end - start);\n  }\n\n  normalizeNative(nativeRange: NativeRange) {\n    if (\n      !contains(this.root, nativeRange.startContainer) ||\n      (!nativeRange.collapsed && !contains(this.root, nativeRange.endContainer))\n    ) {\n      return null;\n    }\n    const range = {\n      start: {\n        node: nativeRange.startContainer,\n        offset: nativeRange.startOffset,\n      },\n      end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },\n      native: nativeRange,\n    };\n    [range.start, range.end].forEach((position) => {\n      let { node, offset } = position;\n      while (!(node instanceof Text) && node.childNodes.length > 0) {\n        if (node.childNodes.length > offset) {\n          node = node.childNodes[offset];\n          offset = 0;\n        } else if (node.childNodes.length === offset) {\n          // @ts-expect-error Fix me later\n          node = node.lastChild;\n          if (node instanceof Text) {\n            offset = node.data.length;\n          } else if (node.childNodes.length > 0) {\n            // Container case\n            offset = node.childNodes.length;\n          } else {\n            // Embed case\n            offset = node.childNodes.length + 1;\n          }\n        } else {\n          break;\n        }\n      }\n      position.node = node;\n      position.offset = offset;\n    });\n    return range;\n  }\n\n  rangeToNative(range: Range): [Node | null, number, Node | null, number] {\n    const scrollLength = this.scroll.length();\n\n    const getPosition = (\n      index: number,\n      inclusive: boolean,\n    ): [Node | null, number] => {\n      index = Math.min(scrollLength - 1, index);\n      const [leaf, leafOffset] = this.scroll.leaf(index);\n      return leaf ? leaf.position(leafOffset, inclusive) : [null, -1];\n    };\n    return [\n      ...getPosition(range.index, false),\n      ...getPosition(range.index + range.length, true),\n    ];\n  }\n\n  setNativeRange(\n    startNode: Node | null,\n    startOffset?: number,\n    endNode = startNode,\n    endOffset = startOffset,\n    force = false,\n  ) {\n    debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);\n    if (\n      startNode != null &&\n      (this.root.parentNode == null ||\n        startNode.parentNode == null ||\n        // @ts-expect-error Fix me later\n        endNode.parentNode == null)\n    ) {\n      return;\n    }\n    const selection = document.getSelection();\n    if (selection == null) return;\n    if (startNode != null) {\n      if (!this.hasFocus()) this.root.focus({ preventScroll: true });\n      const { native } = this.getNativeRange() || {};\n      if (\n        native == null ||\n        force ||\n        startNode !== native.startContainer ||\n        startOffset !== native.startOffset ||\n        endNode !== native.endContainer ||\n        endOffset !== native.endOffset\n      ) {\n        if (startNode instanceof Element && startNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          startOffset = Array.from(startNode.parentNode.childNodes).indexOf(\n            startNode,\n          );\n          startNode = startNode.parentNode;\n        }\n        if (endNode instanceof Element && endNode.tagName === 'BR') {\n          // @ts-expect-error Fix me later\n          endOffset = Array.from(endNode.parentNode.childNodes).indexOf(\n            endNode,\n          );\n          endNode = endNode.parentNode;\n        }\n        const range = document.createRange();\n        // @ts-expect-error Fix me later\n        range.setStart(startNode, startOffset);\n        // @ts-expect-error Fix me later\n        range.setEnd(endNode, endOffset);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    } else {\n      selection.removeAllRanges();\n      this.root.blur();\n    }\n  }\n\n  setRange(range: Range | null, force: boolean, source?: EmitterSource): void;\n  setRange(range: Range | null, source?: EmitterSource): void;\n  setRange(\n    range: Range | null,\n    force: boolean | EmitterSource = false,\n    source: EmitterSource = Emitter.sources.API,\n  ): void {\n    if (typeof force === 'string') {\n      source = force;\n      force = false;\n    }\n    debug.info('setRange', range);\n    if (range != null) {\n      const args = this.rangeToNative(range);\n      this.setNativeRange(...args, force);\n    } else {\n      this.setNativeRange(null);\n    }\n    this.update(source);\n  }\n\n  update(source: EmitterSource = Emitter.sources.USER) {\n    const oldRange = this.lastRange;\n    const [lastRange, nativeRange] = this.getRange();\n    this.lastRange = lastRange;\n    this.lastNative = nativeRange;\n    if (this.lastRange != null) {\n      this.savedRange = this.lastRange;\n    }\n    if (!isEqual(oldRange, this.lastRange)) {\n      if (\n        !this.composing &&\n        nativeRange != null &&\n        nativeRange.native.collapsed &&\n        nativeRange.start.node !== this.cursor.textNode\n      ) {\n        const range = this.cursor.restore();\n        if (range) {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }\n      }\n      const args = [\n        Emitter.events.SELECTION_CHANGE,\n        cloneDeep(this.lastRange),\n        cloneDeep(oldRange),\n        source,\n      ];\n      this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n      if (source !== Emitter.sources.SILENT) {\n        this.emitter.emit(...args);\n      }\n    }\n  }\n}\n\nfunction contains(parent: Node, descendant: Node) {\n  try {\n    // Firefox inserts inaccessible nodes around video elements\n    descendant.parentNode; // eslint-disable-line @typescript-eslint/no-unused-expressions\n  } catch (e) {\n    return false;\n  }\n  return parent.contains(descendant);\n}\n\nexport default Selection;\n", "import type Quill from '../core.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type { ToolbarProps } from '../modules/toolbar.js';\nimport type Uploader from '../modules/uploader.js';\n\nexport interface ThemeOptions {\n  modules: Record<string, unknown> & {\n    toolbar?: null | ToolbarProps;\n  };\n}\n\nclass Theme {\n  static DEFAULTS: ThemeOptions = {\n    modules: {},\n  };\n\n  static themes = {\n    default: Theme,\n  };\n\n  modules: ThemeOptions['modules'] = {};\n\n  constructor(\n    protected quill: Quill,\n    protected options: ThemeOptions,\n  ) {}\n\n  init() {\n    Object.keys(this.options.modules).forEach((name) => {\n      if (this.modules[name] == null) {\n        this.addModule(name);\n      }\n    });\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    // @ts-expect-error\n    const ModuleClass = this.quill.constructor.import(`modules/${name}`);\n    this.modules[name] = new ModuleClass(\n      this.quill,\n      this.options.modules[name] || {},\n    );\n    return this.modules[name];\n  }\n}\n\nexport interface ThemeConstructor {\n  new (quill: Quill, options: unknown): Theme;\n  DEFAULTS: ThemeOptions;\n}\n\nexport default Theme;\n", "import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['right', 'center', 'justify'],\n};\n\nconst AlignAttribute = new Attributor('align', 'align', config);\nconst AlignClass = new ClassAttributor('align', 'ql-align', config);\nconst AlignStyle = new StyleAttributor('align', 'text-align', config);\n\nexport { AlignAttribute, AlignClass, AlignStyle };\n", "import { ClassAttributor, Scope } from 'parchment';\nimport { ColorAttributor } from './color.js';\n\nconst BackgroundClass = new ClassAttributor('background', 'ql-bg', {\n  scope: Scope.INLINE,\n});\nconst BackgroundStyle = new ColorAttributor('background', 'background-color', {\n  scope: Scope.INLINE,\n});\n\nexport { BackgroundClass, BackgroundStyle };\n", "import Block from '../blots/block.js';\nimport Break from '../blots/break.js';\nimport Cursor from '../blots/cursor.js';\nimport Inline from '../blots/inline.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport Container from '../blots/container.js';\nimport Quill from '../core/quill.js';\n\nclass CodeBlockContainer extends Container {\n  static create(value: string) {\n    const domNode = super.create(value) as Element;\n    domNode.setAttribute('spellcheck', 'false');\n    return domNode;\n  }\n\n  code(index: number, length: number) {\n    return (\n      this.children\n        // @ts-expect-error\n        .map((child) => (child.length() <= 1 ? '' : child.domNode.innerText))\n        .join('\\n')\n        .slice(index, index + length)\n    );\n  }\n\n  html(index: number, length: number) {\n    // `\\n`s are needed in order to support empty lines at the beginning and the end.\n    // https://html.spec.whatwg.org/multipage/syntax.html#element-restrictions\n    return `<pre>\\n${escapeText(this.code(index, length))}\\n</pre>`;\n  }\n}\n\nclass CodeBlock extends Block {\n  static TAB = '  ';\n\n  static register() {\n    Quill.register(CodeBlockContainer);\n  }\n}\n\nclass Code extends Inline {}\nCode.blotName = 'code';\nCode.tagName = 'CODE';\n\nCodeBlock.blotName = 'code-block';\nCodeBlock.className = 'ql-code-block';\nCodeBlock.tagName = 'DIV';\nCodeBlockContainer.blotName = 'code-block-container';\nCodeBlockContainer.className = 'ql-code-block-container';\nCodeBlockContainer.tagName = 'DIV';\n\nCodeBlockContainer.allowedChildren = [CodeBlock];\n\nCodeBlock.allowedChildren = [TextBlot, Break, Cursor];\nCodeBlock.requiredContainer = CodeBlockContainer;\n\nexport { Code, CodeBlockContainer, CodeBlock as default };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nclass ColorAttributor extends StyleAttributor {\n  value(domNode: HTMLElement) {\n    let value = super.value(domNode) as string;\n    if (!value.startsWith('rgb(')) return value;\n    value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');\n    const hex = value\n      .split(',')\n      .map((component) => `00${parseInt(component, 10).toString(16)}`.slice(-2))\n      .join('');\n    return `#${hex}`;\n  }\n}\n\nconst ColorClass = new ClassAttributor('color', 'ql-color', {\n  scope: Scope.INLINE,\n});\nconst ColorStyle = new ColorAttributor('color', 'color', {\n  scope: Scope.INLINE,\n});\n\nexport { ColorAttributor, ColorClass, ColorStyle };\n", "import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['rtl'],\n};\n\nconst DirectionAttribute = new Attributor('direction', 'dir', config);\nconst DirectionClass = new ClassAttributor('direction', 'ql-direction', config);\nconst DirectionStyle = new StyleAttributor('direction', 'direction', config);\n\nexport { DirectionAttribute, DirectionClass, DirectionStyle };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.INLINE,\n  whitelist: ['serif', 'monospace'],\n};\n\nconst FontClass = new ClassAttributor('font', 'ql-font', config);\n\nclass FontStyleAttributor extends StyleAttributor {\n  value(node: HTMLElement) {\n    return super.value(node).replace(/[\"']/g, '');\n  }\n}\n\nconst FontStyle = new FontStyleAttributor('font', 'font-family', config);\n\nexport { FontStyle, FontClass };\n", "import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst SizeClass = new ClassAttributor('size', 'ql-size', {\n  scope: Scope.INLINE,\n  whitelist: ['small', 'large', 'huge'],\n});\nconst SizeStyle = new StyleAttributor('size', 'font-size', {\n  scope: Scope.INLINE,\n  whitelist: ['10px', '18px', '32px'],\n});\n\nexport { SizeClass, SizeStyle };\n", "const normalWeightRegexp = /font-weight:\\s*normal/;\nconst blockTagNames = ['P', 'OL', 'UL'];\n\nconst isBlockElement = (element: Element | null) => {\n  return element && blockTagNames.includes(element.tagName);\n};\n\nconst normalizeEmptyLines = (doc: Document) => {\n  Array.from(doc.querySelectorAll('br'))\n    .filter(\n      (br) =>\n        isBlockElement(br.previousElementSibling) &&\n        isBlockElement(br.nextElementSibling),\n    )\n    .forEach((br) => {\n      br.parentNode?.removeChild(br);\n    });\n};\n\nconst normalizeFontWeight = (doc: Document) => {\n  Array.from(doc.querySelectorAll('b[style*=\"font-weight\"]'))\n    .filter((node) => node.getAttribute('style')?.match(normalWeightRegexp))\n    .forEach((node) => {\n      const fragment = doc.createDocumentFragment();\n      fragment.append(...node.childNodes);\n      node.parentNode?.replaceChild(fragment, node);\n    });\n};\n\nexport default function normalize(doc: Document) {\n  if (doc.querySelector('[id^=\"docs-internal-guid-\"]')) {\n    normalizeFontWeight(doc);\n    normalizeEmptyLines(doc);\n  }\n}\n", "const ignoreRegexp = /\\bmso-list:[^;]*ignore/i;\nconst idRegexp = /\\bmso-list:[^;]*\\bl(\\d+)/i;\nconst indentRegexp = /\\bmso-list:[^;]*\\blevel(\\d+)/i;\n\nconst parseListItem = (element: Element, html: string) => {\n  const style = element.getAttribute('style');\n  const idMatch = style?.match(idRegexp);\n  if (!idMatch) {\n    return null;\n  }\n  const id = Number(idMatch[1]);\n\n  const indentMatch = style?.match(indentRegexp);\n  const indent = indentMatch ? Number(indentMatch[1]) : 1;\n\n  const typeRegexp = new RegExp(\n    `@list l${id}:level${indent}\\\\s*\\\\{[^\\\\}]*mso-level-number-format:\\\\s*([\\\\w-]+)`,\n    'i',\n  );\n  const typeMatch = html.match(typeRegexp);\n  const type = typeMatch && typeMatch[1] === 'bullet' ? 'bullet' : 'ordered';\n\n  return { id, indent, type, element };\n};\n\n// list items are represented as `p` tags with styles like `mso-list: l0 level1` where:\n// 1. \"0\" in \"l0\" means the list item id;\n// 2. \"1\" in \"level1\" means the indent level, starting from 1.\nconst normalizeListItem = (doc: Document) => {\n  const msoList = Array.from(doc.querySelectorAll('[style*=mso-list]'));\n  const ignored: Element[] = [];\n  const others: Element[] = [];\n  msoList.forEach((node) => {\n    const shouldIgnore = (node.getAttribute('style') || '').match(ignoreRegexp);\n    if (shouldIgnore) {\n      ignored.push(node);\n    } else {\n      others.push(node);\n    }\n  });\n\n  // Each list item contains a marker wrapped with \"mso-list: Ignore\".\n  ignored.forEach((node) => node.parentNode?.removeChild(node));\n\n  // The list stype is not defined inline with the tag, instead, it's in the\n  // style tag so we need to pass the html as a string.\n  const html = doc.documentElement.innerHTML;\n  const listItems = others\n    .map((element) => parseListItem(element, html))\n    .filter((parsed) => parsed);\n\n  while (listItems.length) {\n    const childListItems = [];\n\n    let current = listItems.shift();\n    // Group continuous items into the same group (aka \"ul\")\n    while (current) {\n      childListItems.push(current);\n      current =\n        listItems.length &&\n        listItems[0]?.element === current.element.nextElementSibling &&\n        // Different id means the next item doesn't belong to this group.\n        listItems[0].id === current.id\n          ? listItems.shift()\n          : null;\n    }\n\n    const ul = document.createElement('ul');\n    childListItems.forEach((listItem) => {\n      const li = document.createElement('li');\n      li.setAttribute('data-list', listItem.type);\n      if (listItem.indent > 1) {\n        li.setAttribute('class', `ql-indent-${listItem.indent - 1}`);\n      }\n      li.innerHTML = listItem.element.innerHTML;\n      ul.appendChild(li);\n    });\n\n    const element = childListItems[0]?.element;\n    const { parentNode } = element ?? {};\n    if (element) {\n      parentNode?.replaceChild(ul, element);\n    }\n    childListItems.slice(1).forEach(({ element: e }) => {\n      parentNode?.removeChild(e);\n    });\n  }\n};\n\nexport default function normalize(doc: Document) {\n  if (\n    doc.documentElement.getAttribute('xmlns:w') ===\n    'urn:schemas-microsoft-com:office:word'\n  ) {\n    normalizeListItem(doc);\n  }\n}\n", "import googleDocs from './normalizers/googleDocs.js';\nimport msWord from './normalizers/msWord.js';\n\nconst NORMALIZERS = [msWord, googleDocs];\n\nconst normalizeExternalHTML = (doc: Document) => {\n  if (doc.documentElement) {\n    NORMALIZERS.forEach((normalize) => {\n      normalize(doc);\n    });\n  }\n};\n\nexport default normalizeExternalHTML;\n", "import type { ScrollBlot } from 'parchment';\nimport {\n  Attributor,\n  BlockBlot,\n  ClassAttributor,\n  EmbedBlot,\n  Scope,\n  StyleAttributor,\n} from 'parchment';\nimport Delta from 'quill-delta';\nimport { BlockEmbed } from '../blots/block.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { AlignAttribute, AlignStyle } from '../formats/align.js';\nimport { BackgroundStyle } from '../formats/background.js';\nimport CodeBlock from '../formats/code.js';\nimport { ColorStyle } from '../formats/color.js';\nimport { DirectionAttribute, DirectionStyle } from '../formats/direction.js';\nimport { FontStyle } from '../formats/font.js';\nimport { SizeStyle } from '../formats/size.js';\nimport { deleteRange } from './keyboard.js';\nimport normalizeExternalHTML from './normalizeExternalHTML/index.js';\n\nconst debug = logger('quill:clipboard');\n\ntype Selector = string | Node['TEXT_NODE'] | Node['ELEMENT_NODE'];\ntype Matcher = (node: Node, delta: Delta, scroll: ScrollBlot) => Delta;\n\nconst CLIPBOARD_CONFIG: [Selector, Matcher][] = [\n  [Node.TEXT_NODE, matchText],\n  [Node.TEXT_NODE, matchNewline],\n  ['br', matchBreak],\n  [Node.ELEMENT_NODE, matchNewline],\n  [Node.ELEMENT_NODE, matchBlot],\n  [Node.ELEMENT_NODE, matchAttributor],\n  [Node.ELEMENT_NODE, matchStyles],\n  ['li', matchIndent],\n  ['ol, ul', matchList],\n  ['pre', matchCodeBlock],\n  ['tr', matchTable],\n  ['b', createMatchAlias('bold')],\n  ['i', createMatchAlias('italic')],\n  ['strike', createMatchAlias('strike')],\n  ['style', matchIgnore],\n];\n\nconst ATTRIBUTE_ATTRIBUTORS = [AlignAttribute, DirectionAttribute].reduce(\n  (memo: Record<string, Attributor>, attr) => {\n    memo[attr.keyName] = attr;\n    return memo;\n  },\n  {},\n);\n\nconst STYLE_ATTRIBUTORS = [\n  AlignStyle,\n  BackgroundStyle,\n  ColorStyle,\n  DirectionStyle,\n  FontStyle,\n  SizeStyle,\n].reduce((memo: Record<string, Attributor>, attr) => {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\ninterface ClipboardOptions {\n  matchers: [Selector, Matcher][];\n}\n\nclass Clipboard extends Module<ClipboardOptions> {\n  static DEFAULTS: ClipboardOptions = {\n    matchers: [],\n  };\n\n  matchers: [Selector, Matcher][];\n\n  constructor(quill: Quill, options: Partial<ClipboardOptions>) {\n    super(quill, options);\n    this.quill.root.addEventListener('copy', (e) =>\n      this.onCaptureCopy(e, false),\n    );\n    this.quill.root.addEventListener('cut', (e) => this.onCaptureCopy(e, true));\n    this.quill.root.addEventListener('paste', this.onCapturePaste.bind(this));\n    this.matchers = [];\n    CLIPBOARD_CONFIG.concat(this.options.matchers ?? []).forEach(\n      ([selector, matcher]) => {\n        this.addMatcher(selector, matcher);\n      },\n    );\n  }\n\n  addMatcher(selector: Selector, matcher: Matcher) {\n    this.matchers.push([selector, matcher]);\n  }\n\n  convert(\n    { html, text }: { html?: string; text?: string },\n    formats: Record<string, unknown> = {},\n  ) {\n    if (formats[CodeBlock.blotName]) {\n      return new Delta().insert(text || '', {\n        [CodeBlock.blotName]: formats[CodeBlock.blotName],\n      });\n    }\n    if (!html) {\n      return new Delta().insert(text || '', formats);\n    }\n    const delta = this.convertHTML(html);\n    // Remove trailing newline\n    if (\n      deltaEndsWith(delta, '\\n') &&\n      (delta.ops[delta.ops.length - 1].attributes == null || formats.table)\n    ) {\n      return delta.compose(new Delta().retain(delta.length() - 1).delete(1));\n    }\n    return delta;\n  }\n\n  protected normalizeHTML(doc: Document) {\n    normalizeExternalHTML(doc);\n  }\n\n  protected convertHTML(html: string) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    this.normalizeHTML(doc);\n    const container = doc.body;\n    const nodeMatches = new WeakMap();\n    const [elementMatchers, textMatchers] = this.prepareMatching(\n      container,\n      nodeMatches,\n    );\n    return traverse(\n      this.quill.scroll,\n      container,\n      elementMatchers,\n      textMatchers,\n      nodeMatches,\n    );\n  }\n\n  dangerouslyPasteHTML(html: string, source?: EmitterSource): void;\n  dangerouslyPasteHTML(\n    index: number,\n    html: string,\n    source?: EmitterSource,\n  ): void;\n  dangerouslyPasteHTML(\n    index: number | string,\n    html?: string,\n    source: EmitterSource = Quill.sources.API,\n  ) {\n    if (typeof index === 'string') {\n      const delta = this.convert({ html: index, text: '' });\n      // @ts-expect-error\n      this.quill.setContents(delta, html);\n      this.quill.setSelection(0, Quill.sources.SILENT);\n    } else {\n      const paste = this.convert({ html, text: '' });\n      this.quill.updateContents(\n        new Delta().retain(index).concat(paste),\n        source,\n      );\n      this.quill.setSelection(index + paste.length(), Quill.sources.SILENT);\n    }\n  }\n\n  onCaptureCopy(e: ClipboardEvent, isCut = false) {\n    if (e.defaultPrevented) return;\n    e.preventDefault();\n    const [range] = this.quill.selection.getRange();\n    if (range == null) return;\n    const { html, text } = this.onCopy(range, isCut);\n    e.clipboardData?.setData('text/plain', text);\n    e.clipboardData?.setData('text/html', html);\n    if (isCut) {\n      deleteRange({ range, quill: this.quill });\n    }\n  }\n\n  /*\n   * https://www.iana.org/assignments/media-types/text/uri-list\n   */\n  private normalizeURIList(urlList: string) {\n    return (\n      urlList\n        .split(/\\r?\\n/)\n        // Ignore all comments\n        .filter((url) => url[0] !== '#')\n        .join('\\n')\n    );\n  }\n\n  onCapturePaste(e: ClipboardEvent) {\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\n    e.preventDefault();\n    const range = this.quill.getSelection(true);\n    if (range == null) return;\n    const html = e.clipboardData?.getData('text/html');\n    let text = e.clipboardData?.getData('text/plain');\n    if (!html && !text) {\n      const urlList = e.clipboardData?.getData('text/uri-list');\n      if (urlList) {\n        text = this.normalizeURIList(urlList);\n      }\n    }\n    const files = Array.from(e.clipboardData?.files || []);\n    if (!html && files.length > 0) {\n      this.quill.uploader.upload(range, files);\n      return;\n    }\n    if (html && files.length > 0) {\n      const doc = new DOMParser().parseFromString(html, 'text/html');\n      if (\n        doc.body.childElementCount === 1 &&\n        doc.body.firstElementChild?.tagName === 'IMG'\n      ) {\n        this.quill.uploader.upload(range, files);\n        return;\n      }\n    }\n    this.onPaste(range, { html, text });\n  }\n\n  onCopy(range: Range, isCut: boolean): { html: string; text: string };\n  onCopy(range: Range) {\n    const text = this.quill.getText(range);\n    const html = this.quill.getSemanticHTML(range);\n    return { html, text };\n  }\n\n  onPaste(range: Range, { text, html }: { text?: string; html?: string }) {\n    const formats = this.quill.getFormat(range.index);\n    const pastedDelta = this.convert({ text, html }, formats);\n    debug.log('onPaste', pastedDelta, { text, html });\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .concat(pastedDelta);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    // range.length contributes to delta.length()\n    this.quill.setSelection(\n      delta.length() - range.length,\n      Quill.sources.SILENT,\n    );\n    this.quill.scrollSelectionIntoView();\n  }\n\n  prepareMatching(container: Element, nodeMatches: WeakMap<Node, Matcher[]>) {\n    const elementMatchers: Matcher[] = [];\n    const textMatchers: Matcher[] = [];\n    this.matchers.forEach((pair) => {\n      const [selector, matcher] = pair;\n      switch (selector) {\n        case Node.TEXT_NODE:\n          textMatchers.push(matcher);\n          break;\n        case Node.ELEMENT_NODE:\n          elementMatchers.push(matcher);\n          break;\n        default:\n          Array.from(container.querySelectorAll(selector)).forEach((node) => {\n            if (nodeMatches.has(node)) {\n              const matches = nodeMatches.get(node);\n              matches?.push(matcher);\n            } else {\n              nodeMatches.set(node, [matcher]);\n            }\n          });\n          break;\n      }\n    });\n    return [elementMatchers, textMatchers];\n  }\n}\n\nfunction applyFormat(\n  delta: Delta,\n  format: string,\n  value: unknown,\n  scroll: ScrollBlot,\n): Delta {\n  if (!scroll.query(format)) {\n    return delta;\n  }\n\n  return delta.reduce((newDelta, op) => {\n    if (!op.insert) return newDelta;\n    if (op.attributes && op.attributes[format]) {\n      return newDelta.push(op);\n    }\n    const formats = value ? { [format]: value } : {};\n    return newDelta.insert(op.insert, { ...formats, ...op.attributes });\n  }, new Delta());\n}\n\nfunction deltaEndsWith(delta: Delta, text: string) {\n  let endText = '';\n  for (\n    let i = delta.ops.length - 1;\n    i >= 0 && endText.length < text.length;\n    --i // eslint-disable-line no-plusplus\n  ) {\n    const op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\n\nfunction isLine(node: Node, scroll: ScrollBlot) {\n  if (!(node instanceof Element)) return false;\n  const match = scroll.query(node);\n  // @ts-expect-error\n  if (match && match.prototype instanceof EmbedBlot) return false;\n\n  return [\n    'address',\n    'article',\n    'blockquote',\n    'canvas',\n    'dd',\n    'div',\n    'dl',\n    'dt',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'iframe',\n    'li',\n    'main',\n    'nav',\n    'ol',\n    'output',\n    'p',\n    'pre',\n    'section',\n    'table',\n    'td',\n    'tr',\n    'ul',\n    'video',\n  ].includes(node.tagName.toLowerCase());\n}\n\nfunction isBetweenInlineElements(node: HTMLElement, scroll: ScrollBlot) {\n  return (\n    node.previousElementSibling &&\n    node.nextElementSibling &&\n    !isLine(node.previousElementSibling, scroll) &&\n    !isLine(node.nextElementSibling, scroll)\n  );\n}\n\nconst preNodes = new WeakMap();\nfunction isPre(node: Node | null) {\n  if (node == null) return false;\n  if (!preNodes.has(node)) {\n    // @ts-expect-error\n    if (node.tagName === 'PRE') {\n      preNodes.set(node, true);\n    } else {\n      preNodes.set(node, isPre(node.parentNode));\n    }\n  }\n  return preNodes.get(node);\n}\n\nfunction traverse(\n  scroll: ScrollBlot,\n  node: ChildNode,\n  elementMatchers: Matcher[],\n  textMatchers: Matcher[],\n  nodeMatches: WeakMap<Node, Matcher[]>,\n): Delta {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce((delta: Delta, matcher) => {\n      return matcher(node, delta, scroll);\n    }, new Delta());\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    return Array.from(node.childNodes || []).reduce((delta, childNode) => {\n      let childrenDelta = traverse(\n        scroll,\n        childNode,\n        elementMatchers,\n        textMatchers,\n        nodeMatches,\n      );\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) => {\n          return matcher(childNode as HTMLElement, reducedDelta, scroll);\n        }, childrenDelta);\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce(\n          (reducedDelta, matcher) => {\n            return matcher(childNode, reducedDelta, scroll);\n          },\n          childrenDelta,\n        );\n      }\n      return delta.concat(childrenDelta);\n    }, new Delta());\n  }\n  return new Delta();\n}\n\nfunction createMatchAlias(format: string) {\n  return (_node: Element, delta: Delta, scroll: ScrollBlot) => {\n    return applyFormat(delta, format, true, scroll);\n  };\n}\n\nfunction matchAttributor(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const attributes = Attributor.keys(node);\n  const classes = ClassAttributor.keys(node);\n  const styles = StyleAttributor.keys(node);\n  const formats: Record<string, string | undefined> = {};\n  attributes\n    .concat(classes)\n    .concat(styles)\n    .forEach((name) => {\n      let attr = scroll.query(name, Scope.ATTRIBUTE) as Attributor;\n      if (attr != null) {\n        formats[attr.attrName] = attr.value(node);\n        if (formats[attr.attrName]) return;\n      }\n      attr = ATTRIBUTE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n      attr = STYLE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        attr = STYLE_ATTRIBUTORS[name];\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n    });\n\n  return Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n}\n\nfunction matchBlot(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (match == null) return delta;\n  // @ts-expect-error\n  if (match.prototype instanceof EmbedBlot) {\n    const embed = {};\n    // @ts-expect-error\n    const value = match.value(node);\n    if (value != null) {\n      // @ts-expect-error\n      embed[match.blotName] = value;\n      // @ts-expect-error\n      return new Delta().insert(embed, match.formats(node, scroll));\n    }\n  } else {\n    // @ts-expect-error\n    if (match.prototype instanceof BlockBlot && !deltaEndsWith(delta, '\\n')) {\n      delta.insert('\\n');\n    }\n    if (\n      'blotName' in match &&\n      'formats' in match &&\n      typeof match.formats === 'function'\n    ) {\n      return applyFormat(\n        delta,\n        match.blotName,\n        match.formats(node, scroll),\n        scroll,\n      );\n    }\n  }\n  return delta;\n}\n\nfunction matchBreak(node: Node, delta: Delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\n\nfunction matchCodeBlock(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query('code-block');\n  const language =\n    match && 'formats' in match && typeof match.formats === 'function'\n      ? match.formats(node, scroll)\n      : true;\n  return applyFormat(delta, 'code-block', language, scroll);\n}\n\nfunction matchIgnore() {\n  return new Delta();\n}\n\nfunction matchIndent(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (\n    match == null ||\n    // @ts-expect-error\n    match.blotName !== 'list' ||\n    !deltaEndsWith(delta, '\\n')\n  ) {\n    return delta;\n  }\n  let indent = -1;\n  let parent = node.parentNode;\n  while (parent != null) {\n    // @ts-expect-error\n    if (['OL', 'UL'].includes(parent.tagName)) {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.reduce((composed, op) => {\n    if (!op.insert) return composed;\n    if (op.attributes && typeof op.attributes.indent === 'number') {\n      return composed.push(op);\n    }\n    return composed.insert(op.insert, { indent, ...(op.attributes || {}) });\n  }, new Delta());\n}\n\nfunction matchList(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const element = node as Element;\n  let list = element.tagName === 'OL' ? 'ordered' : 'bullet';\n\n  const checkedAttr = element.getAttribute('data-checked');\n  if (checkedAttr) {\n    list = checkedAttr === 'true' ? 'checked' : 'unchecked';\n  }\n\n  return applyFormat(delta, 'list', list, scroll);\n}\n\nfunction matchNewline(node: Node, delta: Delta, scroll: ScrollBlot) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (\n      isLine(node, scroll) &&\n      (node.childNodes.length > 0 || node instanceof HTMLParagraphElement)\n    ) {\n      return delta.insert('\\n');\n    }\n    if (delta.length() > 0 && node.nextSibling) {\n      let nextSibling: Node | null = node.nextSibling;\n      while (nextSibling != null) {\n        if (isLine(nextSibling, scroll)) {\n          return delta.insert('\\n');\n        }\n        const match = scroll.query(nextSibling);\n        // @ts-expect-error\n        if (match && match.prototype instanceof BlockEmbed) {\n          return delta.insert('\\n');\n        }\n        nextSibling = nextSibling.firstChild;\n      }\n    }\n  }\n  return delta;\n}\n\nfunction matchStyles(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const formats: Record<string, unknown> = {};\n  const style: Partial<CSSStyleDeclaration> = node.style || {};\n  if (style.fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (style.textDecoration === 'underline') {\n    formats.underline = true;\n  }\n  if (style.textDecoration === 'line-through') {\n    formats.strike = true;\n  }\n  if (\n    style.fontWeight?.startsWith('bold') ||\n    // @ts-expect-error Fix me later\n    parseInt(style.fontWeight, 10) >= 700\n  ) {\n    formats.bold = true;\n  }\n  delta = Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n  // @ts-expect-error\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    return new Delta().insert('\\t').concat(delta);\n  }\n  return delta;\n}\n\nfunction matchTable(\n  node: HTMLTableRowElement,\n  delta: Delta,\n  scroll: ScrollBlot,\n) {\n  const table =\n    node.parentElement?.tagName === 'TABLE'\n      ? node.parentElement\n      : node.parentElement?.parentElement;\n  if (table != null) {\n    const rows = Array.from(table.querySelectorAll('tr'));\n    const row = rows.indexOf(node) + 1;\n    return applyFormat(delta, 'table', row, scroll);\n  }\n  return delta;\n}\n\nfunction matchText(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  // @ts-expect-error\n  let text = node.data;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (node.parentElement?.tagName === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (!isPre(node)) {\n    if (\n      text.trim().length === 0 &&\n      text.includes('\\n') &&\n      !isBetweenInlineElements(node, scroll)\n    ) {\n      return delta;\n    }\n    const replacer = (collapse: unknown, match: string) => {\n      const replaced = match.replace(/[^\\u00a0]/g, ''); // \\u00a0 is nbsp;\n      return replaced.length < 1 && collapse ? ' ' : replaced;\n    };\n    text = text.replace(/\\r\\n/g, ' ').replace(/\\n/g, ' ');\n    text = text.replace(/\\s\\s+/g, replacer.bind(replacer, true)); // collapse whitespace\n    if (\n      (node.previousSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.previousSibling instanceof Element &&\n        isLine(node.previousSibling, scroll))\n    ) {\n      text = text.replace(/^\\s+/, replacer.bind(replacer, false));\n    }\n    if (\n      (node.nextSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.nextSibling instanceof Element && isLine(node.nextSibling, scroll))\n    ) {\n      text = text.replace(/\\s+$/, replacer.bind(replacer, false));\n    }\n  }\n  return delta.insert(text);\n}\n\nexport {\n  Clipboard as default,\n  matchAttributor,\n  matchBlot,\n  matchNewline,\n  matchText,\n  traverse,\n};\n", "import { cloneDeep, isEqual } from 'lodash-es';\nimport Delta, { AttributeMap } from 'quill-delta';\nimport { EmbedBlot, Scope, TextBlot } from 'parchment';\nimport type { Blot, BlockBlot } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { BlockEmbed } from '../blots/block.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:keyboard');\n\nconst SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\n\nexport interface Context {\n  collapsed: boolean;\n  empty: boolean;\n  offset: number;\n  prefix: string;\n  suffix: string;\n  format: Record<string, unknown>;\n  event: KeyboardEvent;\n  line: BlockEmbed | BlockBlot;\n}\n\ninterface BindingObject\n  extends Partial<Omit<Context, 'prefix' | 'suffix' | 'format'>> {\n  key: number | string | string[];\n  shortKey?: boolean | null;\n  shiftKey?: boolean | null;\n  altKey?: boolean | null;\n  metaKey?: boolean | null;\n  ctrlKey?: boolean | null;\n  prefix?: RegExp;\n  suffix?: RegExp;\n  format?: Record<string, unknown> | string[];\n  handler?: (\n    this: { quill: Quill },\n    range: Range,\n    curContext: Context,\n    // eslint-disable-next-line no-use-before-define\n    binding: NormalizedBinding,\n  ) => boolean | void;\n}\n\ntype Binding = BindingObject | string | number;\n\ninterface NormalizedBinding extends Omit<BindingObject, 'key' | 'shortKey'> {\n  key: string | number;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\nclass Keyboard extends Module<KeyboardOptions> {\n  static DEFAULTS: KeyboardOptions;\n\n  static match(evt: KeyboardEvent, binding: BindingObject) {\n    if (\n      (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'] as const).some((key) => {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })\n    ) {\n      return false;\n    }\n    return binding.key === evt.key || binding.key === evt.which;\n  }\n\n  bindings: Record<string, NormalizedBinding[]>;\n\n  constructor(quill: Quill, options: Partial<KeyboardOptions>) {\n    super(quill, options);\n    this.bindings = {};\n    // @ts-expect-error Fix me later\n    Object.keys(this.options.bindings).forEach((name) => {\n      // @ts-expect-error Fix me later\n      if (this.options.bindings[name]) {\n        // @ts-expect-error Fix me later\n        this.addBinding(this.options.bindings[name]);\n      }\n    });\n    this.addBinding({ key: 'Enter', shiftKey: null }, this.handleEnter);\n    this.addBinding(\n      { key: 'Enter', metaKey: null, ctrlKey: null, altKey: null },\n      () => {},\n    );\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true },\n        this.handleDelete,\n      );\n    } else {\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true, prefix: /^.?$/ },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true, suffix: /^.?$/ },\n        this.handleDelete,\n      );\n    }\n    this.addBinding(\n      { key: 'Backspace' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      { key: 'Delete' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      {\n        key: 'Backspace',\n        altKey: null,\n        ctrlKey: null,\n        metaKey: null,\n        shiftKey: null,\n      },\n      { collapsed: true, offset: 0 },\n      this.handleBackspace,\n    );\n    this.listen();\n  }\n\n  addBinding(\n    keyBinding: Binding,\n    context:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n    handler:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n  ) {\n    const binding = normalize(keyBinding);\n    if (binding == null) {\n      debug.warn('Attempted to add invalid keyboard binding', binding);\n      return;\n    }\n    if (typeof context === 'function') {\n      context = { handler: context };\n    }\n    if (typeof handler === 'function') {\n      handler = { handler };\n    }\n    const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n    keys.forEach((key) => {\n      const singleBinding = {\n        ...binding,\n        key,\n        ...context,\n        ...handler,\n      };\n      this.bindings[singleBinding.key] = this.bindings[singleBinding.key] || [];\n      this.bindings[singleBinding.key].push(singleBinding);\n    });\n  }\n\n  listen() {\n    this.quill.root.addEventListener('keydown', (evt) => {\n      if (evt.defaultPrevented || evt.isComposing) return;\n\n      // evt.isComposing is false when pressing Enter/Backspace when composing in Safari\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      const isComposing =\n        evt.keyCode === 229 && (evt.key === 'Enter' || evt.key === 'Backspace');\n      if (isComposing) return;\n\n      const bindings = (this.bindings[evt.key] || []).concat(\n        this.bindings[evt.which] || [],\n      );\n      const matches = bindings.filter((binding) =>\n        Keyboard.match(evt, binding),\n      );\n      if (matches.length === 0) return;\n      // @ts-expect-error\n      const blot = Quill.find(evt.target, true);\n      if (blot && blot.scroll !== this.quill.scroll) return;\n      const range = this.quill.getSelection();\n      if (range == null || !this.quill.hasFocus()) return;\n      const [line, offset] = this.quill.getLine(range.index);\n      const [leafStart, offsetStart] = this.quill.getLeaf(range.index);\n      const [leafEnd, offsetEnd] =\n        range.length === 0\n          ? [leafStart, offsetStart]\n          : this.quill.getLeaf(range.index + range.length);\n      const prefixText =\n        leafStart instanceof TextBlot\n          ? leafStart.value().slice(0, offsetStart)\n          : '';\n      const suffixText =\n        leafEnd instanceof TextBlot ? leafEnd.value().slice(offsetEnd) : '';\n      const curContext = {\n        collapsed: range.length === 0,\n        // @ts-expect-error Fix me later\n        empty: range.length === 0 && line.length() <= 1,\n        format: this.quill.getFormat(range),\n        line,\n        offset,\n        prefix: prefixText,\n        suffix: suffixText,\n        event: evt,\n      };\n      const prevented = matches.some((binding) => {\n        if (\n          binding.collapsed != null &&\n          binding.collapsed !== curContext.collapsed\n        ) {\n          return false;\n        }\n        if (binding.empty != null && binding.empty !== curContext.empty) {\n          return false;\n        }\n        if (binding.offset != null && binding.offset !== curContext.offset) {\n          return false;\n        }\n        if (Array.isArray(binding.format)) {\n          // any format is present\n          if (binding.format.every((name) => curContext.format[name] == null)) {\n            return false;\n          }\n        } else if (typeof binding.format === 'object') {\n          // all formats must match\n          if (\n            !Object.keys(binding.format).every((name) => {\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === true)\n                return curContext.format[name] != null;\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === false)\n                return curContext.format[name] == null;\n              // @ts-expect-error Fix me later\n              return isEqual(binding.format[name], curContext.format[name]);\n            })\n          ) {\n            return false;\n          }\n        }\n        if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n          return false;\n        }\n        if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n          return false;\n        }\n        // @ts-expect-error Fix me later\n        return binding.handler.call(this, range, curContext, binding) !== true;\n      });\n      if (prevented) {\n        evt.preventDefault();\n      }\n    });\n  }\n\n  handleBackspace(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)\n      ? 2\n      : 1;\n    if (range.index === 0 || this.quill.getLength() <= 1) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index - length).delete(length);\n    if (context.offset === 0) {\n      // Always deleting newline here, length always 1\n      const [prev] = this.quill.getLine(range.index - 1);\n      if (prev) {\n        const isPrevLineEmpty =\n          prev.statics.blotName === 'block' && prev.length() <= 1;\n        if (!isPrevLineEmpty) {\n          // @ts-expect-error Fix me later\n          const curFormats = line.formats();\n          const prevFormats = this.quill.getFormat(range.index - 1, 1);\n          formats = AttributeMap.diff(curFormats, prevFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n            const formatDelta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - 2)\n              .retain(1, formats);\n            delta = delta.compose(formatDelta);\n          }\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDelete(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix)\n      ? 2\n      : 1;\n    if (range.index >= this.quill.getLength() - length) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index).delete(length);\n    // @ts-expect-error Fix me later\n    if (context.offset >= line.length() - 1) {\n      const [next] = this.quill.getLine(range.index + 1);\n      if (next) {\n        // @ts-expect-error Fix me later\n        const curFormats = line.formats();\n        const nextFormats = this.quill.getFormat(range.index, 1);\n        formats = AttributeMap.diff(curFormats, nextFormats) || {};\n        if (Object.keys(formats).length > 0) {\n          delta = delta.retain(next.length() - 1).retain(1, formats);\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDeleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n    this.quill.focus();\n  }\n\n  handleEnter(range: Range, context: Context) {\n    const lineFormats = Object.keys(context.format).reduce(\n      (formats: Record<string, unknown>, format) => {\n        if (\n          this.quill.scroll.query(format, Scope.BLOCK) &&\n          !Array.isArray(context.format[format])\n        ) {\n          formats[format] = context.format[format];\n        }\n        return formats;\n      },\n      {},\n    );\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .insert('\\n', lineFormats);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n    this.quill.focus();\n  }\n}\n\nconst defaultOptions: KeyboardOptions = {\n  bindings: {\n    bold: makeFormatHandler('bold'),\n    italic: makeFormatHandler('italic'),\n    underline: makeFormatHandler('underline'),\n    indent: {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: 'Tab',\n      format: ['blockquote', 'indent', 'list'],\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', Quill.sources.USER);\n        return false;\n      },\n    },\n    outdent: {\n      key: 'Tab',\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', Quill.sources.USER);\n        return false;\n      },\n    },\n    'outdent backspace': {\n      key: 'Backspace',\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['indent', 'list'],\n      offset: 0,\n      handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', Quill.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, Quill.sources.USER);\n        }\n      },\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: 'Tab',\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler(range) {\n        this.quill.deleteText(range.index - 1, 1, Quill.sources.USER);\n      },\n    },\n    tab: {\n      key: 'Tab',\n      handler(range, context) {\n        if (context.format.table) return true;\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index)\n          .delete(range.length)\n          .insert('\\t');\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'blockquote empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['blockquote'],\n      empty: true,\n      handler() {\n        this.quill.format('blockquote', false, Quill.sources.USER);\n      },\n    },\n    'list empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler(range, context) {\n        const formats: Record<string, unknown> = { list: false };\n        if (context.format.indent) {\n          formats.indent = false;\n        }\n        this.quill.formatLine(\n          range.index,\n          range.length,\n          formats,\n          Quill.sources.USER,\n        );\n      },\n    },\n    'checklist enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: { list: 'checked' },\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const formats = {\n          // @ts-expect-error Fix me later\n          ...line.formats(),\n          list: 'checked',\n        };\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', formats)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { list: 'unchecked' });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'header enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler(range, context) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', context.format)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { header: null });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'table backspace': {\n      key: 'Backspace',\n      format: ['table'],\n      collapsed: true,\n      offset: 0,\n      handler() {},\n    },\n    'table delete': {\n      key: 'Delete',\n      format: ['table'],\n      collapsed: true,\n      suffix: /^$/,\n      handler() {},\n    },\n    'table enter': {\n      key: 'Enter',\n      shiftKey: null,\n      format: ['table'],\n      handler(range) {\n        const module = this.quill.getModule('table');\n        if (module) {\n          // @ts-expect-error\n          const [table, row, cell, offset] = module.getTable(range);\n          const shift = tableSide(table, row, cell, offset);\n          if (shift == null) return;\n          let index = table.offset();\n          if (shift < 0) {\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(\n              range.index + 1,\n              range.length,\n              Quill.sources.SILENT,\n            );\n          } else if (shift > 0) {\n            index += table.length();\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(index, Quill.sources.USER);\n          }\n        }\n      },\n    },\n    'table tab': {\n      key: 'Tab',\n      shiftKey: null,\n      format: ['table'],\n      handler(range, context) {\n        const { event, line: cell } = context;\n        const offset = cell.offset(this.quill.scroll);\n        if (event.shiftKey) {\n          this.quill.setSelection(offset - 1, Quill.sources.USER);\n        } else {\n          this.quill.setSelection(offset + cell.length(), Quill.sources.USER);\n        }\n      },\n    },\n    'list autofill': {\n      key: ' ',\n      shiftKey: null,\n      collapsed: true,\n      format: {\n        'code-block': false,\n        blockquote: false,\n        table: false,\n      },\n      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n      handler(range, context) {\n        if (this.quill.scroll.query('list') == null) return true;\n        const { length } = context.prefix;\n        const [line, offset] = this.quill.getLine(range.index);\n        if (offset > length) return true;\n        let value;\n        switch (context.prefix.trim()) {\n          case '[]':\n          case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n          case '*':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.insertText(range.index, ' ', Quill.sources.USER);\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index - offset)\n          .delete(length + 1)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - 2 - offset)\n          .retain(1, { list: value });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index - length, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'code exit': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /^$/,\n      suffix: /^\\s*$/,\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        let numLines = 2;\n        let cur = line;\n        while (\n          cur != null &&\n          cur.length() <= 1 &&\n          cur.formats()['code-block']\n        ) {\n          // @ts-expect-error\n          cur = cur.prev;\n          numLines -= 1;\n          // Requisite prev lines are empty\n          if (numLines <= 0) {\n            const delta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - offset - 2)\n              .retain(1, { 'code-block': null })\n              .delete(1);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index - 1, Quill.sources.SILENT);\n            return false;\n          }\n        }\n        return true;\n      },\n    },\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\n    'table down': makeTableArrowHandler(false),\n    'table up': makeTableArrowHandler(true),\n  },\n};\n\nKeyboard.DEFAULTS = defaultOptions;\n\nfunction makeCodeBlockHandler(indent: boolean): BindingObject {\n  return {\n    key: 'Tab',\n    shiftKey: !indent,\n    format: { 'code-block': true },\n    handler(range, { event }) {\n      const CodeBlock = this.quill.scroll.query('code-block');\n      // @ts-expect-error\n      const { TAB } = CodeBlock;\n      if (range.length === 0 && !event.shiftKey) {\n        this.quill.insertText(range.index, TAB, Quill.sources.USER);\n        this.quill.setSelection(range.index + TAB.length, Quill.sources.SILENT);\n        return;\n      }\n\n      const lines =\n        range.length === 0\n          ? this.quill.getLines(range.index, 1)\n          : this.quill.getLines(range);\n      let { index, length } = range;\n      lines.forEach((line, i) => {\n        if (indent) {\n          line.insertAt(0, TAB);\n          if (i === 0) {\n            index += TAB.length;\n          } else {\n            length += TAB.length;\n          }\n          // @ts-expect-error Fix me later\n        } else if (line.domNode.textContent.startsWith(TAB)) {\n          line.deleteAt(0, TAB.length);\n          if (i === 0) {\n            index -= TAB.length;\n          } else {\n            length -= TAB.length;\n          }\n        }\n      });\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(index, length, Quill.sources.SILENT);\n    },\n  };\n}\n\nfunction makeEmbedArrowHandler(\n  key: string,\n  shiftKey: boolean | null,\n): BindingObject {\n  const where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\n  return {\n    key,\n    shiftKey,\n    altKey: null,\n    [where]: /^$/,\n    handler(range) {\n      let { index } = range;\n      if (key === 'ArrowRight') {\n        index += range.length + 1;\n      }\n      const [leaf] = this.quill.getLeaf(index);\n      if (!(leaf instanceof EmbedBlot)) return true;\n      if (key === 'ArrowLeft') {\n        if (shiftKey) {\n          this.quill.setSelection(\n            range.index - 1,\n            range.length + 1,\n            Quill.sources.USER,\n          );\n        } else {\n          this.quill.setSelection(range.index - 1, Quill.sources.USER);\n        }\n      } else if (shiftKey) {\n        this.quill.setSelection(\n          range.index,\n          range.length + 1,\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.setSelection(\n          range.index + range.length + 1,\n          Quill.sources.USER,\n        );\n      }\n      return false;\n    },\n  };\n}\n\nfunction makeFormatHandler(format: string): BindingObject {\n  return {\n    key: format[0],\n    shortKey: true,\n    handler(range, context) {\n      this.quill.format(format, !context.format[format], Quill.sources.USER);\n    },\n  };\n}\n\nfunction makeTableArrowHandler(up: boolean): BindingObject {\n  return {\n    key: up ? 'ArrowUp' : 'ArrowDown',\n    collapsed: true,\n    format: ['table'],\n    handler(range, context) {\n      // TODO move to table module\n      const key = up ? 'prev' : 'next';\n      const cell = context.line;\n      const targetRow = cell.parent[key];\n      if (targetRow != null) {\n        if (targetRow.statics.blotName === 'table-row') {\n          // @ts-expect-error\n          let targetCell = targetRow.children.head;\n          let cur = cell;\n          while (cur.prev != null) {\n            // @ts-expect-error\n            cur = cur.prev;\n            targetCell = targetCell.next;\n          }\n          const index =\n            targetCell.offset(this.quill.scroll) +\n            Math.min(context.offset, targetCell.length() - 1);\n          this.quill.setSelection(index, 0, Quill.sources.USER);\n        }\n      } else {\n        // @ts-expect-error\n        const targetLine = cell.table()[key];\n        if (targetLine != null) {\n          if (up) {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll) + targetLine.length() - 1,\n              0,\n              Quill.sources.USER,\n            );\n          } else {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll),\n              0,\n              Quill.sources.USER,\n            );\n          }\n        }\n      }\n      return false;\n    },\n  };\n}\n\nfunction normalize(binding: Binding): BindingObject | null {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    binding = { key: binding };\n  } else if (typeof binding === 'object') {\n    binding = cloneDeep(binding);\n  } else {\n    return null;\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\n// TODO: Move into quill.ts or editor.ts\nfunction deleteRange({ quill, range }: { quill: Quill; range: Range }) {\n  const lines = quill.getLines(range);\n  let formats = {};\n  if (lines.length > 1) {\n    const firstFormats = lines[0].formats();\n    const lastFormats = lines[lines.length - 1].formats();\n    formats = AttributeMap.diff(lastFormats, firstFormats) || {};\n  }\n  quill.deleteText(range, Quill.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    quill.formatLine(range.index, 1, formats, Quill.sources.USER);\n  }\n  quill.setSelection(range.index, Quill.sources.SILENT);\n}\n\nfunction tableSide(_table: unknown, row: Blot, cell: Blot, offset: number) {\n  if (row.prev == null && row.next == null) {\n    if (cell.prev == null && cell.next == null) {\n      return offset === 0 ? -1 : 1;\n    }\n    return cell.prev == null ? -1 : 1;\n  }\n  if (row.prev == null) {\n    return -1;\n  }\n  if (row.next == null) {\n    return 1;\n  }\n  return null;\n}\n\nexport { Keyboard as default, SHORTKEY, normalize, deleteRange };\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @param {boolean} [cleanup] Apply semantic cleanup before returning.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, cleanup, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  if (cleanup) {\n    diff_cleanupSemantic(diffs);\n  }\n  return diffs;\n}\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)],\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2],\n    ];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n}\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = delta % 2 !== 0;\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length &&\n        y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length &&\n        y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) ===\n          text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2],\n  ];\n}\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n}\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\nfunction diff_commonOverlap_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (\n      found == 0 ||\n      text1.substring(text_length - length) == text2.substring(0, length)\n    ) {\n      best = length;\n      length++;\n    }\n  }\n}\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null; // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = \"\";\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i),\n        shorttext.substring(j)\n      );\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i),\n        shorttext.substring(0, j)\n      );\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common =\n          shorttext.substring(j - suffixLength, j) +\n          shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a,\n        best_longtext_b,\n        best_shorttext_a,\n        best_shorttext_b,\n        best_common,\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 4)\n  );\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 2)\n  );\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n}\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemantic(diffs) {\n  var changes = false;\n  var equalities = []; // Stack of indices where equalities are found.\n  var equalitiesLength = 0; // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0; // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {\n      // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (\n        lastequality &&\n        lastequality.length <=\n          Math.max(length_insertions1, length_deletions1) &&\n        lastequality.length <= Math.max(length_insertions2, length_deletions2)\n      ) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, [\n          DIFF_DELETE,\n          lastequality,\n        ]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0; // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n  diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (\n      diffs[pointer - 1][0] == DIFF_DELETE &&\n      diffs[pointer][0] == DIFF_INSERT\n    ) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (\n          overlap_length1 >= deletion.length / 2 ||\n          overlap_length1 >= insertion.length / 2\n        ) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            insertion.substring(0, overlap_length1),\n          ]);\n          diffs[pointer - 1][1] = deletion.substring(\n            0,\n            deletion.length - overlap_length1\n          );\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (\n          overlap_length2 >= deletion.length / 2 ||\n          overlap_length2 >= insertion.length / 2\n        ) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            deletion.substring(0, overlap_length2),\n          ]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] = insertion.substring(\n            0,\n            insertion.length - overlap_length2\n          );\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n}\n\nvar nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\nvar whitespaceRegex_ = /\\s/;\nvar linebreakRegex_ = /[\\r\\n]/;\nvar blanklineEndRegex_ = /\\n\\r?\\n$/;\nvar blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemanticLossless(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n    var lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n    var lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n    var blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n    var blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] == DIFF_EQUAL &&\n      diffs[pointer + 1][0] == DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore =\n        diff_cleanupSemanticScore_(equality1, edit) +\n        diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score =\n          diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n}\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, \"\"]); // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = \"\";\n  var text_insert = \"\";\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (\n            previous_equality >= 0 &&\n            ends_with_pair_start(diffs[previous_equality][1])\n          ) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(\n              0,\n              -1\n            );\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(\n                  0,\n                  commonlength\n                );\n              } else {\n                diffs.splice(0, 0, [\n                  DIFF_EQUAL,\n                  text_insert.substring(0, commonlength),\n                ]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) +\n                diffs[pointer][1];\n              text_insert = text_insert.substring(\n                0,\n                text_insert.length - commonlength\n              );\n              text_delete = text_delete.substring(\n                0,\n                text_delete.length - commonlength\n              );\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(\n              pointer - n,\n              n,\n              [DIFF_DELETE, text_delete],\n              [DIFF_INSERT, text_insert]\n            );\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = \"\";\n        text_insert = \"\";\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === \"\") {\n    diffs.pop(); // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      if (\n        diffs[pointer][1].substring(\n          diffs[pointer][1].length - diffs[pointer - 1][1].length\n        ) === diffs[pointer - 1][1]\n      ) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] =\n          diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(\n            0,\n            diffs[pointer][1].length - diffs[pointer - 1][1].length\n          );\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (\n        diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]\n      ) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n}\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xd800 && charCode <= 0xdbff;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xdc00 && charCode <= 0xdfff;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after],\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange =\n    typeof cursor_pos === \"number\"\n      ? { index: cursor_pos, length: 0 }\n      : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === \"number\" ? null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos, cleanup) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, cleanup, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n", "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n", "import cloneDeep = require('lodash.clonedeep');\nimport isEqual = require('lodash.isequal');\n\ninterface AttributeMap {\n  [key: string]: unknown;\n}\n\nnamespace AttributeMap {\n  export function compose(\n    a: AttributeMap = {},\n    b: AttributeMap = {},\n    keepNull = false,\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    let attributes = cloneDeep(b);\n    if (!keepNull) {\n      attributes = Object.keys(attributes).reduce<AttributeMap>((copy, key) => {\n        if (attributes[key] != null) {\n          copy[key] = attributes[key];\n        }\n        return copy;\n      }, {});\n    }\n    for (const key in a) {\n      if (a[key] !== undefined && b[key] === undefined) {\n        attributes[key] = a[key];\n      }\n    }\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n\n  export function diff(\n    a: AttributeMap = {},\n    b: AttributeMap = {},\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    const attributes = Object.keys(a)\n      .concat(Object.keys(b))\n      .reduce<AttributeMap>((attrs, key) => {\n        if (!isEqual(a[key], b[key])) {\n          attrs[key] = b[key] === undefined ? null : b[key];\n        }\n        return attrs;\n      }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n\n  export function invert(\n    attr: AttributeMap = {},\n    base: AttributeMap = {},\n  ): AttributeMap {\n    attr = attr || {};\n    const baseInverted = Object.keys(base).reduce<AttributeMap>((memo, key) => {\n      if (base[key] !== attr[key] && attr[key] !== undefined) {\n        memo[key] = base[key];\n      }\n      return memo;\n    }, {});\n    return Object.keys(attr).reduce<AttributeMap>((memo, key) => {\n      if (attr[key] !== base[key] && base[key] === undefined) {\n        memo[key] = null;\n      }\n      return memo;\n    }, baseInverted);\n  }\n\n  export function transform(\n    a: AttributeMap | undefined,\n    b: AttributeMap | undefined,\n    priority = false,\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      return b;\n    }\n    if (typeof b !== 'object') {\n      return undefined;\n    }\n    if (!priority) {\n      return b; // b simply overwrites us without priority\n    }\n    const attributes = Object.keys(b).reduce<AttributeMap>((attrs, key) => {\n      if (a[key] === undefined) {\n        attrs[key] = b[key]; // null is a valid value\n      }\n      return attrs;\n    }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n}\n\nexport default AttributeMap;\n", "import * as diff from 'fast-diff';\nimport cloneDeep = require('lodash.clonedeep');\nimport isEqual = require('lodash.isequal');\nimport AttributeMap from './AttributeMap';\nimport Op from './Op';\nimport OpIterator from './OpIterator';\n\nconst NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()\n\ninterface EmbedHandler<T> {\n  compose(a: T, b: T, keepNull: boolean): T;\n  invert(a: T, b: T): T;\n  transform(a: T, b: T, priority: boolean): T;\n}\n\nconst getEmbedTypeAndData = (\n  a: Op['insert'] | Op['retain'],\n  b: Op['insert'],\n): [string, unknown, unknown] => {\n  if (typeof a !== 'object' || a === null) {\n    throw new Error(`cannot retain a ${typeof a}`);\n  }\n  if (typeof b !== 'object' || b === null) {\n    throw new Error(`cannot retain a ${typeof b}`);\n  }\n  const embedType = Object.keys(a)[0];\n  if (!embedType || embedType !== Object.keys(b)[0]) {\n    throw new Error(\n      `embed types not matched: ${embedType} != ${Object.keys(b)[0]}`,\n    );\n  }\n  return [embedType, a[embedType], b[embedType]];\n};\n\nclass Delta {\n  static Op = Op;\n  static OpIterator = OpIterator;\n  static AttributeMap = AttributeMap;\n  private static handlers: { [embedType: string]: EmbedHandler<unknown> } = {};\n\n  static registerEmbed<T>(embedType: string, handler: EmbedHandler<T>): void {\n    this.handlers[embedType] = handler;\n  }\n\n  static unregisterEmbed(embedType: string): void {\n    delete this.handlers[embedType];\n  }\n\n  private static getHandler(embedType: string): EmbedHandler<unknown> {\n    const handler = this.handlers[embedType];\n    if (!handler) {\n      throw new Error(`no handlers for embed type \"${embedType}\"`);\n    }\n    return handler;\n  }\n\n  ops: Op[];\n  constructor(ops?: Op[] | { ops: Op[] }) {\n    // Assume we are given a well formed ops\n    if (Array.isArray(ops)) {\n      this.ops = ops;\n    } else if (ops != null && Array.isArray(ops.ops)) {\n      this.ops = ops.ops;\n    } else {\n      this.ops = [];\n    }\n  }\n\n  insert(\n    arg: string | Record<string, unknown>,\n    attributes?: AttributeMap | null,\n  ): this {\n    const newOp: Op = {};\n    if (typeof arg === 'string' && arg.length === 0) {\n      return this;\n    }\n    newOp.insert = arg;\n    if (\n      attributes != null &&\n      typeof attributes === 'object' &&\n      Object.keys(attributes).length > 0\n    ) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  }\n\n  delete(length: number): this {\n    if (length <= 0) {\n      return this;\n    }\n    return this.push({ delete: length });\n  }\n\n  retain(\n    length: number | Record<string, unknown>,\n    attributes?: AttributeMap | null,\n  ): this {\n    if (typeof length === 'number' && length <= 0) {\n      return this;\n    }\n    const newOp: Op = { retain: length };\n    if (\n      attributes != null &&\n      typeof attributes === 'object' &&\n      Object.keys(attributes).length > 0\n    ) {\n      newOp.attributes = attributes;\n    }\n    return this.push(newOp);\n  }\n\n  push(newOp: Op): this {\n    let index = this.ops.length;\n    let lastOp = this.ops[index - 1];\n    newOp = cloneDeep(newOp);\n    if (typeof lastOp === 'object') {\n      if (\n        typeof newOp.delete === 'number' &&\n        typeof lastOp.delete === 'number'\n      ) {\n        this.ops[index - 1] = { delete: lastOp.delete + newOp.delete };\n        return this;\n      }\n      // Since it does not matter if we insert before or after deleting at the same index,\n      // always prefer to insert first\n      if (typeof lastOp.delete === 'number' && newOp.insert != null) {\n        index -= 1;\n        lastOp = this.ops[index - 1];\n        if (typeof lastOp !== 'object') {\n          this.ops.unshift(newOp);\n          return this;\n        }\n      }\n      if (isEqual(newOp.attributes, lastOp.attributes)) {\n        if (\n          typeof newOp.insert === 'string' &&\n          typeof lastOp.insert === 'string'\n        ) {\n          this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };\n          if (typeof newOp.attributes === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        } else if (\n          typeof newOp.retain === 'number' &&\n          typeof lastOp.retain === 'number'\n        ) {\n          this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };\n          if (typeof newOp.attributes === 'object') {\n            this.ops[index - 1].attributes = newOp.attributes;\n          }\n          return this;\n        }\n      }\n    }\n    if (index === this.ops.length) {\n      this.ops.push(newOp);\n    } else {\n      this.ops.splice(index, 0, newOp);\n    }\n    return this;\n  }\n\n  chop(): this {\n    const lastOp = this.ops[this.ops.length - 1];\n    if (lastOp && typeof lastOp.retain === 'number' && !lastOp.attributes) {\n      this.ops.pop();\n    }\n    return this;\n  }\n\n  filter(predicate: (op: Op, index: number) => boolean): Op[] {\n    return this.ops.filter(predicate);\n  }\n\n  forEach(predicate: (op: Op, index: number) => void): void {\n    this.ops.forEach(predicate);\n  }\n\n  map<T>(predicate: (op: Op, index: number) => T): T[] {\n    return this.ops.map(predicate);\n  }\n\n  partition(predicate: (op: Op) => boolean): [Op[], Op[]] {\n    const passed: Op[] = [];\n    const failed: Op[] = [];\n    this.forEach((op) => {\n      const target = predicate(op) ? passed : failed;\n      target.push(op);\n    });\n    return [passed, failed];\n  }\n\n  reduce<T>(\n    predicate: (accum: T, curr: Op, index: number) => T,\n    initialValue: T,\n  ): T {\n    return this.ops.reduce(predicate, initialValue);\n  }\n\n  changeLength(): number {\n    return this.reduce((length, elem) => {\n      if (elem.insert) {\n        return length + Op.length(elem);\n      } else if (elem.delete) {\n        return length - elem.delete;\n      }\n      return length;\n    }, 0);\n  }\n\n  length(): number {\n    return this.reduce((length, elem) => {\n      return length + Op.length(elem);\n    }, 0);\n  }\n\n  slice(start = 0, end = Infinity): Delta {\n    const ops = [];\n    const iter = new OpIterator(this.ops);\n    let index = 0;\n    while (index < end && iter.hasNext()) {\n      let nextOp;\n      if (index < start) {\n        nextOp = iter.next(start - index);\n      } else {\n        nextOp = iter.next(end - index);\n        ops.push(nextOp);\n      }\n      index += Op.length(nextOp);\n    }\n    return new Delta(ops);\n  }\n\n  compose(other: Delta): Delta {\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    const ops = [];\n    const firstOther = otherIter.peek();\n    if (\n      firstOther != null &&\n      typeof firstOther.retain === 'number' &&\n      firstOther.attributes == null\n    ) {\n      let firstLeft = firstOther.retain;\n      while (\n        thisIter.peekType() === 'insert' &&\n        thisIter.peekLength() <= firstLeft\n      ) {\n        firstLeft -= thisIter.peekLength();\n        ops.push(thisIter.next());\n      }\n      if (firstOther.retain - firstLeft > 0) {\n        otherIter.next(firstOther.retain - firstLeft);\n      }\n    }\n    const delta = new Delta(ops);\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else if (thisIter.peekType() === 'delete') {\n        delta.push(thisIter.next());\n      } else {\n        const length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        const thisOp = thisIter.next(length);\n        const otherOp = otherIter.next(length);\n        if (otherOp.retain) {\n          const newOp: Op = {};\n          if (typeof thisOp.retain === 'number') {\n            newOp.retain =\n              typeof otherOp.retain === 'number' ? length : otherOp.retain;\n          } else {\n            if (typeof otherOp.retain === 'number') {\n              if (thisOp.retain == null) {\n                newOp.insert = thisOp.insert;\n              } else {\n                newOp.retain = thisOp.retain;\n              }\n            } else {\n              const action = thisOp.retain == null ? 'insert' : 'retain';\n              const [embedType, thisData, otherData] = getEmbedTypeAndData(\n                thisOp[action],\n                otherOp.retain,\n              );\n              const handler = Delta.getHandler(embedType);\n              newOp[action] = {\n                [embedType]: handler.compose(\n                  thisData,\n                  otherData,\n                  action === 'retain',\n                ),\n              };\n            }\n          }\n          // Preserve null when composing with a retain, otherwise remove it for inserts\n          const attributes = AttributeMap.compose(\n            thisOp.attributes,\n            otherOp.attributes,\n            typeof thisOp.retain === 'number',\n          );\n          if (attributes) {\n            newOp.attributes = attributes;\n          }\n          delta.push(newOp);\n\n          // Optimization if rest of other is just retain\n          if (\n            !otherIter.hasNext() &&\n            isEqual(delta.ops[delta.ops.length - 1], newOp)\n          ) {\n            const rest = new Delta(thisIter.rest());\n            return delta.concat(rest).chop();\n          }\n\n          // Other op should be delete, we could be an insert or retain\n          // Insert + delete cancels out\n        } else if (\n          typeof otherOp.delete === 'number' &&\n          (typeof thisOp.retain === 'number' ||\n            (typeof thisOp.retain === 'object' && thisOp.retain !== null))\n        ) {\n          delta.push(otherOp);\n        }\n      }\n    }\n    return delta.chop();\n  }\n\n  concat(other: Delta): Delta {\n    const delta = new Delta(this.ops.slice());\n    if (other.ops.length > 0) {\n      delta.push(other.ops[0]);\n      delta.ops = delta.ops.concat(other.ops.slice(1));\n    }\n    return delta;\n  }\n\n  diff(other: Delta, cursor?: number | diff.CursorInfo): Delta {\n    if (this.ops === other.ops) {\n      return new Delta();\n    }\n    const strings = [this, other].map((delta) => {\n      return delta\n        .map((op) => {\n          if (op.insert != null) {\n            return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;\n          }\n          const prep = delta === other ? 'on' : 'with';\n          throw new Error('diff() called ' + prep + ' non-document');\n        })\n        .join('');\n    });\n    const retDelta = new Delta();\n    const diffResult = diff(strings[0], strings[1], cursor, true);\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    diffResult.forEach((component: diff.Diff) => {\n      let length = component[1].length;\n      while (length > 0) {\n        let opLength = 0;\n        switch (component[0]) {\n          case diff.INSERT:\n            opLength = Math.min(otherIter.peekLength(), length);\n            retDelta.push(otherIter.next(opLength));\n            break;\n          case diff.DELETE:\n            opLength = Math.min(length, thisIter.peekLength());\n            thisIter.next(opLength);\n            retDelta.delete(opLength);\n            break;\n          case diff.EQUAL:\n            opLength = Math.min(\n              thisIter.peekLength(),\n              otherIter.peekLength(),\n              length,\n            );\n            const thisOp = thisIter.next(opLength);\n            const otherOp = otherIter.next(opLength);\n            if (isEqual(thisOp.insert, otherOp.insert)) {\n              retDelta.retain(\n                opLength,\n                AttributeMap.diff(thisOp.attributes, otherOp.attributes),\n              );\n            } else {\n              retDelta.push(otherOp).delete(opLength);\n            }\n            break;\n        }\n        length -= opLength;\n      }\n    });\n    return retDelta.chop();\n  }\n\n  eachLine(\n    predicate: (\n      line: Delta,\n      attributes: AttributeMap,\n      index: number,\n    ) => boolean | void,\n    newline = '\\n',\n  ): void {\n    const iter = new OpIterator(this.ops);\n    let line = new Delta();\n    let i = 0;\n    while (iter.hasNext()) {\n      if (iter.peekType() !== 'insert') {\n        return;\n      }\n      const thisOp = iter.peek();\n      const start = Op.length(thisOp) - iter.peekLength();\n      const index =\n        typeof thisOp.insert === 'string'\n          ? thisOp.insert.indexOf(newline, start) - start\n          : -1;\n      if (index < 0) {\n        line.push(iter.next());\n      } else if (index > 0) {\n        line.push(iter.next(index));\n      } else {\n        if (predicate(line, iter.next(1).attributes || {}, i) === false) {\n          return;\n        }\n        i += 1;\n        line = new Delta();\n      }\n    }\n    if (line.length() > 0) {\n      predicate(line, {}, i);\n    }\n  }\n\n  invert(base: Delta): Delta {\n    const inverted = new Delta();\n    this.reduce((baseIndex, op) => {\n      if (op.insert) {\n        inverted.delete(Op.length(op));\n      } else if (typeof op.retain === 'number' && op.attributes == null) {\n        inverted.retain(op.retain);\n        return baseIndex + op.retain;\n      } else if (op.delete || typeof op.retain === 'number') {\n        const length = (op.delete || op.retain) as number;\n        const slice = base.slice(baseIndex, baseIndex + length);\n        slice.forEach((baseOp) => {\n          if (op.delete) {\n            inverted.push(baseOp);\n          } else if (op.retain && op.attributes) {\n            inverted.retain(\n              Op.length(baseOp),\n              AttributeMap.invert(op.attributes, baseOp.attributes),\n            );\n          }\n        });\n        return baseIndex + length;\n      } else if (typeof op.retain === 'object' && op.retain !== null) {\n        const slice = base.slice(baseIndex, baseIndex + 1);\n        const baseOp = new OpIterator(slice.ops).next();\n        const [embedType, opData, baseOpData] = getEmbedTypeAndData(\n          op.retain,\n          baseOp.insert,\n        );\n        const handler = Delta.getHandler(embedType);\n        inverted.retain(\n          { [embedType]: handler.invert(opData, baseOpData) },\n          AttributeMap.invert(op.attributes, baseOp.attributes),\n        );\n        return baseIndex + 1;\n      }\n      return baseIndex;\n    }, 0);\n    return inverted.chop();\n  }\n\n  transform(index: number, priority?: boolean): number;\n  transform(other: Delta, priority?: boolean): Delta;\n  transform(arg: number | Delta, priority = false): typeof arg {\n    priority = !!priority;\n    if (typeof arg === 'number') {\n      return this.transformPosition(arg, priority);\n    }\n    const other: Delta = arg;\n    const thisIter = new OpIterator(this.ops);\n    const otherIter = new OpIterator(other.ops);\n    const delta = new Delta();\n    while (thisIter.hasNext() || otherIter.hasNext()) {\n      if (\n        thisIter.peekType() === 'insert' &&\n        (priority || otherIter.peekType() !== 'insert')\n      ) {\n        delta.retain(Op.length(thisIter.next()));\n      } else if (otherIter.peekType() === 'insert') {\n        delta.push(otherIter.next());\n      } else {\n        const length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n        const thisOp = thisIter.next(length);\n        const otherOp = otherIter.next(length);\n        if (thisOp.delete) {\n          // Our delete either makes their delete redundant or removes their retain\n          continue;\n        } else if (otherOp.delete) {\n          delta.push(otherOp);\n        } else {\n          const thisData = thisOp.retain;\n          const otherData = otherOp.retain;\n          let transformedData: Op['retain'] =\n            typeof otherData === 'object' && otherData !== null\n              ? otherData\n              : length;\n          if (\n            typeof thisData === 'object' &&\n            thisData !== null &&\n            typeof otherData === 'object' &&\n            otherData !== null\n          ) {\n            const embedType = Object.keys(thisData)[0];\n            if (embedType === Object.keys(otherData)[0]) {\n              const handler = Delta.getHandler(embedType);\n              if (handler) {\n                transformedData = {\n                  [embedType]: handler.transform(\n                    thisData[embedType],\n                    otherData[embedType],\n                    priority,\n                  ),\n                };\n              }\n            }\n          }\n\n          // We retain either their retain or insert\n          delta.retain(\n            transformedData,\n            AttributeMap.transform(\n              thisOp.attributes,\n              otherOp.attributes,\n              priority,\n            ),\n          );\n        }\n      }\n    }\n    return delta.chop();\n  }\n\n  transformPosition(index: number, priority = false): number {\n    priority = !!priority;\n    const thisIter = new OpIterator(this.ops);\n    let offset = 0;\n    while (thisIter.hasNext() && offset <= index) {\n      const length = thisIter.peekLength();\n      const nextType = thisIter.peekType();\n      thisIter.next();\n      if (nextType === 'delete') {\n        index -= Math.min(length, index - offset);\n        continue;\n      } else if (nextType === 'insert' && (offset < index || !priority)) {\n        index += length;\n      }\n      offset += length;\n    }\n    return index;\n  }\n}\n\nexport default Delta;\n\nexport { Op, OpIterator, AttributeMap };\n\nif (typeof module === 'object') {\n  module.exports = Delta;\n  module.exports.default = Delta;\n}\n", "import AttributeMap from './AttributeMap';\n\ninterface Op {\n  // only one property out of {insert, delete, retain} will be present\n  insert?: string | Record<string, unknown>;\n  delete?: number;\n  retain?: number | Record<string, unknown>;\n\n  attributes?: AttributeMap;\n}\n\nnamespace Op {\n  export function length(op: Op): number {\n    if (typeof op.delete === 'number') {\n      return op.delete;\n    } else if (typeof op.retain === 'number') {\n      return op.retain;\n    } else if (typeof op.retain === 'object' && op.retain !== null) {\n      return 1;\n    } else {\n      return typeof op.insert === 'string' ? op.insert.length : 1;\n    }\n  }\n}\n\nexport default Op;\n", "import Op from './Op';\n\nexport default class Iterator {\n  ops: Op[];\n  index: number;\n  offset: number;\n\n  constructor(ops: Op[]) {\n    this.ops = ops;\n    this.index = 0;\n    this.offset = 0;\n  }\n\n  hasNext(): boolean {\n    return this.peekLength() < Infinity;\n  }\n\n  next(length?: number): Op {\n    if (!length) {\n      length = Infinity;\n    }\n    const nextOp = this.ops[this.index];\n    if (nextOp) {\n      const offset = this.offset;\n      const opLength = Op.length(nextOp);\n      if (length >= opLength - offset) {\n        length = opLength - offset;\n        this.index += 1;\n        this.offset = 0;\n      } else {\n        this.offset += length;\n      }\n      if (typeof nextOp.delete === 'number') {\n        return { delete: length };\n      } else {\n        const retOp: Op = {};\n        if (nextOp.attributes) {\n          retOp.attributes = nextOp.attributes;\n        }\n        if (typeof nextOp.retain === 'number') {\n          retOp.retain = length;\n        } else if (\n          typeof nextOp.retain === 'object' &&\n          nextOp.retain !== null\n        ) {\n          // offset should === 0, length should === 1\n          retOp.retain = nextOp.retain;\n        } else if (typeof nextOp.insert === 'string') {\n          retOp.insert = nextOp.insert.substr(offset, length);\n        } else {\n          // offset should === 0, length should === 1\n          retOp.insert = nextOp.insert;\n        }\n        return retOp;\n      }\n    } else {\n      return { retain: Infinity };\n    }\n  }\n\n  peek(): Op {\n    return this.ops[this.index];\n  }\n\n  peekLength(): number {\n    if (this.ops[this.index]) {\n      // Should never return 0 if our index is being managed correctly\n      return Op.length(this.ops[this.index]) - this.offset;\n    } else {\n      return Infinity;\n    }\n  }\n\n  peekType(): string {\n    const op = this.ops[this.index];\n    if (op) {\n      if (typeof op.delete === 'number') {\n        return 'delete';\n      } else if (\n        typeof op.retain === 'number' ||\n        (typeof op.retain === 'object' && op.retain !== null)\n      ) {\n        return 'retain';\n      } else {\n        return 'insert';\n      }\n    }\n    return 'retain';\n  }\n\n  rest(): Op[] {\n    if (!this.hasNext()) {\n      return [];\n    } else if (this.offset === 0) {\n      return this.ops.slice(this.index);\n    } else {\n      const offset = this.offset;\n      const index = this.index;\n      const next = this.next();\n      const rest = this.ops.slice(this.index);\n      this.offset = offset;\n      this.index = index;\n      return [next].concat(rest);\n    }\n  }\n}\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n", "import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n", "import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n", "import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n", "import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n", "import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n", "import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n", "import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n", "import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n", "import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n", "import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n", "/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n", "/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n", "/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n", "import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n", "import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n", "import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n", "import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n", "import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n", "import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n", "import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n", "import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n", "import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n", "import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n", "/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n", "import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n", "import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n", "import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n", "import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n", "import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n", "import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n", "import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n", "import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n", "/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n", "import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n", "import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n", "import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n", "import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n", "import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n", "import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n", "import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n", "import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n", "/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n", "import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n", "import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n", "import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n", "import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n", "import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n", "import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n", "import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n", "import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n", "import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n", "import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n", "/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n", "import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n", "import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n", "import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n", "import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n", "import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n", "/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n", "import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n", "/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n", "import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n", "import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n", "import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n", "import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n", "import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n", "import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n", "import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n", "import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n", "import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n", "import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n", "import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n", "/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n", "import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n", "import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n", "import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n", "/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n", "import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n", "/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n", "import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n", "import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n", "import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n", "import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n", "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n", "import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n", "import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n", "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n", "import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n", "import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n", "/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n", "import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n", "import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n", "/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n", "enum Scope {\n  TYPE = (1 << 2) - 1, // 0011 Lower two bits\n  LEVEL = ((1 << 2) - 1) << 2, // 1100 Higher two bits\n\n  ATTRIBUTE = (1 << 0) | LEVEL, // 1101\n  BLOT = (1 << 1) | LEVEL, // 1110\n  INLINE = (1 << 2) | TYPE, // 0111\n  BLOCK = (1 << 3) | TYPE, // 1011\n\n  BLOCK_BLOT = BLOCK & BLOT, // 1010\n  INLINE_BLOT = INLINE & BLOT, // 0110\n  BLOCK_ATTRIBUTE = BLOCK & ATTRIBUTE, // 1001\n  INLINE_ATTRIBUTE = INLINE & ATTRIBUTE, // 0101\n\n  ANY = TYPE | LEVEL,\n}\n\nexport default Scope;\n", "import Scope from '../scope.js';\n\nexport interface AttributorOptions {\n  scope?: Scope;\n  whitelist?: string[];\n}\n\nexport default class Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return Array.from(node.attributes).map((item: Attr) => item.name);\n  }\n\n  public scope: Scope;\n  public whitelist: string[] | undefined;\n\n  constructor(\n    public readonly attrName: string,\n    public readonly keyName: string,\n    options: AttributorOptions = {},\n  ) {\n    const attributeBit = Scope.TYPE & Scope.ATTRIBUTE;\n    this.scope =\n      options.scope != null\n        ? // Ignore type bits, force attribute bit\n          (options.scope & Scope.LEVEL) | attributeBit\n        : Scope.ATTRIBUTE;\n    if (options.whitelist != null) {\n      this.whitelist = options.whitelist;\n    }\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    node.setAttribute(this.keyName, value);\n    return true;\n  }\n\n  public canAdd(_node: HTMLElement, value: any): boolean {\n    if (this.whitelist == null) {\n      return true;\n    }\n    if (typeof value === 'string') {\n      return this.whitelist.indexOf(value.replace(/[\"']/g, '')) > -1;\n    } else {\n      return this.whitelist.indexOf(value) > -1;\n    }\n  }\n\n  public remove(node: HTMLElement): void {\n    node.removeAttribute(this.keyName);\n  }\n\n  public value(node: HTMLElement): any {\n    const value = node.getAttribute(this.keyName);\n    if (this.canAdd(node, value) && value) {\n      return value;\n    }\n    return '';\n  }\n}\n", "export default class ParchmentError extends Error {\n  public message: string;\n  public name: string;\n  public stack!: string;\n\n  constructor(message: string) {\n    message = '[Parchment] ' + message;\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n}\n", "import Attributor from './attributor/attributor.js';\nimport {\n  type Blot,\n  type BlotConstructor,\n  type Root,\n} from './blot/abstract/blot.js';\nimport ParchmentError from './error.js';\nimport Scope from './scope.js';\n\nexport type RegistryDefinition = Attributor | BlotConstructor;\n\nexport interface RegistryInterface {\n  create(scroll: Root, input: Node | string | Scope, value?: any): Blot;\n  query(query: string | Node | Scope, scope: Scope): RegistryDefinition | null;\n  register(...definitions: any[]): any;\n}\n\nexport default class Registry implements RegistryInterface {\n  public static blots = new WeakMap<Node, Blot>();\n\n  public static find(node?: Node | null, bubble = false): Blot | null {\n    if (node == null) {\n      return null;\n    }\n    if (this.blots.has(node)) {\n      return this.blots.get(node) || null;\n    }\n    if (bubble) {\n      let parentNode: Node | null = null;\n      try {\n        parentNode = node.parentNode;\n      } catch (err) {\n        // Probably hit a permission denied error.\n        // A known case is in Firefox, event targets can be anonymous DIVs\n        // inside an input element.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return null;\n      }\n      return this.find(parentNode, bubble);\n    }\n    return null;\n  }\n\n  private attributes: { [key: string]: Attributor } = {};\n  private classes: { [key: string]: BlotConstructor } = {};\n  private tags: { [key: string]: BlotConstructor } = {};\n  private types: { [key: string]: RegistryDefinition } = {};\n\n  public create(scroll: Root, input: Node | string | Scope, value?: any): Blot {\n    const match = this.query(input);\n    if (match == null) {\n      throw new ParchmentError(`Unable to create ${input} blot`);\n    }\n    const blotClass = match as BlotConstructor;\n    const node =\n      // @ts-expect-error Fix me later\n      input instanceof Node || input.nodeType === Node.TEXT_NODE\n        ? input\n        : blotClass.create(value);\n\n    const blot = new blotClass(scroll, node as Node, value);\n    Registry.blots.set(blot.domNode, blot);\n    return blot;\n  }\n\n  public find(node: Node | null, bubble = false): Blot | null {\n    return Registry.find(node, bubble);\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): RegistryDefinition | null {\n    let match;\n    if (typeof query === 'string') {\n      match = this.types[query] || this.attributes[query];\n      // @ts-expect-error Fix me later\n    } else if (query instanceof Text || query.nodeType === Node.TEXT_NODE) {\n      match = this.types.text;\n    } else if (typeof query === 'number') {\n      if (query & Scope.LEVEL & Scope.BLOCK) {\n        match = this.types.block;\n      } else if (query & Scope.LEVEL & Scope.INLINE) {\n        match = this.types.inline;\n      }\n    } else if (query instanceof Element) {\n      const names = (query.getAttribute('class') || '').split(/\\s+/);\n      names.some((name) => {\n        match = this.classes[name];\n        if (match) {\n          return true;\n        }\n        return false;\n      });\n      match = match || this.tags[query.tagName];\n    }\n    if (match == null) {\n      return null;\n    }\n    if (\n      'scope' in match &&\n      scope & Scope.LEVEL & match.scope &&\n      scope & Scope.TYPE & match.scope\n    ) {\n      return match;\n    }\n    return null;\n  }\n\n  public register(...definitions: RegistryDefinition[]): RegistryDefinition[] {\n    return definitions.map((definition) => {\n      const isBlot = 'blotName' in definition;\n      const isAttr = 'attrName' in definition;\n      if (!isBlot && !isAttr) {\n        throw new ParchmentError('Invalid definition');\n      } else if (isBlot && definition.blotName === 'abstract') {\n        throw new ParchmentError('Cannot register abstract class');\n      }\n      const key = isBlot\n        ? definition.blotName\n        : isAttr\n          ? definition.attrName\n          : (undefined as never); // already handled by above checks\n      this.types[key] = definition;\n\n      if (isAttr) {\n        if (typeof definition.keyName === 'string') {\n          this.attributes[definition.keyName] = definition;\n        }\n      } else if (isBlot) {\n        if (definition.className) {\n          this.classes[definition.className] = definition;\n        }\n        if (definition.tagName) {\n          if (Array.isArray(definition.tagName)) {\n            definition.tagName = definition.tagName.map((tagName: string) => {\n              return tagName.toUpperCase();\n            });\n          } else {\n            definition.tagName = definition.tagName.toUpperCase();\n          }\n          const tagNames = Array.isArray(definition.tagName)\n            ? definition.tagName\n            : [definition.tagName];\n          tagNames.forEach((tag: string) => {\n            if (this.tags[tag] == null || definition.className == null) {\n              this.tags[tag] = definition;\n            }\n          });\n        }\n      }\n      return definition;\n    });\n  }\n}\n", "import Attributor from './attributor.js';\n\nfunction match(node: HTMLElement, prefix: string): string[] {\n  const className = node.getAttribute('class') || '';\n  return className\n    .split(/\\s+/)\n    .filter((name) => name.indexOf(`${prefix}-`) === 0);\n}\n\nclass ClassAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('class') || '')\n      .split(/\\s+/)\n      .map((name) => name.split('-').slice(0, -1).join('-'));\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    this.remove(node);\n    node.classList.add(`${this.keyName}-${value}`);\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    const matches = match(node, this.keyName);\n    matches.forEach((name) => {\n      node.classList.remove(name);\n    });\n    if (node.classList.length === 0) {\n      node.removeAttribute('class');\n    }\n  }\n\n  public value(node: HTMLElement): any {\n    const result = match(node, this.keyName)[0] || '';\n    const value = result.slice(this.keyName.length + 1); // +1 for hyphen\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default ClassAttributor;\n", "import Attributor from './attributor.js';\n\nfunction camelize(name: string): string {\n  const parts = name.split('-');\n  const rest = parts\n    .slice(1)\n    .map((part: string) => part[0].toUpperCase() + part.slice(1))\n    .join('');\n  return parts[0] + rest;\n}\n\nclass StyleAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('style') || '').split(';').map((value) => {\n      const arr = value.split(':');\n      return arr[0].trim();\n    });\n  }\n\n  public add(node: HTMLElement, value: any): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    // @ts-expect-error Fix me later\n    node.style[camelize(this.keyName)] = value;\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    // @ts-expect-error Fix me later\n    node.style[camelize(this.keyName)] = '';\n    if (!node.getAttribute('style')) {\n      node.removeAttribute('style');\n    }\n  }\n\n  public value(node: HTMLElement): any {\n    // @ts-expect-error Fix me later\n    const value = node.style[camelize(this.keyName)];\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default StyleAttributor;\n", "import type { Formattable } from '../blot/abstract/blot.js';\nimport Registry from '../registry.js';\nimport Scope from '../scope.js';\nimport Attributor from './attributor.js';\nimport ClassAttributor from './class.js';\nimport StyleAttributor from './style.js';\n\nclass AttributorStore {\n  private attributes: { [key: string]: Attributor } = {};\n  private domNode: HTMLElement;\n\n  constructor(domNode: HTMLElement) {\n    this.domNode = domNode;\n    this.build();\n  }\n\n  public attribute(attribute: Attributor, value: any): void {\n    // verb\n    if (value) {\n      if (attribute.add(this.domNode, value)) {\n        if (attribute.value(this.domNode) != null) {\n          this.attributes[attribute.attrName] = attribute;\n        } else {\n          delete this.attributes[attribute.attrName];\n        }\n      }\n    } else {\n      attribute.remove(this.domNode);\n      delete this.attributes[attribute.attrName];\n    }\n  }\n\n  public build(): void {\n    this.attributes = {};\n    const blot = Registry.find(this.domNode);\n    if (blot == null) {\n      return;\n    }\n    const attributes = Attributor.keys(this.domNode);\n    const classes = ClassAttributor.keys(this.domNode);\n    const styles = StyleAttributor.keys(this.domNode);\n    attributes\n      .concat(classes)\n      .concat(styles)\n      .forEach((name) => {\n        const attr = blot.scroll.query(name, Scope.ATTRIBUTE);\n        if (attr instanceof Attributor) {\n          this.attributes[attr.attrName] = attr;\n        }\n      });\n  }\n\n  public copy(target: Formattable): void {\n    Object.keys(this.attributes).forEach((key) => {\n      const value = this.attributes[key].value(this.domNode);\n      target.format(key, value);\n    });\n  }\n\n  public move(target: Formattable): void {\n    this.copy(target);\n    Object.keys(this.attributes).forEach((key) => {\n      this.attributes[key].remove(this.domNode);\n    });\n    this.attributes = {};\n  }\n\n  public values(): { [key: string]: any } {\n    return Object.keys(this.attributes).reduce(\n      (attributes: { [key: string]: any }, name: string) => {\n        attributes[name] = this.attributes[name].value(this.domNode);\n        return attributes;\n      },\n      {},\n    );\n  }\n}\n\nexport default AttributorStore;\n", "import ParchmentError from '../../error.js';\nimport Registry from '../../registry.js';\nimport Scope from '../../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './blot.js';\n\nclass ShadowBlot implements Blot {\n  public static blotName = 'abstract';\n  public static className: string;\n  public static requiredContainer: BlotConstructor;\n  public static scope: Scope;\n  public static tagName: string | string[];\n\n  public static create(rawValue?: unknown): Node {\n    if (this.tagName == null) {\n      throw new ParchmentError('Blot definition missing tagName');\n    }\n    let node: HTMLElement;\n    let value: string | number | undefined;\n    if (Array.isArray(this.tagName)) {\n      if (typeof rawValue === 'string') {\n        value = rawValue.toUpperCase();\n        if (parseInt(value, 10).toString() === value) {\n          value = parseInt(value, 10);\n        }\n      } else if (typeof rawValue === 'number') {\n        value = rawValue;\n      }\n      if (typeof value === 'number') {\n        node = document.createElement(this.tagName[value - 1]);\n      } else if (value && this.tagName.indexOf(value) > -1) {\n        node = document.createElement(value);\n      } else {\n        node = document.createElement(this.tagName[0]);\n      }\n    } else {\n      node = document.createElement(this.tagName);\n    }\n    if (this.className) {\n      node.classList.add(this.className);\n    }\n    return node;\n  }\n\n  public prev: Blot | null;\n  public next: Blot | null;\n  // @ts-expect-error Fix me later\n  public parent: Parent;\n\n  // Hack for accessing inherited static methods\n  get statics(): any {\n    return this.constructor;\n  }\n  constructor(\n    public scroll: Root,\n    public domNode: Node,\n  ) {\n    Registry.blots.set(domNode, this);\n    this.prev = null;\n    this.next = null;\n  }\n\n  public attach(): void {\n    // Nothing to do\n  }\n\n  public clone(): Blot {\n    const domNode = this.domNode.cloneNode(false);\n    return this.scroll.create(domNode);\n  }\n\n  public detach(): void {\n    if (this.parent != null) {\n      this.parent.removeChild(this);\n    }\n    Registry.blots.delete(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    const blot = this.isolate(index, length);\n    blot.remove();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    const blot = this.isolate(index, length);\n    if (this.scroll.query(name, Scope.BLOT) != null && value) {\n      blot.wrap(name, value);\n    } else if (this.scroll.query(name, Scope.ATTRIBUTE) != null) {\n      const parent = this.scroll.create(this.statics.scope) as Parent &\n        Formattable;\n      blot.wrap(parent);\n      parent.format(name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const blot =\n      def == null\n        ? this.scroll.create('text', value)\n        : this.scroll.create(value, def);\n    const ref = this.split(index);\n    this.parent.insertBefore(blot, ref || undefined);\n  }\n\n  public isolate(index: number, length: number): Blot {\n    const target = this.split(index);\n    if (target == null) {\n      throw new Error('Attempt to isolate at end');\n    }\n    target.split(length);\n    return target;\n  }\n\n  public length(): number {\n    return 1;\n  }\n\n  public offset(root: Blot = this.parent): number {\n    if (this.parent == null || this === root) {\n      return 0;\n    }\n    return this.parent.children.offset(this) + this.parent.offset(root);\n  }\n\n  public optimize(_context?: { [key: string]: any }): void {\n    if (\n      this.statics.requiredContainer &&\n      !(this.parent instanceof this.statics.requiredContainer)\n    ) {\n      this.wrap(this.statics.requiredContainer.blotName);\n    }\n  }\n\n  public remove(): void {\n    if (this.domNode.parentNode != null) {\n      this.domNode.parentNode.removeChild(this.domNode);\n    }\n    this.detach();\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(replacement, this.next || undefined);\n      this.remove();\n    }\n    return replacement;\n  }\n\n  public split(index: number, _force?: boolean): Blot | null {\n    return index === 0 ? this : this.next;\n  }\n\n  public update(\n    _mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    // Nothing to do by default\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper =\n      typeof name === 'string'\n        ? (this.scroll.create(name, value) as Parent)\n        : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(wrapper, this.next || undefined);\n    }\n    if (typeof wrapper.appendChild !== 'function') {\n      throw new ParchmentError(`Cannot wrap ${name}`);\n    }\n    wrapper.appendChild(this);\n    return wrapper;\n  }\n}\n\nexport default ShadowBlot;\n", "import Scope from '../../scope.js';\nimport type { Leaf } from './blot.js';\nimport ShadowBlot from './shadow.js';\n\nclass LeafBlot extends ShadowBlot implements Leaf {\n  public static scope = Scope.INLINE_BLOT;\n\n  /**\n   * Returns the value represented by domNode if it is this Blot's type\n   * No checking that domNode can represent this Blot type is required so\n   * applications needing it should check externally before calling.\n   */\n  public static value(_domNode: Node): any {\n    return true;\n  }\n\n  /**\n   * Given location represented by node and offset from DOM Selection Range,\n   * return index to that location.\n   */\n  public index(node: Node, offset: number): number {\n    if (\n      this.domNode === node ||\n      this.domNode.compareDocumentPosition(node) &\n        Node.DOCUMENT_POSITION_CONTAINED_BY\n    ) {\n      return Math.min(offset, 1);\n    }\n    return -1;\n  }\n\n  /**\n   * Given index to location within blot, return node and offset representing\n   * that location, consumable by DOM Selection Range\n   */\n  public position(index: number, _inclusive?: boolean): [Node, number] {\n    const childNodes: Node[] = Array.from(this.parent.domNode.childNodes);\n    let offset = childNodes.indexOf(this.domNode);\n    if (index > 0) {\n      offset += 1;\n    }\n    return [this.parent.domNode, offset];\n  }\n\n  /**\n   * Return value represented by this blot\n   * Should not change without interaction from API or\n   * user change detectable by update()\n   */\n  public value(): any {\n    return {\n      [this.statics.blotName]: this.statics.value(this.domNode) || true,\n    };\n  }\n}\n\nexport default LeafBlot;\n", "import type LinkedNode from './linked-node.js';\n\nclass LinkedList<T extends LinkedNode> {\n  public head: T | null;\n  public tail: T | null;\n  public length: number;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  public append(...nodes: T[]): void {\n    this.insertBefore(nodes[0], null);\n    if (nodes.length > 1) {\n      const rest = nodes.slice(1);\n      this.append(...rest);\n    }\n  }\n\n  public at(index: number): T | null {\n    const next = this.iterator();\n    let cur = next();\n    while (cur && index > 0) {\n      index -= 1;\n      cur = next();\n    }\n    return cur;\n  }\n\n  public contains(node: T): boolean {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      if (cur === node) {\n        return true;\n      }\n      cur = next();\n    }\n    return false;\n  }\n\n  public indexOf(node: T): number {\n    const next = this.iterator();\n    let cur = next();\n    let index = 0;\n    while (cur) {\n      if (cur === node) {\n        return index;\n      }\n      index += 1;\n      cur = next();\n    }\n    return -1;\n  }\n\n  public insertBefore(node: T | null, refNode: T | null): void {\n    if (node == null) {\n      return;\n    }\n    this.remove(node);\n    node.next = refNode;\n    if (refNode != null) {\n      node.prev = refNode.prev;\n      if (refNode.prev != null) {\n        refNode.prev.next = node;\n      }\n      refNode.prev = node;\n      if (refNode === this.head) {\n        this.head = node;\n      }\n    } else if (this.tail != null) {\n      this.tail.next = node;\n      node.prev = this.tail;\n      this.tail = node;\n    } else {\n      node.prev = null;\n      this.head = this.tail = node;\n    }\n    this.length += 1;\n  }\n\n  public offset(target: T): number {\n    let index = 0;\n    let cur = this.head;\n    while (cur != null) {\n      if (cur === target) {\n        return index;\n      }\n      index += cur.length();\n      cur = cur.next as T;\n    }\n    return -1;\n  }\n\n  public remove(node: T): void {\n    if (!this.contains(node)) {\n      return;\n    }\n    if (node.prev != null) {\n      node.prev.next = node.next;\n    }\n    if (node.next != null) {\n      node.next.prev = node.prev;\n    }\n    if (node === this.head) {\n      this.head = node.next as T;\n    }\n    if (node === this.tail) {\n      this.tail = node.prev as T;\n    }\n    this.length -= 1;\n  }\n\n  public iterator(curNode: T | null = this.head): () => T | null {\n    // TODO use yield when we can\n    return (): T | null => {\n      const ret = curNode;\n      if (curNode != null) {\n        curNode = curNode.next as T;\n      }\n      return ret;\n    };\n  }\n\n  public find(index: number, inclusive = false): [T | null, number] {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      const length = cur.length();\n      if (\n        index < length ||\n        (inclusive &&\n          index === length &&\n          (cur.next == null || cur.next.length() !== 0))\n      ) {\n        return [cur, index];\n      }\n      index -= length;\n      cur = next();\n    }\n    return [null, 0];\n  }\n\n  public forEach(callback: (cur: T) => void): void {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      callback(cur);\n      cur = next();\n    }\n  }\n\n  public forEachAt(\n    index: number,\n    length: number,\n    callback: (cur: T, offset: number, length: number) => void,\n  ): void {\n    if (length <= 0) {\n      return;\n    }\n    const [startNode, offset] = this.find(index);\n    let curIndex = index - offset;\n    const next = this.iterator(startNode);\n    let cur = next();\n    while (cur && curIndex < index + length) {\n      const curLength = cur.length();\n      if (index > curIndex) {\n        callback(\n          cur,\n          index - curIndex,\n          Math.min(length, curIndex + curLength - index),\n        );\n      } else {\n        callback(cur, 0, Math.min(curLength, index + length - curIndex));\n      }\n      curIndex += curLength;\n      cur = next();\n    }\n  }\n\n  public map(callback: (cur: T) => any): any[] {\n    return this.reduce((memo: T[], cur: T) => {\n      memo.push(callback(cur));\n      return memo;\n    }, []);\n  }\n\n  public reduce<M>(callback: (memo: M, cur: T) => M, memo: M): M {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      memo = callback(memo, cur);\n      cur = next();\n    }\n    return memo;\n  }\n}\n\nexport default LinkedList;\n", "import LinkedList from '../../collection/linked-list.js';\nimport ParchmentError from '../../error.js';\nimport Scope from '../../scope.js';\nimport type { Blot, BlotConstructor, Parent, Root } from './blot.js';\nimport ShadowBlot from './shadow.js';\n\nfunction makeAttachedBlot(node: Node, scroll: Root): Blot {\n  const found = scroll.find(node);\n  if (found) return found;\n  try {\n    return scroll.create(node);\n  } catch (e) {\n    const blot = scroll.create(Scope.INLINE);\n    Array.from(node.childNodes).forEach((child: Node) => {\n      blot.domNode.appendChild(child);\n    });\n    if (node.parentNode) {\n      node.parentNode.replaceChild(blot.domNode, node);\n    }\n    blot.attach();\n    return blot;\n  }\n}\n\nclass ParentBlot extends ShadowBlot implements Parent {\n  /**\n   * Whitelist array of Blots that can be direct children.\n   */\n  public static allowedChildren?: BlotConstructor[];\n\n  /**\n   * Default child blot to be inserted if this blot becomes empty.\n   */\n  public static defaultChild?: BlotConstructor;\n  public static uiClass = '';\n\n  public children!: LinkedList<Blot>;\n  public domNode!: HTMLElement;\n  public uiNode: HTMLElement | null = null;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.build();\n  }\n\n  public appendChild(other: Blot): void {\n    this.insertBefore(other);\n  }\n\n  public attach(): void {\n    super.attach();\n    this.children.forEach((child) => {\n      child.attach();\n    });\n  }\n\n  public attachUI(node: HTMLElement): void {\n    if (this.uiNode != null) {\n      this.uiNode.remove();\n    }\n    this.uiNode = node;\n    if (ParentBlot.uiClass) {\n      this.uiNode.classList.add(ParentBlot.uiClass);\n    }\n    this.uiNode.setAttribute('contenteditable', 'false');\n    this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n  }\n\n  /**\n   * Called during construction, should fill its own children LinkedList.\n   */\n  public build(): void {\n    this.children = new LinkedList<Blot>();\n    // Need to be reversed for if DOM nodes already in order\n    Array.from(this.domNode.childNodes)\n      .filter((node: Node) => node !== this.uiNode)\n      .reverse()\n      .forEach((node: Node) => {\n        try {\n          const child = makeAttachedBlot(node, this.scroll);\n          this.insertBefore(child, this.children.head || undefined);\n        } catch (err) {\n          if (err instanceof ParchmentError) {\n            return;\n          } else {\n            throw err;\n          }\n        }\n      });\n  }\n\n  public deleteAt(index: number, length: number): void {\n    if (index === 0 && length === this.length()) {\n      return this.remove();\n    }\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.deleteAt(offset, childLength);\n    });\n  }\n\n  public descendant<T extends Blot>(\n    criteria: new (...args: any[]) => T,\n    index: number,\n  ): [T | null, number];\n  public descendant(\n    criteria: (blot: Blot) => boolean,\n    index: number,\n  ): [Blot | null, number];\n  public descendant(criteria: any, index = 0): [Blot | null, number] {\n    const [child, offset] = this.children.find(index);\n    if (\n      (criteria.blotName == null && criteria(child)) ||\n      (criteria.blotName != null && child instanceof criteria)\n    ) {\n      return [child as any, offset];\n    } else if (child instanceof ParentBlot) {\n      return child.descendant(criteria, offset);\n    } else {\n      return [null, -1];\n    }\n  }\n\n  public descendants<T extends Blot>(\n    criteria: new (...args: any[]) => T,\n    index?: number,\n    length?: number,\n  ): T[];\n  public descendants(\n    criteria: (blot: Blot) => boolean,\n    index?: number,\n    length?: number,\n  ): Blot[];\n  public descendants(\n    criteria: any,\n    index = 0,\n    length: number = Number.MAX_VALUE,\n  ): Blot[] {\n    let descendants: Blot[] = [];\n    let lengthLeft = length;\n    this.children.forEachAt(\n      index,\n      length,\n      (child: Blot, childIndex: number, childLength: number) => {\n        if (\n          (criteria.blotName == null && criteria(child)) ||\n          (criteria.blotName != null && child instanceof criteria)\n        ) {\n          descendants.push(child);\n        }\n        if (child instanceof ParentBlot) {\n          descendants = descendants.concat(\n            child.descendants(criteria, childIndex, lengthLeft),\n          );\n        }\n        lengthLeft -= childLength;\n      },\n    );\n    return descendants;\n  }\n\n  public detach(): void {\n    this.children.forEach((child) => {\n      child.detach();\n    });\n    super.detach();\n  }\n\n  public enforceAllowedChildren(): void {\n    let done = false;\n    this.children.forEach((child: Blot) => {\n      if (done) {\n        return;\n      }\n      const allowed = this.statics.allowedChildren.some(\n        (def: BlotConstructor) => child instanceof def,\n      );\n      if (allowed) {\n        return;\n      }\n      if (child.statics.scope === Scope.BLOCK_BLOT) {\n        if (child.next != null) {\n          this.splitAfter(child);\n        }\n        if (child.prev != null) {\n          this.splitAfter(child.prev);\n        }\n        child.parent.unwrap();\n        done = true;\n      } else if (child instanceof ParentBlot) {\n        child.unwrap();\n      } else {\n        child.remove();\n      }\n    });\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.formatAt(offset, childLength, name, value);\n    });\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const [child, offset] = this.children.find(index);\n    if (child) {\n      child.insertAt(offset, value, def);\n    } else {\n      const blot =\n        def == null\n          ? this.scroll.create('text', value)\n          : this.scroll.create(value, def);\n      this.appendChild(blot);\n    }\n  }\n\n  public insertBefore(childBlot: Blot, refBlot?: Blot | null): void {\n    if (childBlot.parent != null) {\n      childBlot.parent.children.remove(childBlot);\n    }\n    let refDomNode: Node | null = null;\n    this.children.insertBefore(childBlot, refBlot || null);\n    childBlot.parent = this;\n    if (refBlot != null) {\n      refDomNode = refBlot.domNode;\n    }\n    if (\n      this.domNode.parentNode !== childBlot.domNode ||\n      this.domNode.nextSibling !== refDomNode\n    ) {\n      this.domNode.insertBefore(childBlot.domNode, refDomNode);\n    }\n    childBlot.attach();\n  }\n\n  public length(): number {\n    return this.children.reduce((memo, child) => {\n      return memo + child.length();\n    }, 0);\n  }\n\n  public moveChildren(targetParent: Parent, refNode?: Blot | null): void {\n    this.children.forEach((child) => {\n      targetParent.insertBefore(child, refNode);\n    });\n  }\n\n  public optimize(context?: { [key: string]: any }): void {\n    super.optimize(context);\n    this.enforceAllowedChildren();\n    if (this.uiNode != null && this.uiNode !== this.domNode.firstChild) {\n      this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n    }\n    if (this.children.length === 0) {\n      if (this.statics.defaultChild != null) {\n        const child = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(child);\n        // TODO double check if necessary\n        // child.optimize(context);\n      } else {\n        this.remove();\n      }\n    }\n  }\n\n  public path(index: number, inclusive = false): [Blot, number][] {\n    const [child, offset] = this.children.find(index, inclusive);\n    const position: [Blot, number][] = [[this, index]];\n    if (child instanceof ParentBlot) {\n      return position.concat(child.path(offset, inclusive));\n    } else if (child != null) {\n      position.push([child, offset]);\n    }\n    return position;\n  }\n\n  public removeChild(child: Blot): void {\n    this.children.remove(child);\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (replacement instanceof ParentBlot) {\n      this.moveChildren(replacement);\n    }\n    return super.replaceWith(replacement);\n  }\n\n  public split(index: number, force = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.clone() as ParentBlot;\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    this.children.forEachAt(index, this.length(), (child, offset, _length) => {\n      const split = child.split(offset, force);\n      if (split != null) {\n        after.appendChild(split);\n      }\n    });\n    return after;\n  }\n\n  public splitAfter(child: Blot): Parent {\n    const after = this.clone() as ParentBlot;\n    while (child.next != null) {\n      after.appendChild(child.next);\n    }\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    return after;\n  }\n\n  public unwrap(): void {\n    if (this.parent) {\n      this.moveChildren(this.parent, this.next || undefined);\n    }\n    this.remove();\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    const addedNodes: Node[] = [];\n    const removedNodes: Node[] = [];\n    mutations.forEach((mutation) => {\n      if (mutation.target === this.domNode && mutation.type === 'childList') {\n        addedNodes.push(...mutation.addedNodes);\n        removedNodes.push(...mutation.removedNodes);\n      }\n    });\n    removedNodes.forEach((node: Node) => {\n      // Check node has actually been removed\n      // One exception is Chrome does not immediately remove IFRAMEs\n      // from DOM but MutationRecord is correct in its reported removal\n      if (\n        node.parentNode != null &&\n        // @ts-expect-error Fix me later\n        node.tagName !== 'IFRAME' &&\n        document.body.compareDocumentPosition(node) &\n          Node.DOCUMENT_POSITION_CONTAINED_BY\n      ) {\n        return;\n      }\n      const blot = this.scroll.find(node);\n      if (blot == null) {\n        return;\n      }\n      if (\n        blot.domNode.parentNode == null ||\n        blot.domNode.parentNode === this.domNode\n      ) {\n        blot.detach();\n      }\n    });\n    addedNodes\n      .filter((node) => {\n        return node.parentNode === this.domNode && node !== this.uiNode;\n      })\n      .sort((a, b) => {\n        if (a === b) {\n          return 0;\n        }\n        if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n          return 1;\n        }\n        return -1;\n      })\n      .forEach((node) => {\n        let refBlot: Blot | null = null;\n        if (node.nextSibling != null) {\n          refBlot = this.scroll.find(node.nextSibling);\n        }\n        const blot = makeAttachedBlot(node, this.scroll);\n        if (blot.next !== refBlot || blot.next == null) {\n          if (blot.parent != null) {\n            blot.parent.removeChild(this);\n          }\n          this.insertBefore(blot, refBlot || undefined);\n        }\n      });\n    this.enforceAllowedChildren();\n  }\n}\n\nexport default ParentBlot;\n", "import Attributor from '../attributor/attributor.js';\nimport AttributorStore from '../attributor/store.js';\nimport Scope from '../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\nimport ParentBlot from './abstract/parent.js';\n\n// Shallow object comparison\nfunction isEqual(\n  obj1: Record<string, unknown>,\n  obj2: Record<string, unknown>,\n): boolean {\n  if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  for (const prop in obj1) {\n    if (obj1[prop] !== obj2[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass InlineBlot extends ParentBlot implements Formattable {\n  public static allowedChildren: BlotConstructor[] = [InlineBlot, LeafBlot];\n  public static blotName = 'inline';\n  public static scope = Scope.INLINE_BLOT;\n  public static tagName: string | string[] = 'SPAN';\n\n  static create(value?: unknown) {\n    return super.create(value) as HTMLElement;\n  }\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(InlineBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n    return undefined;\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any): void {\n    if (name === this.statics.blotName && !value) {\n      this.children.forEach((child) => {\n        if (!(child instanceof InlineBlot)) {\n          child = child.wrap(InlineBlot.blotName, true);\n        }\n        this.attributes.copy(child as InlineBlot);\n      });\n      this.unwrap();\n    } else {\n      const format = this.scroll.query(name, Scope.INLINE);\n      if (format == null) {\n        return;\n      }\n      if (format instanceof Attributor) {\n        this.attributes.attribute(format, value);\n      } else if (\n        value &&\n        (name !== this.statics.blotName || this.formats()[name] !== value)\n      ) {\n        this.replaceWith(name, value);\n      }\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (\n      this.formats()[name] != null ||\n      this.scroll.query(name, Scope.ATTRIBUTE)\n    ) {\n      const blot = this.isolate(index, length) as InlineBlot;\n      blot.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    const formats = this.formats();\n    if (Object.keys(formats).length === 0) {\n      return this.unwrap(); // unformatted span\n    }\n    const next = this.next;\n    if (\n      next instanceof InlineBlot &&\n      next.prev === this &&\n      isEqual(formats, next.formats())\n    ) {\n      next.moveChildren(this);\n      next.remove();\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as InlineBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      (mutation) =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper = super.wrap(name, value);\n    if (wrapper instanceof InlineBlot) {\n      this.attributes.move(wrapper);\n    }\n    return wrapper;\n  }\n}\n\nexport default InlineBlot;\n", "import Attributor from '../attributor/attributor.js';\nimport AttributorStore from '../attributor/store.js';\nimport Scope from '../scope.js';\nimport type {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Root,\n} from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\nimport ParentBlot from './abstract/parent.js';\nimport InlineBlot from './inline.js';\n\nclass BlockBlot extends ParentBlot implements Formattable {\n  public static blotName = 'block';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string | string[] = 'P';\n  public static allowedChildren: BlotConstructor[] = [\n    InlineBlot,\n    BlockBlot,\n    LeafBlot,\n  ];\n\n  static create(value?: unknown) {\n    return super.create(value) as HTMLElement;\n  }\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(BlockBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any): void {\n    const format = this.scroll.query(name, Scope.BLOCK);\n    if (format == null) {\n      return;\n    } else if (format instanceof Attributor) {\n      this.attributes.attribute(format, value);\n    } else if (name === this.statics.blotName && !value) {\n      this.replaceWith(BlockBlot.blotName);\n    } else if (\n      value &&\n      (name !== this.statics.blotName || this.formats()[name] !== value)\n    ) {\n      this.replaceWith(name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (this.scroll.query(name, Scope.BLOCK) != null) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null || this.scroll.query(value, Scope.INLINE) != null) {\n      // Insert text or inline\n      super.insertAt(index, value, def);\n    } else {\n      const after = this.split(index);\n      if (after != null) {\n        const blot = this.scroll.create(value, def);\n        after.parent.insertBefore(blot, after);\n      } else {\n        throw new Error('Attempt to insertAt after block boundaries');\n      }\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as BlockBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      (mutation) =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n}\n\nexport default BlockBlot;\n", "import Scope from '../../scope.js';\nimport BlockBlot from '../block.js';\nimport ParentBlot from './parent.js';\n\nclass ContainerBlot extends ParentBlot {\n  public static blotName = 'container';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string | string[];\n\n  public prev!: BlockBlot | ContainerBlot | null;\n  public next!: BlockBlot | ContainerBlot | null;\n\n  public checkMerge(): boolean {\n    return (\n      this.next !== null && this.next.statics.blotName === this.statics.blotName\n    );\n  }\n\n  public deleteAt(index: number, length: number): void {\n    super.deleteAt(index, length);\n    this.enforceAllowedChildren();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    super.formatAt(index, length, name, value);\n    this.enforceAllowedChildren();\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    super.insertAt(index, value, def);\n    this.enforceAllowedChildren();\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    if (this.children.length > 0 && this.next != null && this.checkMerge()) {\n      this.next.moveChildren(this);\n      this.next.remove();\n    }\n  }\n}\n\nexport default ContainerBlot;\n", "import type { Formattable, Root } from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\n\nclass EmbedBlot extends LeafBlot implements Formattable {\n  public static formats(_domNode: HTMLElement, _scroll: Root): any {\n    return undefined;\n  }\n\n  public format(name: string, value: any): void {\n    // super.formatAt wraps, which is what we want in general,\n    // but this allows subclasses to overwrite for formats\n    // that just apply to particular embeds\n    super.formatAt(0, this.length(), name, value);\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (index === 0 && length === this.length()) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    return this.statics.formats(this.domNode, this.scroll);\n  }\n}\n\nexport default EmbedBlot;\n", "import Registry, { type RegistryDefinition } from '../registry.js';\nimport Scope from '../scope.js';\nimport type { Blot, BlotConstructor, Root } from './abstract/blot.js';\nimport ContainerBlot from './abstract/container.js';\nimport ParentBlot from './abstract/parent.js';\nimport BlockBlot from './block.js';\n\nconst OBSERVER_CONFIG = {\n  attributes: true,\n  characterData: true,\n  characterDataOldValue: true,\n  childList: true,\n  subtree: true,\n};\n\nconst MAX_OPTIMIZE_ITERATIONS = 100;\n\nclass ScrollBlot extends ParentBlot implements Root {\n  public static blotName = 'scroll';\n  public static defaultChild = BlockBlot;\n  public static allowedChildren: BlotConstructor[] = [BlockBlot, ContainerBlot];\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName = 'DIV';\n\n  public observer: MutationObserver;\n\n  constructor(\n    public registry: Registry,\n    node: HTMLDivElement,\n  ) {\n    // @ts-expect-error scroll is the root with no parent\n    super(null, node);\n    this.scroll = this;\n    this.build();\n    this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n      this.update(mutations);\n    });\n    this.observer.observe(this.domNode, OBSERVER_CONFIG);\n    this.attach();\n  }\n\n  public create(input: Node | string | Scope, value?: any): Blot {\n    return this.registry.create(this, input, value);\n  }\n\n  public find(node: Node | null, bubble = false): Blot | null {\n    const blot = this.registry.find(node, bubble);\n    if (!blot) {\n      return null;\n    }\n    if (blot.scroll === this) {\n      return blot;\n    }\n    return bubble ? this.find(blot.scroll.domNode.parentNode, true) : null;\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): RegistryDefinition | null {\n    return this.registry.query(query, scope);\n  }\n\n  public register(...definitions: RegistryDefinition[]) {\n    return this.registry.register(...definitions);\n  }\n\n  public build(): void {\n    if (this.scroll == null) {\n      return;\n    }\n    super.build();\n  }\n\n  public detach(): void {\n    super.detach();\n    this.observer.disconnect();\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.update();\n    if (index === 0 && length === this.length()) {\n      this.children.forEach((child) => {\n        child.remove();\n      });\n    } else {\n      super.deleteAt(index, length);\n    }\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.update();\n    super.formatAt(index, length, name, value);\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    this.update();\n    super.insertAt(index, value, def);\n  }\n\n  public optimize(context?: { [key: string]: any }): void;\n  public optimize(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void;\n  public optimize(mutations: any = [], context: any = {}): void {\n    super.optimize(context);\n    const mutationsMap = context.mutationsMap || new WeakMap();\n    // We must modify mutations directly, cannot make copy and then modify\n    let records = Array.from(this.observer.takeRecords());\n    // Array.push currently seems to be implemented by a non-tail recursive function\n    // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n    while (records.length > 0) {\n      mutations.push(records.pop());\n    }\n    const mark = (blot: Blot | null, markParent = true): void => {\n      if (blot == null || blot === this) {\n        return;\n      }\n      if (blot.domNode.parentNode == null) {\n        return;\n      }\n      if (!mutationsMap.has(blot.domNode)) {\n        mutationsMap.set(blot.domNode, []);\n      }\n      if (markParent) {\n        mark(blot.parent);\n      }\n    };\n    const optimize = (blot: Blot): void => {\n      // Post-order traversal\n      if (!mutationsMap.has(blot.domNode)) {\n        return;\n      }\n      if (blot instanceof ParentBlot) {\n        blot.children.forEach(optimize);\n      }\n      mutationsMap.delete(blot.domNode);\n      blot.optimize(context);\n    };\n    let remaining = mutations;\n    for (let i = 0; remaining.length > 0; i += 1) {\n      if (i >= MAX_OPTIMIZE_ITERATIONS) {\n        throw new Error('[Parchment] Maximum optimize iterations reached');\n      }\n      remaining.forEach((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return;\n        }\n        if (blot.domNode === mutation.target) {\n          if (mutation.type === 'childList') {\n            mark(this.find(mutation.previousSibling, false));\n            Array.from(mutation.addedNodes).forEach((node: Node) => {\n              const child = this.find(node, false);\n              mark(child, false);\n              if (child instanceof ParentBlot) {\n                child.children.forEach((grandChild: Blot) => {\n                  mark(grandChild, false);\n                });\n              }\n            });\n          } else if (mutation.type === 'attributes') {\n            mark(blot.prev);\n          }\n        }\n        mark(blot);\n      });\n      this.children.forEach(optimize);\n      remaining = Array.from(this.observer.takeRecords());\n      records = remaining.slice();\n      while (records.length > 0) {\n        mutations.push(records.pop());\n      }\n    }\n  }\n\n  public update(\n    mutations?: MutationRecord[],\n    context: { [key: string]: any } = {},\n  ): void {\n    mutations = mutations || this.observer.takeRecords();\n    const mutationsMap = new WeakMap();\n    mutations\n      .map((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return null;\n        }\n        if (mutationsMap.has(blot.domNode)) {\n          mutationsMap.get(blot.domNode).push(mutation);\n          return null;\n        } else {\n          mutationsMap.set(blot.domNode, [mutation]);\n          return blot;\n        }\n      })\n      .forEach((blot: Blot | null) => {\n        if (blot != null && blot !== this && mutationsMap.has(blot.domNode)) {\n          blot.update(mutationsMap.get(blot.domNode) || [], context);\n        }\n      });\n    context.mutationsMap = mutationsMap;\n    if (mutationsMap.has(this.domNode)) {\n      super.update(mutationsMap.get(this.domNode), context);\n    }\n    this.optimize(mutations, context);\n  }\n}\n\nexport default ScrollBlot;\n", "import Scope from '../scope.js';\nimport type { Blot, Leaf, Root } from './abstract/blot.js';\nimport LeafBlot from './abstract/leaf.js';\n\nclass TextBlot extends LeafBlot implements Leaf {\n  public static readonly blotName = 'text';\n  public static scope = Scope.INLINE_BLOT;\n\n  public static create(value: string): Text {\n    return document.createTextNode(value);\n  }\n\n  public static value(domNode: Text): string {\n    return domNode.data;\n  }\n\n  public domNode!: Text;\n  protected text: string;\n\n  constructor(scroll: Root, node: Node) {\n    super(scroll, node);\n    this.text = this.statics.value(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.domNode.data = this.text =\n      this.text.slice(0, index) + this.text.slice(index + length);\n  }\n\n  public index(node: Node, offset: number): number {\n    if (this.domNode === node) {\n      return offset;\n    }\n    return -1;\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null) {\n      this.text = this.text.slice(0, index) + value + this.text.slice(index);\n      this.domNode.data = this.text;\n    } else {\n      super.insertAt(index, value, def);\n    }\n  }\n\n  public length(): number {\n    return this.text.length;\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    this.text = this.statics.value(this.domNode);\n    if (this.text.length === 0) {\n      this.remove();\n    } else if (this.next instanceof TextBlot && this.next.prev === this) {\n      this.insertAt(this.length(), (this.next as TextBlot).value());\n      this.next.remove();\n    }\n  }\n\n  public position(index: number, _inclusive = false): [Node, number] {\n    return [this.domNode, index];\n  }\n\n  public split(index: number, force = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.scroll.create(this.domNode.splitText(index));\n    this.parent.insertBefore(after, this.next || undefined);\n    this.text = this.statics.value(this.domNode);\n    return after;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    if (\n      mutations.some((mutation) => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.domNode\n        );\n      })\n    ) {\n      this.text = this.statics.value(this.domNode);\n    }\n  }\n\n  public value(): string {\n    return this.text;\n  }\n}\n\nexport default TextBlot;\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};", "// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();", "__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }", "// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};", "import { ClassAttributor, Scope } from 'parchment';\n\nclass IndentAttributor extends ClassAttributor {\n  add(node: HTMLElement, value: string | number) {\n    let normalizedValue = 0;\n    if (value === '+1' || value === '-1') {\n      const indent = this.value(node) || 0;\n      normalizedValue = value === '+1' ? indent + 1 : indent - 1;\n    } else if (typeof value === 'number') {\n      normalizedValue = value;\n    }\n    if (normalizedValue === 0) {\n      this.remove(node);\n      return true;\n    }\n    return super.add(node, normalizedValue.toString());\n  }\n\n  canAdd(node: HTMLElement, value: string) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value, 10));\n  }\n\n  value(node: HTMLElement) {\n    return parseInt(super.value(node), 10) || undefined; // Don't return NaN\n  }\n}\n\nconst IndentClass = new IndentAttributor('indent', 'ql-indent', {\n  scope: Scope.BLOCK,\n  // @ts-expect-error\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8],\n});\n\nexport default IndentClass;\n", "import Block from '../blots/block.js';\n\nclass Blockquote extends Block {\n  static blotName = 'blockquote';\n  static tagName = 'blockquote';\n}\n\nexport default Blockquote;\n", "import Block from '../blots/block.js';\n\nclass Header extends Block {\n  static blotName = 'header';\n  static tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n\n  static formats(domNode: Element) {\n    return this.tagName.indexOf(domNode.tagName) + 1;\n  }\n}\n\nexport default Header;\n", "import Block from '../blots/block.js';\nimport Container from '../blots/container.js';\nimport type Scroll from '../blots/scroll.js';\nimport Quill from '../core/quill.js';\n\nclass ListContainer extends Container {}\nListContainer.blotName = 'list-container';\nListContainer.tagName = 'OL';\n\nclass ListItem extends Block {\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    node.setAttribute('data-list', value);\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('data-list') || undefined;\n  }\n\n  static register() {\n    Quill.register(ListContainer);\n  }\n\n  constructor(scroll: Scroll, domNode: HTMLElement) {\n    super(scroll, domNode);\n    const ui = domNode.ownerDocument.createElement('span');\n    const listEventHandler = (e: Event) => {\n      if (!scroll.isEnabled()) return;\n      const format = this.statics.formats(domNode, scroll);\n      if (format === 'checked') {\n        this.format('list', 'unchecked');\n        e.preventDefault();\n      } else if (format === 'unchecked') {\n        this.format('list', 'checked');\n        e.preventDefault();\n      }\n    };\n    ui.addEventListener('mousedown', listEventHandler);\n    ui.addEventListener('touchstart', listEventHandler);\n    this.attachUI(ui);\n  }\n\n  format(name: string, value: string) {\n    if (name === this.statics.blotName && value) {\n      this.domNode.setAttribute('data-list', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n}\nListItem.blotName = 'list';\nListItem.tagName = 'LI';\n\nListContainer.allowedChildren = [ListItem];\nListItem.requiredContainer = ListContainer;\n\nexport { ListContainer, ListItem as default };\n", "import Inline from '../blots/inline.js';\n\nclass Bold extends Inline {\n  static blotName = 'bold';\n  static tagName = ['STRONG', 'B'];\n\n  static create() {\n    return super.create();\n  }\n\n  static formats() {\n    return true;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (this.domNode.tagName !== this.statics.tagName[0]) {\n      this.replaceWith(this.statics.blotName);\n    }\n  }\n}\n\nexport default Bold;\n", "import Inline from '../blots/inline.js';\n\nclass Link extends Inline {\n  static blotName = 'link';\n  static tagName = 'A';\n  static SANITIZED_URL = 'about:blank';\n  static PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel', 'sms'];\n\n  static create(value: string) {\n    const node = super.create(value) as HTMLElement;\n    node.setAttribute('href', this.sanitize(value));\n    node.setAttribute('rel', 'noopener noreferrer');\n    node.setAttribute('target', '_blank');\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('href');\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n  }\n\n  format(name: string, value: unknown) {\n    if (name !== this.statics.blotName || !value) {\n      super.format(name, value);\n    } else {\n      // @ts-expect-error\n      this.domNode.setAttribute('href', this.constructor.sanitize(value));\n    }\n  }\n}\n\nfunction sanitize(url: string, protocols: string[]) {\n  const anchor = document.createElement('a');\n  anchor.href = url;\n  const protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\nexport { Link as default, sanitize };\n", "import Inline from '../blots/inline.js';\n\nclass Script extends Inline {\n  static blotName = 'script';\n  static tagName = ['SUB', 'SUP'];\n\n  static create(value: 'super' | 'sub' | (string & {})) {\n    if (value === 'super') {\n      return document.createElement('sup');\n    }\n    if (value === 'sub') {\n      return document.createElement('sub');\n    }\n    return super.create(value);\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.tagName === 'SUB') return 'sub';\n    if (domNode.tagName === 'SUP') return 'super';\n    return undefined;\n  }\n}\n\nexport default Script;\n", "import Inline from '../blots/inline.js';\n\nclass Underline extends Inline {\n  static blotName = 'underline';\n  static tagName = 'U';\n}\n\nexport default Underline;\n", "import Embed from '../blots/embed.js';\n\nclass Formula extends Embed {\n  static blotName = 'formula';\n  static className = 'ql-formula';\n  static tagName = 'SPAN';\n\n  static create(value: string) {\n    // @ts-expect-error\n    if (window.katex == null) {\n      throw new Error('Formula module requires KaTeX.');\n    }\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      // @ts-expect-error\n      window.katex.render(value, node, {\n        throwOnError: false,\n        errorColor: '#f00',\n      });\n      node.setAttribute('data-value', value);\n    }\n    return node;\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('data-value');\n  }\n\n  html() {\n    const { formula } = this.value();\n    return `<span>${formula}</span>`;\n  }\n}\n\nexport default Formula;\n", "import { EmbedBlot } from 'parchment';\nimport { sanitize } from './link.js';\n\nconst ATTRIBUTES = ['alt', 'height', 'width'];\n\nclass Image extends EmbedBlot {\n  static blotName = 'image';\n  static tagName = 'IMG';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      node.setAttribute('src', this.sanitize(value));\n    }\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static match(url: string) {\n    return /\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url);\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLImageElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n}\n\nexport default Image;\n", "import { BlockEmbed } from '../blots/block.js';\nimport Link from './link.js';\n\nconst ATTRIBUTES = ['height', 'width'];\n\nclass Video extends BlockEmbed {\n  static blotName = 'video';\n  static className = 'ql-video';\n  static tagName = 'IFRAME';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    node.setAttribute('frameborder', '0');\n    node.setAttribute('allowfullscreen', 'true');\n    node.setAttribute('src', this.sanitize(value));\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static sanitize(url: string) {\n    return Link.sanitize(url);\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLVideoElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  html() {\n    const { video } = this.value();\n    return `<a href=\"${video}\">${video}</a>`;\n  }\n}\n\nexport default Video;\n", "import Delta from 'quill-delta';\nimport { ClassAttributor, Scope } from 'parchment';\nimport type { Blot, ScrollBlot } from 'parchment';\nimport Inline from '../blots/inline.js';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport { blockDelta } from '../blots/block.js';\nimport BreakBlot from '../blots/break.js';\nimport CursorBlot from '../blots/cursor.js';\nimport TextBlot, { escapeText } from '../blots/text.js';\nimport CodeBlock, { CodeBlockContainer } from '../formats/code.js';\nimport { traverse } from './clipboard.js';\n\nconst TokenAttributor = new ClassAttributor('code-token', 'hljs', {\n  scope: Scope.INLINE,\n});\nclass CodeToken extends Inline {\n  static formats(node: Element, scroll: ScrollBlot) {\n    while (node != null && node !== scroll.domNode) {\n      if (node.classList && node.classList.contains(CodeBlock.className)) {\n        // @ts-expect-error\n        return super.formats(node, scroll);\n      }\n      // @ts-expect-error\n      node = node.parentNode;\n    }\n    return undefined;\n  }\n\n  constructor(scroll: ScrollBlot, domNode: Node, value: unknown) {\n    // @ts-expect-error\n    super(scroll, domNode, value);\n    TokenAttributor.add(this.domNode, value);\n  }\n\n  format(format: string, value: unknown) {\n    if (format !== CodeToken.blotName) {\n      super.format(format, value);\n    } else if (value) {\n      TokenAttributor.add(this.domNode, value);\n    } else {\n      TokenAttributor.remove(this.domNode);\n      this.domNode.classList.remove(this.statics.className);\n    }\n  }\n\n  optimize(...args: unknown[]) {\n    // @ts-expect-error\n    super.optimize(...args);\n    if (!TokenAttributor.value(this.domNode)) {\n      this.unwrap();\n    }\n  }\n}\nCodeToken.blotName = 'code-token';\nCodeToken.className = 'ql-token';\n\nclass SyntaxCodeBlock extends CodeBlock {\n  static create(value: unknown) {\n    const domNode = super.create(value);\n    if (typeof value === 'string') {\n      domNode.setAttribute('data-language', value);\n    }\n    return domNode;\n  }\n\n  static formats(domNode: Node) {\n    // @ts-expect-error\n    return domNode.getAttribute('data-language') || 'plain';\n  }\n\n  static register() {} // Syntax module will register\n\n  format(name: string, value: unknown) {\n    if (name === this.statics.blotName && value) {\n      // @ts-expect-error\n      this.domNode.setAttribute('data-language', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  replaceWith(name: string | Blot, value?: any) {\n    this.formatAt(0, this.length(), CodeToken.blotName, false);\n    return super.replaceWith(name, value);\n  }\n}\n\nclass SyntaxCodeBlockContainer extends CodeBlockContainer {\n  forceNext?: boolean;\n  cachedText?: string | null;\n\n  attach() {\n    super.attach();\n    this.forceNext = false;\n    // @ts-expect-error\n    this.scroll.emitMount(this);\n  }\n\n  format(name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n      this.children.forEach((child) => {\n        // @ts-expect-error\n        child.format(name, value);\n      });\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n    }\n    super.formatAt(index, length, name, value);\n  }\n\n  highlight(\n    highlight: (text: string, language: string) => Delta,\n    forced = false,\n  ) {\n    if (this.children.head == null) return;\n    const nodes = Array.from(this.domNode.childNodes).filter(\n      (node) => node !== this.uiNode,\n    );\n    const text = `${nodes.map((node) => node.textContent).join('\\n')}\\n`;\n    const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n    if (forced || this.forceNext || this.cachedText !== text) {\n      if (text.trim().length > 0 || this.cachedText == null) {\n        const oldDelta = this.children.reduce((delta, child) => {\n          // @ts-expect-error\n          return delta.concat(blockDelta(child, false));\n        }, new Delta());\n        const delta = highlight(text, language);\n        oldDelta.diff(delta).reduce((index, { retain, attributes }) => {\n          // Should be all retains\n          if (!retain) return index;\n          if (attributes) {\n            Object.keys(attributes).forEach((format) => {\n              if (\n                [SyntaxCodeBlock.blotName, CodeToken.blotName].includes(format)\n              ) {\n                // @ts-expect-error\n                this.formatAt(index, retain, format, attributes[format]);\n              }\n            });\n          }\n          // @ts-expect-error\n          return index + retain;\n        }, 0);\n      }\n      this.cachedText = text;\n      this.forceNext = false;\n    }\n  }\n\n  html(index: number, length: number) {\n    const [codeBlock] = this.children.find(index);\n    const language = codeBlock\n      ? SyntaxCodeBlock.formats(codeBlock.domNode)\n      : 'plain';\n\n    return `<pre data-language=\"${language}\">\\n${escapeText(\n      this.code(index, length),\n    )}\\n</pre>`;\n  }\n\n  optimize(context: Record<string, any>) {\n    super.optimize(context);\n    if (\n      this.parent != null &&\n      this.children.head != null &&\n      this.uiNode != null\n    ) {\n      const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n      // @ts-expect-error\n      if (language !== this.uiNode.value) {\n        // @ts-expect-error\n        this.uiNode.value = language;\n      }\n    }\n  }\n}\n\nSyntaxCodeBlockContainer.allowedChildren = [SyntaxCodeBlock];\nSyntaxCodeBlock.requiredContainer = SyntaxCodeBlockContainer;\nSyntaxCodeBlock.allowedChildren = [CodeToken, CursorBlot, TextBlot, BreakBlot];\n\ninterface SyntaxOptions {\n  interval: number;\n  languages: { key: string; label: string }[];\n  hljs: any;\n}\n\nconst highlight = (lib: any, language: string, text: string) => {\n  if (typeof lib.versionString === 'string') {\n    const majorVersion = lib.versionString.split('.')[0];\n    if (parseInt(majorVersion, 10) >= 11) {\n      return lib.highlight(text, { language }).value;\n    }\n  }\n  return lib.highlight(language, text).value;\n};\n\nclass Syntax extends Module<SyntaxOptions> {\n  static DEFAULTS: SyntaxOptions & { hljs: any };\n\n  static register() {\n    Quill.register(CodeToken, true);\n    Quill.register(SyntaxCodeBlock, true);\n    Quill.register(SyntaxCodeBlockContainer, true);\n  }\n\n  languages: Record<string, true>;\n\n  constructor(quill: Quill, options: Partial<SyntaxOptions>) {\n    super(quill, options);\n    if (this.options.hljs == null) {\n      throw new Error(\n        'Syntax module requires highlight.js. Please include the library on the page before Quill.',\n      );\n    }\n    // @ts-expect-error Fix me later\n    this.languages = this.options.languages.reduce(\n      (memo: Record<string, unknown>, { key }) => {\n        memo[key] = true;\n        return memo;\n      },\n      {},\n    );\n    this.highlightBlot = this.highlightBlot.bind(this);\n    this.initListener();\n    this.initTimer();\n  }\n\n  initListener() {\n    this.quill.on(Quill.events.SCROLL_BLOT_MOUNT, (blot: Blot) => {\n      if (!(blot instanceof SyntaxCodeBlockContainer)) return;\n      const select = this.quill.root.ownerDocument.createElement('select');\n      // @ts-expect-error Fix me later\n      this.options.languages.forEach(({ key, label }) => {\n        const option = select.ownerDocument.createElement('option');\n        option.textContent = label;\n        option.setAttribute('value', key);\n        select.appendChild(option);\n      });\n      select.addEventListener('change', () => {\n        blot.format(SyntaxCodeBlock.blotName, select.value);\n        this.quill.root.focus(); // Prevent scrolling\n        this.highlight(blot, true);\n      });\n      if (blot.uiNode == null) {\n        blot.attachUI(select);\n        if (blot.children.head) {\n          select.value = SyntaxCodeBlock.formats(blot.children.head.domNode);\n        }\n      }\n    });\n  }\n\n  initTimer() {\n    let timer: ReturnType<typeof setTimeout> | null = null;\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        this.highlight();\n        timer = null;\n      }, this.options.interval);\n    });\n  }\n\n  highlight(blot: SyntaxCodeBlockContainer | null = null, force = false) {\n    if (this.quill.selection.composing) return;\n    this.quill.update(Quill.sources.USER);\n    const range = this.quill.getSelection();\n    const blots =\n      blot == null\n        ? this.quill.scroll.descendants(SyntaxCodeBlockContainer)\n        : [blot];\n    blots.forEach((container) => {\n      container.highlight(this.highlightBlot, force);\n    });\n    this.quill.update(Quill.sources.SILENT);\n    if (range != null) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    }\n  }\n\n  highlightBlot(text: string, language = 'plain') {\n    language = this.languages[language] ? language : 'plain';\n    if (language === 'plain') {\n      return escapeText(text)\n        .split('\\n')\n        .reduce((delta, line, i) => {\n          if (i !== 0) {\n            delta.insert('\\n', { [CodeBlock.blotName]: language });\n          }\n          return delta.insert(line);\n        }, new Delta());\n    }\n    const container = this.quill.root.ownerDocument.createElement('div');\n    container.classList.add(CodeBlock.className);\n    container.innerHTML = highlight(this.options.hljs, language, text);\n    return traverse(\n      this.quill.scroll,\n      container,\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          const value = TokenAttributor.value(node);\n          if (value) {\n            return delta.compose(\n              new Delta().retain(delta.length(), {\n                [CodeToken.blotName]: value,\n              }),\n            );\n          }\n          return delta;\n        },\n      ],\n      [\n        (node, delta) => {\n          // @ts-expect-error\n          return node.data.split('\\n').reduce((memo, nodeText, i) => {\n            if (i !== 0) memo.insert('\\n', { [CodeBlock.blotName]: language });\n            return memo.insert(nodeText);\n          }, delta);\n        },\n      ],\n      new WeakMap(),\n    );\n  }\n}\nSyntax.DEFAULTS = {\n  hljs: (() => {\n    return window.hljs;\n  })(),\n  interval: 1000,\n  languages: [\n    { key: 'plain', label: 'Plain' },\n    { key: 'bash', label: 'Bash' },\n    { key: 'cpp', label: 'C++' },\n    { key: 'cs', label: 'C#' },\n    { key: 'css', label: 'CSS' },\n    { key: 'diff', label: 'Diff' },\n    { key: 'xml', label: 'HTML/XML' },\n    { key: 'java', label: 'Java' },\n    { key: 'javascript', label: 'JavaScript' },\n    { key: 'markdown', label: 'Markdown' },\n    { key: 'php', label: 'PHP' },\n    { key: 'python', label: 'Python' },\n    { key: 'ruby', label: 'Ruby' },\n    { key: 'sql', label: 'SQL' },\n  ],\n};\n\nexport { SyntaxCodeBlock as CodeBlock, CodeToken, Syntax as default };\n", "import type { LinkedList } from 'parchment';\nimport Block from '../blots/block.js';\nimport Container from '../blots/container.js';\n\nclass TableCell extends Block {\n  static blotName = 'table';\n  static tagName = 'TD';\n\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    if (value) {\n      node.setAttribute('data-row', value);\n    } else {\n      node.setAttribute('data-row', tableId());\n    }\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.hasAttribute('data-row')) {\n      return domNode.getAttribute('data-row');\n    }\n    return undefined;\n  }\n\n  next: this | null;\n\n  cellOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  format(name: string, value: string) {\n    if (name === TableCell.blotName && value) {\n      this.domNode.setAttribute('data-row', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  row(): TableRow {\n    return this.parent as TableRow;\n  }\n\n  rowOffset() {\n    if (this.row()) {\n      return this.row().rowOffset();\n    }\n    return -1;\n  }\n\n  table() {\n    return this.row() && this.row().table();\n  }\n}\n\nclass TableRow extends Container {\n  static blotName = 'table-row';\n  static tagName = 'TR';\n\n  children: LinkedList<TableCell>;\n  next: this | null;\n\n  checkMerge() {\n    // @ts-expect-error\n    if (super.checkMerge() && this.next.children.head != null) {\n      // @ts-expect-error\n      const thisHead = this.children.head.formats();\n      // @ts-expect-error\n      const thisTail = this.children.tail.formats();\n      // @ts-expect-error\n      const nextHead = this.next.children.head.formats();\n      // @ts-expect-error\n      const nextTail = this.next.children.tail.formats();\n      return (\n        thisHead.table === thisTail.table &&\n        thisHead.table === nextHead.table &&\n        thisHead.table === nextTail.table\n      );\n    }\n    return false;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.children.forEach((child) => {\n      if (child.next == null) return;\n      const childFormats = child.formats();\n      const nextFormats = child.next.formats();\n      if (childFormats.table !== nextFormats.table) {\n        const next = this.splitAfter(child);\n        if (next) {\n          // @ts-expect-error TODO: parameters of optimize() should be a optional\n          next.optimize();\n        }\n        // We might be able to merge with prev now\n        if (this.prev) {\n          // @ts-expect-error TODO: parameters of optimize() should be a optional\n          this.prev.optimize();\n        }\n      }\n    });\n  }\n\n  rowOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  table() {\n    return this.parent && this.parent.parent;\n  }\n}\n\nclass TableBody extends Container {\n  static blotName = 'table-body';\n  static tagName = 'TBODY';\n\n  children: LinkedList<TableRow>;\n}\n\nclass TableContainer extends Container {\n  static blotName = 'table-container';\n  static tagName = 'TABLE';\n\n  children: LinkedList<TableBody>;\n\n  balanceCells() {\n    const rows = this.descendants(TableRow);\n    const maxColumns = rows.reduce((max, row) => {\n      return Math.max(row.children.length, max);\n    }, 0);\n    rows.forEach((row) => {\n      new Array(maxColumns - row.children.length).fill(0).forEach(() => {\n        let value;\n        if (row.children.head != null) {\n          value = TableCell.formats(row.children.head.domNode);\n        }\n        const blot = this.scroll.create(TableCell.blotName, value);\n        row.appendChild(blot);\n        // @ts-expect-error TODO: parameters of optimize() should be a optional\n        blot.optimize(); // Add break blot\n      });\n    });\n  }\n\n  cells(column: number) {\n    return this.rows().map((row) => row.children.at(column));\n  }\n\n  deleteColumn(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    body.children.forEach((row) => {\n      const cell = row.children.at(index);\n      if (cell != null) {\n        cell.remove();\n      }\n    });\n  }\n\n  insertColumn(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    body.children.forEach((row) => {\n      const ref = row.children.at(index);\n      // @ts-expect-error\n      const value = TableCell.formats(row.children.head.domNode);\n      const cell = this.scroll.create(TableCell.blotName, value);\n      row.insertBefore(cell, ref);\n    });\n  }\n\n  insertRow(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    const id = tableId();\n    const row = this.scroll.create(TableRow.blotName) as TableRow;\n    body.children.head.children.forEach(() => {\n      const cell = this.scroll.create(TableCell.blotName, id);\n      row.appendChild(cell);\n    });\n    const ref = body.children.at(index);\n    body.insertBefore(row, ref);\n  }\n\n  rows() {\n    const body = this.children.head;\n    if (body == null) return [];\n    return body.children.map((row) => row);\n  }\n}\n\nTableContainer.allowedChildren = [TableBody];\nTableBody.requiredContainer = TableContainer;\n\nTableBody.allowedChildren = [TableRow];\nTableRow.requiredContainer = TableBody;\n\nTableRow.allowedChildren = [TableCell];\nTableCell.requiredContainer = TableRow;\n\nfunction tableId() {\n  const id = Math.random().toString(36).slice(2, 6);\n  return `row-${id}`;\n}\n\nexport { TableCell, TableRow, TableBody, TableContainer, tableId };\n", "import Delta from 'quill-delta';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport {\n  TableCell,\n  TableRow,\n  TableBody,\n  TableContainer,\n  tableId,\n} from '../formats/table.js';\n\nclass Table extends Module {\n  static register() {\n    Quill.register(TableCell);\n    Quill.register(TableRow);\n    Quill.register(TableBody);\n    Quill.register(TableContainer);\n  }\n\n  constructor(...args: ConstructorParameters<typeof Module>) {\n    super(...args);\n    this.listenBalanceCells();\n  }\n\n  balanceTables() {\n    this.quill.scroll.descendants(TableContainer).forEach((table) => {\n      table.balanceCells();\n    });\n  }\n\n  deleteColumn() {\n    const [table, , cell] = this.getTable();\n    if (cell == null) return;\n    // @ts-expect-error\n    table.deleteColumn(cell.cellOffset());\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteRow() {\n    const [, row] = this.getTable();\n    if (row == null) return;\n    row.remove();\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteTable() {\n    const [table] = this.getTable();\n    if (table == null) return;\n    // @ts-expect-error\n    const offset = table.offset();\n    // @ts-expect-error\n    table.remove();\n    this.quill.update(Quill.sources.USER);\n    this.quill.setSelection(offset, Quill.sources.SILENT);\n  }\n\n  getTable(\n    range = this.quill.getSelection(),\n  ): [null, null, null, -1] | [Table, TableRow, TableCell, number] {\n    if (range == null) return [null, null, null, -1];\n    const [cell, offset] = this.quill.getLine(range.index);\n    if (cell == null || cell.statics.blotName !== TableCell.blotName) {\n      return [null, null, null, -1];\n    }\n    const row = cell.parent;\n    const table = row.parent.parent;\n    // @ts-expect-error\n    return [table, row, cell, offset];\n  }\n\n  insertColumn(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const column = cell.cellOffset();\n    table.insertColumn(column + offset);\n    this.quill.update(Quill.sources.USER);\n    let shift = row.rowOffset();\n    if (offset === 0) {\n      shift += 1;\n    }\n    this.quill.setSelection(\n      range.index + shift,\n      range.length,\n      Quill.sources.SILENT,\n    );\n  }\n\n  insertColumnLeft() {\n    this.insertColumn(0);\n  }\n\n  insertColumnRight() {\n    this.insertColumn(1);\n  }\n\n  insertRow(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const index = row.rowOffset();\n    table.insertRow(index + offset);\n    this.quill.update(Quill.sources.USER);\n    if (offset > 0) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    } else {\n      this.quill.setSelection(\n        range.index + row.children.length,\n        range.length,\n        Quill.sources.SILENT,\n      );\n    }\n  }\n\n  insertRowAbove() {\n    this.insertRow(0);\n  }\n\n  insertRowBelow() {\n    this.insertRow(1);\n  }\n\n  insertTable(rows: number, columns: number) {\n    const range = this.quill.getSelection();\n    if (range == null) return;\n    const delta = new Array(rows).fill(0).reduce((memo) => {\n      const text = new Array(columns).fill('\\n').join('');\n      return memo.insert(text, { table: tableId() });\n    }, new Delta().retain(range.index));\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index, Quill.sources.SILENT);\n    this.balanceTables();\n  }\n\n  listenBalanceCells() {\n    this.quill.on(\n      Quill.events.SCROLL_OPTIMIZE,\n      (mutations: MutationRecord[]) => {\n        mutations.some((mutation) => {\n          if (\n            ['TD', 'TR', 'TBODY', 'TABLE'].includes(\n              (mutation.target as HTMLElement).tagName,\n            )\n          ) {\n            this.quill.once(Quill.events.TEXT_CHANGE, (delta, old, source) => {\n              if (source !== Quill.sources.USER) return;\n              this.balanceTables();\n            });\n            return true;\n          }\n          return false;\n        });\n      },\n    );\n  }\n}\n\nexport default Table;\n", "import Delta from 'quill-delta';\nimport { EmbedBlot, Scope } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:toolbar');\n\ntype Handler = (this: Toolbar, value: any) => void;\n\nexport type ToolbarConfig = Array<\n  string[] | Array<string | Record<string, unknown>>\n>;\nexport interface ToolbarProps {\n  container?: HTMLElement | ToolbarConfig | null;\n  handlers?: Record<string, Handler>;\n  option?: number;\n  module?: boolean;\n  theme?: boolean;\n}\n\nclass Toolbar extends Module<ToolbarProps> {\n  static DEFAULTS: ToolbarProps;\n\n  container?: HTMLElement | null;\n  controls: [string, HTMLElement][];\n  handlers: Record<string, Handler>;\n\n  constructor(quill: Quill, options: Partial<ToolbarProps>) {\n    super(quill, options);\n    if (Array.isArray(this.options.container)) {\n      const container = document.createElement('div');\n      container.setAttribute('role', 'toolbar');\n      addControls(container, this.options.container);\n      quill.container?.parentNode?.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      this.container = document.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      debug.error('Container required for toolbar', this.options);\n      return;\n    }\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    if (this.options.handlers) {\n      Object.keys(this.options.handlers).forEach((format) => {\n        const handler = this.options.handlers?.[format];\n        if (handler) {\n          this.addHandler(format, handler);\n        }\n      });\n    }\n    Array.from(this.container.querySelectorAll('button, select')).forEach(\n      (input) => {\n        // @ts-expect-error\n        this.attach(input);\n      },\n    );\n    this.quill.on(Quill.events.EDITOR_CHANGE, () => {\n      const [range] = this.quill.selection.getRange(); // quill.getSelection triggers update\n      this.update(range);\n    });\n  }\n\n  addHandler(format: string, handler: Handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input: HTMLElement) {\n    let format = Array.from(input.classList).find((className) => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n    if (\n      this.handlers[format] == null &&\n      this.quill.scroll.query(format) == null\n    ) {\n      debug.warn('ignoring attaching to nonexistent format', format, input);\n      return;\n    }\n    const eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, (e) => {\n      let value;\n      if (input.tagName === 'SELECT') {\n        // @ts-expect-error\n        if (input.selectedIndex < 0) return;\n        // @ts-expect-error\n        const selected = input.options[input.selectedIndex];\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          // @ts-expect-error\n          value = input.value || !input.hasAttribute('value');\n        }\n        e.preventDefault();\n      }\n      this.quill.focus();\n      const [range] = this.quill.selection.getRange();\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (\n        // @ts-expect-error\n        this.quill.scroll.query(format).prototype instanceof EmbedBlot\n      ) {\n        value = prompt(`Enter ${format}`); // eslint-disable-line no-alert\n        if (!value) return;\n        this.quill.updateContents(\n          new Delta()\n            // @ts-expect-error Fix me later\n            .retain(range.index)\n            // @ts-expect-error Fix me later\n            .delete(range.length)\n            .insert({ [format]: value }),\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n      this.update(range);\n    });\n    this.controls.push([format, input]);\n  }\n\n  update(range: Range | null) {\n    const formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach((pair) => {\n      const [format, input] = pair;\n      if (input.tagName === 'SELECT') {\n        let option: HTMLOptionElement | null = null;\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n          if (typeof value === 'string') {\n            value = value.replace(/\"/g, '\\\\\"');\n          }\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n        if (option == null) {\n          // @ts-expect-error TODO fix me later\n          input.value = ''; // TODO make configurable?\n          // @ts-expect-error TODO fix me later\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else if (range == null) {\n        input.classList.remove('ql-active');\n        input.setAttribute('aria-pressed', 'false');\n      } else if (input.hasAttribute('value')) {\n        // both being null should match (default values)\n        // '1' should match with 1 (headers)\n        const value = formats[format] as boolean | number | string | object;\n        const isActive =\n          value === input.getAttribute('value') ||\n          (value != null && value.toString() === input.getAttribute('value')) ||\n          (value == null && !input.getAttribute('value'));\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      } else {\n        const isActive = formats[format] != null;\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      }\n    });\n  }\n}\nToolbar.DEFAULTS = {};\n\nfunction addButton(container: HTMLElement, format: string, value?: string) {\n  const input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add(`ql-${format}`);\n  input.setAttribute('aria-pressed', 'false');\n  if (value != null) {\n    input.value = value;\n    input.setAttribute('aria-label', `${format}: ${value}`);\n  } else {\n    input.setAttribute('aria-label', format);\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(\n  container: HTMLElement,\n  groups:\n    | (string | Record<string, unknown>)[][]\n    | (string | Record<string, unknown>)[],\n) {\n  if (!Array.isArray(groups[0])) {\n    // @ts-expect-error\n    groups = [groups];\n  }\n  groups.forEach((controls: any) => {\n    const group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach((control: any) => {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        const format = Object.keys(control)[0];\n        const value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(\n  container: HTMLElement,\n  format: string,\n  values: Array<string | boolean>,\n) {\n  const input = document.createElement('select');\n  input.classList.add(`ql-${format}`);\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', String(value));\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean() {\n      const range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length === 0) {\n        const formats = this.quill.getFormat();\n        Object.keys(formats).forEach((name) => {\n          // Clean functionality in existing apps only clean inline formats\n          if (this.quill.scroll.query(name, Scope.INLINE) != null) {\n            this.quill.format(name, false, Quill.sources.USER);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range.index, range.length, Quill.sources.USER);\n      }\n    },\n    direction(value) {\n      const { align } = this.quill.getFormat();\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      // @ts-expect-error\n      const indent = parseInt(formats.indent || 0, 10);\n      if (value === '+1' || value === '-1') {\n        let modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    },\n  },\n};\n\nexport { Toolbar as default, addControls };\n", "import alignLeftIcon from '../assets/icons/align-left.svg';\nimport alignCenterIcon from '../assets/icons/align-center.svg';\nimport alignRightIcon from '../assets/icons/align-right.svg';\nimport alignJustifyIcon from '../assets/icons/align-justify.svg';\nimport backgroundIcon from '../assets/icons/background.svg';\nimport blockquoteIcon from '../assets/icons/blockquote.svg';\nimport boldIcon from '../assets/icons/bold.svg';\nimport cleanIcon from '../assets/icons/clean.svg';\nimport codeIcon from '../assets/icons/code.svg';\nimport colorIcon from '../assets/icons/color.svg';\nimport directionLeftToRightIcon from '../assets/icons/direction-ltr.svg';\nimport directionRightToLeftIcon from '../assets/icons/direction-rtl.svg';\nimport formulaIcon from '../assets/icons/formula.svg';\nimport headerIcon from '../assets/icons/header.svg';\nimport header2Icon from '../assets/icons/header-2.svg';\nimport header3Icon from '../assets/icons/header-3.svg';\nimport header4Icon from '../assets/icons/header-4.svg';\nimport header5Icon from '../assets/icons/header-5.svg';\nimport header6Icon from '../assets/icons/header-6.svg';\nimport italicIcon from '../assets/icons/italic.svg';\nimport imageIcon from '../assets/icons/image.svg';\nimport indentIcon from '../assets/icons/indent.svg';\nimport outdentIcon from '../assets/icons/outdent.svg';\nimport linkIcon from '../assets/icons/link.svg';\nimport listBulletIcon from '../assets/icons/list-bullet.svg';\nimport listCheckIcon from '../assets/icons/list-check.svg';\nimport listOrderedIcon from '../assets/icons/list-ordered.svg';\nimport subscriptIcon from '../assets/icons/subscript.svg';\nimport superscriptIcon from '../assets/icons/superscript.svg';\nimport strikeIcon from '../assets/icons/strike.svg';\nimport tableIcon from '../assets/icons/table.svg';\nimport underlineIcon from '../assets/icons/underline.svg';\nimport videoIcon from '../assets/icons/video.svg';\n\nexport default {\n  align: {\n    '': alignLeftIcon,\n    center: alignCenterIcon,\n    right: alignRightIcon,\n    justify: alignJustifyIcon,\n  },\n  background: backgroundIcon,\n  blockquote: blockquoteIcon,\n  bold: boldIcon,\n  clean: cleanIcon,\n  code: codeIcon,\n  'code-block': codeIcon,\n  color: colorIcon,\n  direction: {\n    '': directionLeftToRightIcon,\n    rtl: directionRightToLeftIcon,\n  },\n  formula: formulaIcon,\n  header: {\n    '1': headerIcon,\n    '2': header2Icon,\n    '3': header3Icon,\n    '4': header4Icon,\n    '5': header5Icon,\n    '6': header6Icon,\n  },\n  italic: italicIcon,\n  image: imageIcon,\n  indent: {\n    '+1': indentIcon,\n    '-1': outdentIcon,\n  },\n  link: linkIcon,\n  list: {\n    bullet: listBulletIcon,\n    check: listCheckIcon,\n    ordered: listOrderedIcon,\n  },\n  script: {\n    sub: subscriptIcon,\n    super: superscriptIcon,\n  },\n  strike: strikeIcon,\n  table: tableIcon,\n  underline: underlineIcon,\n  video: videoIcon,\n};\n", "import DropdownIcon from '../assets/icons/dropdown.svg';\n\nlet optionsCounter = 0;\n\nfunction toggleAriaAttribute(element: HTMLElement, attribute: string) {\n  element.setAttribute(\n    attribute,\n    `${!(element.getAttribute(attribute) === 'true')}`,\n  );\n}\n\nclass Picker {\n  select: HTMLSelectElement;\n  container: HTMLElement;\n  label: HTMLElement;\n\n  constructor(select: HTMLSelectElement) {\n    this.select = select;\n    this.container = document.createElement('span');\n    this.buildPicker();\n    this.select.style.display = 'none';\n    // @ts-expect-error Fix me later\n    this.select.parentNode.insertBefore(this.container, this.select);\n\n    this.label.addEventListener('mousedown', () => {\n      this.togglePicker();\n    });\n    this.label.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.togglePicker();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n    this.select.addEventListener('change', this.update.bind(this));\n  }\n\n  togglePicker() {\n    this.container.classList.toggle('ql-expanded');\n    // Toggle aria-expanded and aria-hidden to make the picker accessible\n    toggleAriaAttribute(this.label, 'aria-expanded');\n    // @ts-expect-error\n    toggleAriaAttribute(this.options, 'aria-hidden');\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = document.createElement('span');\n    // @ts-expect-error\n    item.tabIndex = '0';\n    item.setAttribute('role', 'button');\n    item.classList.add('ql-picker-item');\n    const value = option.getAttribute('value');\n    if (value) {\n      item.setAttribute('data-value', value);\n    }\n    if (option.textContent) {\n      item.setAttribute('data-label', option.textContent);\n    }\n    item.addEventListener('click', () => {\n      this.selectItem(item, true);\n    });\n    item.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.selectItem(item, true);\n          event.preventDefault();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n\n    return item;\n  }\n\n  buildLabel() {\n    const label = document.createElement('span');\n    label.classList.add('ql-picker-label');\n    label.innerHTML = DropdownIcon;\n    // @ts-expect-error\n    label.tabIndex = '0';\n    label.setAttribute('role', 'button');\n    label.setAttribute('aria-expanded', 'false');\n    this.container.appendChild(label);\n    return label;\n  }\n\n  buildOptions() {\n    const options = document.createElement('span');\n    options.classList.add('ql-picker-options');\n\n    // Don't want screen readers to read this until options are visible\n    options.setAttribute('aria-hidden', 'true');\n    // @ts-expect-error\n    options.tabIndex = '-1';\n\n    // Need a unique id for aria-controls\n    options.id = `ql-picker-options-${optionsCounter}`;\n    optionsCounter += 1;\n    this.label.setAttribute('aria-controls', options.id);\n\n    // @ts-expect-error\n    this.options = options;\n\n    Array.from(this.select.options).forEach((option) => {\n      const item = this.buildItem(option);\n      options.appendChild(item);\n      if (option.selected === true) {\n        this.selectItem(item);\n      }\n    });\n    this.container.appendChild(options);\n  }\n\n  buildPicker() {\n    Array.from(this.select.attributes).forEach((item) => {\n      this.container.setAttribute(item.name, item.value);\n    });\n    this.container.classList.add('ql-picker');\n    this.label = this.buildLabel();\n    this.buildOptions();\n  }\n\n  escape() {\n    // Close menu and return focus to trigger label\n    this.close();\n    // Need setTimeout for accessibility to ensure that the browser executes\n    // focus on the next process thread and after any DOM content changes\n    setTimeout(() => this.label.focus(), 1);\n  }\n\n  close() {\n    this.container.classList.remove('ql-expanded');\n    this.label.setAttribute('aria-expanded', 'false');\n    // @ts-expect-error\n    this.options.setAttribute('aria-hidden', 'true');\n  }\n\n  selectItem(item: HTMLElement | null, trigger = false) {\n    const selected = this.container.querySelector('.ql-selected');\n    if (item === selected) return;\n    if (selected != null) {\n      selected.classList.remove('ql-selected');\n    }\n    if (item == null) return;\n    item.classList.add('ql-selected');\n    // @ts-expect-error Fix me later\n    this.select.selectedIndex = Array.from(item.parentNode.children).indexOf(\n      item,\n    );\n    if (item.hasAttribute('data-value')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-value', item.getAttribute('data-value'));\n    } else {\n      this.label.removeAttribute('data-value');\n    }\n    if (item.hasAttribute('data-label')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-label', item.getAttribute('data-label'));\n    } else {\n      this.label.removeAttribute('data-label');\n    }\n    if (trigger) {\n      this.select.dispatchEvent(new Event('change'));\n      this.close();\n    }\n  }\n\n  update() {\n    let option;\n    if (this.select.selectedIndex > -1) {\n      const item =\n        // @ts-expect-error Fix me later\n        this.container.querySelector('.ql-picker-options').children[\n          this.select.selectedIndex\n        ];\n      option = this.select.options[this.select.selectedIndex];\n      // @ts-expect-error\n      this.selectItem(item);\n    } else {\n      this.selectItem(null);\n    }\n    const isActive =\n      option != null &&\n      option !== this.select.querySelector('option[selected]');\n    this.label.classList.toggle('ql-active', isActive);\n  }\n}\n\nexport default Picker;\n", "import Picker from './picker.js';\n\nclass ColorPicker extends Picker {\n  constructor(select: HTMLSelectElement, label: string) {\n    super(select);\n    this.label.innerHTML = label;\n    this.container.classList.add('ql-color-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item'))\n      .slice(0, 7)\n      .forEach((item) => {\n        item.classList.add('ql-primary');\n      });\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = super.buildItem(option);\n    item.style.backgroundColor = option.getAttribute('value') || '';\n    return item;\n  }\n\n  selectItem(item: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(item, trigger);\n    const colorLabel = this.label.querySelector<HTMLElement>('.ql-color-label');\n    const value = item ? item.getAttribute('data-value') || '' : '';\n    if (colorLabel) {\n      if (colorLabel.tagName === 'line') {\n        colorLabel.style.stroke = value;\n      } else {\n        colorLabel.style.fill = value;\n      }\n    }\n  }\n}\n\nexport default ColorPicker;\n", "import Picker from './picker.js';\n\nclass IconPicker extends Picker {\n  defaultItem: HTMLElement | null;\n\n  constructor(select: HTMLSelectElement, icons: Record<string, string>) {\n    super(select);\n    this.container.classList.add('ql-icon-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item')).forEach(\n      (item) => {\n        item.innerHTML = icons[item.getAttribute('data-value') || ''];\n      },\n    );\n    this.defaultItem = this.container.querySelector('.ql-selected');\n    this.selectItem(this.defaultItem);\n  }\n\n  selectItem(target: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(target, trigger);\n    const item = target || this.defaultItem;\n    if (item != null) {\n      if (this.label.innerHTML === item.innerHTML) return;\n      this.label.innerHTML = item.innerHTML;\n    }\n  }\n}\n\nexport default IconPicker;\n", "import type Quill from '../core.js';\nimport type { Bounds } from '../core/selection.js';\n\nconst isScrollable = (el: Element) => {\n  const { overflowY } = getComputedStyle(el, null);\n  return overflowY !== 'visible' && overflowY !== 'clip';\n};\n\nclass Tooltip {\n  quill: Quill;\n  boundsContainer: HTMLElement;\n  root: HTMLDivElement;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    this.quill = quill;\n    this.boundsContainer = boundsContainer || document.body;\n    this.root = quill.addContainer('ql-tooltip');\n    // @ts-expect-error\n    this.root.innerHTML = this.constructor.TEMPLATE;\n    if (isScrollable(this.quill.root)) {\n      this.quill.root.addEventListener('scroll', () => {\n        this.root.style.marginTop = `${-1 * this.quill.root.scrollTop}px`;\n      });\n    }\n    this.hide();\n  }\n\n  hide() {\n    this.root.classList.add('ql-hidden');\n  }\n\n  position(reference: Bounds) {\n    const left =\n      reference.left + reference.width / 2 - this.root.offsetWidth / 2;\n    // root.scrollTop should be 0 if scrollContainer !== root\n    const top = reference.bottom + this.quill.root.scrollTop;\n    this.root.style.left = `${left}px`;\n    this.root.style.top = `${top}px`;\n    this.root.classList.remove('ql-flip');\n    const containerBounds = this.boundsContainer.getBoundingClientRect();\n    const rootBounds = this.root.getBoundingClientRect();\n    let shift = 0;\n    if (rootBounds.right > containerBounds.right) {\n      shift = containerBounds.right - rootBounds.right;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.left < containerBounds.left) {\n      shift = containerBounds.left - rootBounds.left;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.bottom > containerBounds.bottom) {\n      const height = rootBounds.bottom - rootBounds.top;\n      const verticalShift = reference.bottom - reference.top + height;\n      this.root.style.top = `${top - verticalShift}px`;\n      this.root.classList.add('ql-flip');\n    }\n    return shift;\n  }\n\n  show() {\n    this.root.classList.remove('ql-editing');\n    this.root.classList.remove('ql-hidden');\n  }\n}\n\nexport default Tooltip;\n", "import { merge } from 'lodash-es';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Theme from '../core/theme.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport ColorPicker from '../ui/color-picker.js';\nimport IconPicker from '../ui/icon-picker.js';\nimport Picker from '../ui/picker.js';\nimport Tooltip from '../ui/tooltip.js';\nimport type { Range } from '../core/selection.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport type Selection from '../core/selection.js';\n\nconst ALIGNS = [false, 'center', 'right', 'justify'];\n\nconst COLORS = [\n  '#000000',\n  '#e60000',\n  '#ff9900',\n  '#ffff00',\n  '#008a00',\n  '#0066cc',\n  '#9933ff',\n  '#ffffff',\n  '#facccc',\n  '#ffebcc',\n  '#ffffcc',\n  '#cce8cc',\n  '#cce0f5',\n  '#ebd6ff',\n  '#bbbbbb',\n  '#f06666',\n  '#ffc266',\n  '#ffff66',\n  '#66b966',\n  '#66a3e0',\n  '#c285ff',\n  '#888888',\n  '#a10000',\n  '#b26b00',\n  '#b2b200',\n  '#006100',\n  '#0047b2',\n  '#6b24b2',\n  '#444444',\n  '#5c0000',\n  '#663d00',\n  '#666600',\n  '#003700',\n  '#002966',\n  '#3d1466',\n];\n\nconst FONTS = [false, 'serif', 'monospace'];\n\nconst HEADERS = ['1', '2', '3', false];\n\nconst SIZES = ['small', false, 'large', 'huge'];\n\nclass BaseTheme extends Theme {\n  pickers: Picker[];\n  tooltip?: Tooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    super(quill, options);\n    const listener = (e: MouseEvent) => {\n      if (!document.body.contains(quill.root)) {\n        document.body.removeEventListener('click', listener);\n        return;\n      }\n      if (\n        this.tooltip != null &&\n        // @ts-expect-error\n        !this.tooltip.root.contains(e.target) &&\n        // @ts-expect-error\n        document.activeElement !== this.tooltip.textbox &&\n        !this.quill.hasFocus()\n      ) {\n        this.tooltip.hide();\n      }\n      if (this.pickers != null) {\n        this.pickers.forEach((picker) => {\n          // @ts-expect-error\n          if (!picker.container.contains(e.target)) {\n            picker.close();\n          }\n        });\n      }\n    };\n    quill.emitter.listenDOM('click', document.body, listener);\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: 'selection'): Selection;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    const module = super.addModule(name);\n    if (name === 'toolbar') {\n      // @ts-expect-error\n      this.extendToolbar(module);\n    }\n    return module;\n  }\n\n  buildButtons(\n    buttons: NodeListOf<HTMLElement>,\n    icons: Record<string, Record<string, string> | string>,\n  ) {\n    Array.from(buttons).forEach((button) => {\n      const className = button.getAttribute('class') || '';\n      className.split(/\\s+/).forEach((name) => {\n        if (!name.startsWith('ql-')) return;\n        name = name.slice('ql-'.length);\n        if (icons[name] == null) return;\n        if (name === 'direction') {\n          // @ts-expect-error\n          button.innerHTML = icons[name][''] + icons[name].rtl;\n        } else if (typeof icons[name] === 'string') {\n          // @ts-expect-error\n          button.innerHTML = icons[name];\n        } else {\n          // @ts-expect-error\n          const value = button.value || '';\n          // @ts-expect-error\n          if (value != null && icons[name][value]) {\n            // @ts-expect-error\n            button.innerHTML = icons[name][value];\n          }\n        }\n      });\n    });\n  }\n\n  buildPickers(\n    selects: NodeListOf<HTMLSelectElement>,\n    icons: Record<string, string | Record<string, string>>,\n  ) {\n    this.pickers = Array.from(selects).map((select) => {\n      if (select.classList.contains('ql-align')) {\n        if (select.querySelector('option') == null) {\n          fillSelect(select, ALIGNS);\n        }\n        if (typeof icons.align === 'object') {\n          return new IconPicker(select, icons.align);\n        }\n      }\n      if (\n        select.classList.contains('ql-background') ||\n        select.classList.contains('ql-color')\n      ) {\n        const format = select.classList.contains('ql-background')\n          ? 'background'\n          : 'color';\n        if (select.querySelector('option') == null) {\n          fillSelect(\n            select,\n            COLORS,\n            format === 'background' ? '#ffffff' : '#000000',\n          );\n        }\n        return new ColorPicker(select, icons[format] as string);\n      }\n      if (select.querySelector('option') == null) {\n        if (select.classList.contains('ql-font')) {\n          fillSelect(select, FONTS);\n        } else if (select.classList.contains('ql-header')) {\n          fillSelect(select, HEADERS);\n        } else if (select.classList.contains('ql-size')) {\n          fillSelect(select, SIZES);\n        }\n      }\n      return new Picker(select);\n    });\n    const update = () => {\n      this.pickers.forEach((picker) => {\n        picker.update();\n      });\n    };\n    this.quill.on(Emitter.events.EDITOR_CHANGE, update);\n  }\n}\nBaseTheme.DEFAULTS = merge({}, Theme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        formula() {\n          this.quill.theme.tooltip.edit('formula');\n        },\n        image() {\n          let fileInput = this.container.querySelector(\n            'input.ql-image[type=file]',\n          );\n          if (fileInput == null) {\n            fileInput = document.createElement('input');\n            fileInput.setAttribute('type', 'file');\n            fileInput.setAttribute(\n              'accept',\n              this.quill.uploader.options.mimetypes.join(', '),\n            );\n            fileInput.classList.add('ql-image');\n            fileInput.addEventListener('change', () => {\n              const range = this.quill.getSelection(true);\n              this.quill.uploader.upload(range, fileInput.files);\n              fileInput.value = '';\n            });\n            this.container.appendChild(fileInput);\n          }\n          fileInput.click();\n        },\n        video() {\n          this.quill.theme.tooltip.edit('video');\n        },\n      },\n    },\n  },\n});\n\nclass BaseTooltip extends Tooltip {\n  textbox: HTMLInputElement | null;\n  linkRange?: Range;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    super(quill, boundsContainer);\n    this.textbox = this.root.querySelector('input[type=\"text\"]');\n    this.listen();\n  }\n\n  listen() {\n    // @ts-expect-error Fix me later\n    this.textbox.addEventListener('keydown', (event) => {\n      if (event.key === 'Enter') {\n        this.save();\n        event.preventDefault();\n      } else if (event.key === 'Escape') {\n        this.cancel();\n        event.preventDefault();\n      }\n    });\n  }\n\n  cancel() {\n    this.hide();\n    this.restoreFocus();\n  }\n\n  edit(mode = 'link', preview: string | null = null) {\n    this.root.classList.remove('ql-hidden');\n    this.root.classList.add('ql-editing');\n    if (this.textbox == null) return;\n\n    if (preview != null) {\n      this.textbox.value = preview;\n    } else if (mode !== this.root.getAttribute('data-mode')) {\n      this.textbox.value = '';\n    }\n    const bounds = this.quill.getBounds(this.quill.selection.savedRange);\n    if (bounds != null) {\n      this.position(bounds);\n    }\n    this.textbox.select();\n    this.textbox.setAttribute(\n      'placeholder',\n      this.textbox.getAttribute(`data-${mode}`) || '',\n    );\n    this.root.setAttribute('data-mode', mode);\n  }\n\n  restoreFocus() {\n    this.quill.focus({ preventScroll: true });\n  }\n\n  save() {\n    // @ts-expect-error Fix me later\n    let { value } = this.textbox;\n    switch (this.root.getAttribute('data-mode')) {\n      case 'link': {\n        const { scrollTop } = this.quill.root;\n        if (this.linkRange) {\n          this.quill.formatText(\n            this.linkRange,\n            'link',\n            value,\n            Emitter.sources.USER,\n          );\n          delete this.linkRange;\n        } else {\n          this.restoreFocus();\n          this.quill.format('link', value, Emitter.sources.USER);\n        }\n        this.quill.root.scrollTop = scrollTop;\n        break;\n      }\n      case 'video': {\n        value = extractVideoUrl(value);\n      } // eslint-disable-next-line no-fallthrough\n      case 'formula': {\n        if (!value) break;\n        const range = this.quill.getSelection(true);\n        if (range != null) {\n          const index = range.index + range.length;\n          this.quill.insertEmbed(\n            index,\n            // @ts-expect-error Fix me later\n            this.root.getAttribute('data-mode'),\n            value,\n            Emitter.sources.USER,\n          );\n          if (this.root.getAttribute('data-mode') === 'formula') {\n            this.quill.insertText(index + 1, ' ', Emitter.sources.USER);\n          }\n          this.quill.setSelection(index + 2, Emitter.sources.USER);\n        }\n        break;\n      }\n      default:\n    }\n    // @ts-expect-error Fix me later\n    this.textbox.value = '';\n    this.hide();\n  }\n}\n\nfunction extractVideoUrl(url: string) {\n  let match =\n    url.match(\n      /^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtube\\.com\\/watch.*v=([a-zA-Z0-9_-]+)/,\n    ) ||\n    url.match(/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/);\n  if (match) {\n    return `${match[1] || 'https'}://www.youtube.com/embed/${\n      match[2]\n    }?showinfo=0`;\n  }\n  // eslint-disable-next-line no-cond-assign\n  if ((match = url.match(/^(?:(https?):\\/\\/)?(?:www\\.)?vimeo\\.com\\/(\\d+)/))) {\n    return `${match[1] || 'https'}://player.vimeo.com/video/${match[2]}/`;\n  }\n  return url;\n}\n\nfunction fillSelect(\n  select: HTMLSelectElement,\n  values: Array<string | boolean>,\n  defaultValue: unknown = false,\n) {\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value === defaultValue) {\n      option.setAttribute('selected', 'selected');\n    } else {\n      option.setAttribute('value', String(value));\n    }\n    select.appendChild(option);\n  });\n}\n\nexport { BaseTooltip, BaseTheme as default };\n", "import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport { Range } from '../core/selection.js';\nimport type { Bounds } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  ['bold', 'italic', 'link'],\n  [{ header: 1 }, { header: 2 }, 'blockquote'],\n];\n\nclass BubbleTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<span class=\"ql-tooltip-arrow\"></span>',\n    '<div class=\"ql-tooltip-editor\">',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-close\"></a>',\n    '</div>',\n  ].join('');\n\n  constructor(quill: Quill, bounds?: HTMLElement) {\n    super(quill, bounds);\n    this.quill.on(\n      Emitter.events.EDITOR_CHANGE,\n      (type, range, oldRange, source) => {\n        if (type !== Emitter.events.SELECTION_CHANGE) return;\n        if (\n          range != null &&\n          range.length > 0 &&\n          source === Emitter.sources.USER\n        ) {\n          this.show();\n          // Lock our width so we will expand beyond our offsetParent boundaries\n          this.root.style.left = '0px';\n          this.root.style.width = '';\n          this.root.style.width = `${this.root.offsetWidth}px`;\n          const lines = this.quill.getLines(range.index, range.length);\n          if (lines.length === 1) {\n            const bounds = this.quill.getBounds(range);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n          } else {\n            const lastLine = lines[lines.length - 1];\n            const index = this.quill.getIndex(lastLine);\n            const length = Math.min(\n              lastLine.length() - 1,\n              range.index + range.length - index,\n            );\n            const indexBounds = this.quill.getBounds(new Range(index, length));\n            if (indexBounds != null) {\n              this.position(indexBounds);\n            }\n          }\n        } else if (\n          document.activeElement !== this.textbox &&\n          this.quill.hasFocus()\n        ) {\n          this.hide();\n        }\n      },\n    );\n  }\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root.querySelector('.ql-close').addEventListener('click', () => {\n      this.root.classList.remove('ql-editing');\n    });\n    this.quill.on(Emitter.events.SCROLL_OPTIMIZE, () => {\n      // Let selection be restored by toolbar handlers before repositioning\n      setTimeout(() => {\n        if (this.root.classList.contains('ql-hidden')) return;\n        const range = this.quill.getSelection();\n        if (range != null) {\n          const bounds = this.quill.getBounds(range);\n          if (bounds != null) {\n            this.position(bounds);\n          }\n        }\n      }, 1);\n    });\n  }\n\n  cancel() {\n    this.show();\n  }\n\n  position(reference: Bounds) {\n    const shift = super.position(reference);\n    const arrow = this.root.querySelector('.ql-tooltip-arrow');\n    // @ts-expect-error\n    arrow.style.marginLeft = '';\n    if (shift !== 0) {\n      // @ts-expect-error\n      arrow.style.marginLeft = `${-1 * shift - arrow.offsetWidth / 2}px`;\n    }\n    return shift;\n  }\n}\n\nclass BubbleTheme extends BaseTheme {\n  tooltip: BubbleTooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-bubble');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    // @ts-expect-error\n    this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);\n    if (toolbar.container != null) {\n      this.tooltip.root.appendChild<HTMLElement>(toolbar.container);\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n    }\n  }\n}\nBubbleTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (!value) {\n            this.quill.format('link', false, Quill.sources.USER);\n          } else {\n            // @ts-expect-error\n            this.quill.theme.tooltip.edit();\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport { BubbleTooltip, BubbleTheme as default };\n", "import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport LinkBlot from '../formats/link.js';\nimport { Range } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { Context } from '../modules/keyboard.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\nimport type { ThemeOptions } from '../core/theme.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  [{ header: ['1', '2', '3', false] }],\n  ['bold', 'italic', 'underline', 'link'],\n  [{ list: 'ordered' }, { list: 'bullet' }],\n  ['clean'],\n];\n\nclass SnowTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<a class=\"ql-preview\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"about:blank\"></a>',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-action\"></a>',\n    '<a class=\"ql-remove\"></a>',\n  ].join('');\n\n  preview = this.root.querySelector('a.ql-preview');\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-action')\n      .addEventListener('click', (event) => {\n        if (this.root.classList.contains('ql-editing')) {\n          this.save();\n        } else {\n          // @ts-expect-error Fix me later\n          this.edit('link', this.preview.textContent);\n        }\n        event.preventDefault();\n      });\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-remove')\n      .addEventListener('click', (event) => {\n        if (this.linkRange != null) {\n          const range = this.linkRange;\n          this.restoreFocus();\n          this.quill.formatText(range, 'link', false, Emitter.sources.USER);\n          delete this.linkRange;\n        }\n        event.preventDefault();\n        this.hide();\n      });\n    this.quill.on(\n      Emitter.events.SELECTION_CHANGE,\n      (range, oldRange, source) => {\n        if (range == null) return;\n        if (range.length === 0 && source === Emitter.sources.USER) {\n          const [link, offset] = this.quill.scroll.descendant(\n            LinkBlot,\n            range.index,\n          );\n          if (link != null) {\n            this.linkRange = new Range(range.index - offset, link.length());\n            const preview = LinkBlot.formats(link.domNode);\n            // @ts-expect-error Fix me later\n            this.preview.textContent = preview;\n            // @ts-expect-error Fix me later\n            this.preview.setAttribute('href', preview);\n            this.show();\n            const bounds = this.quill.getBounds(this.linkRange);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n            return;\n          }\n        } else {\n          delete this.linkRange;\n        }\n        this.hide();\n      },\n    );\n  }\n\n  show() {\n    super.show();\n    this.root.removeAttribute('data-mode');\n  }\n}\n\nclass SnowTheme extends BaseTheme {\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-snow');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    if (toolbar.container != null) {\n      toolbar.container.classList.add('ql-snow');\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n      // @ts-expect-error\n      this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\n      if (toolbar.container.querySelector('.ql-link')) {\n        this.quill.keyboard.addBinding(\n          { key: 'k', shortKey: true },\n          (_range: Range, context: Context) => {\n            toolbar.handlers.link.call(toolbar, !context.format.link);\n          },\n        );\n      }\n    }\n  }\n}\nSnowTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (value) {\n            const range = this.quill.getSelection();\n            if (range == null || range.length === 0) return;\n            let preview = this.quill.getText(range);\n            if (\n              /^\\S+@\\S+\\.\\S+$/.test(preview) &&\n              preview.indexOf('mailto:') !== 0\n            ) {\n              preview = `mailto:${preview}`;\n            }\n            // @ts-expect-error\n            const { tooltip } = this.quill.theme;\n            tooltip.edit('link', preview);\n          } else {\n            this.quill.format('link', false, Quill.sources.USER);\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport default SnowTheme;\n", "import Quill, { Parchment, Range } from './core.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core.js';\n\nimport { AlignClass, AlignStyle } from './formats/align.js';\nimport {\n  DirectionAttribute,\n  DirectionClass,\n  DirectionStyle,\n} from './formats/direction.js';\nimport Indent from './formats/indent.js';\n\nimport Blockquote from './formats/blockquote.js';\nimport Header from './formats/header.js';\nimport List from './formats/list.js';\n\nimport { BackgroundClass, BackgroundStyle } from './formats/background.js';\nimport { ColorClass, ColorStyle } from './formats/color.js';\nimport { FontClass, FontStyle } from './formats/font.js';\nimport { SizeClass, SizeStyle } from './formats/size.js';\n\nimport Bold from './formats/bold.js';\nimport Italic from './formats/italic.js';\nimport Link from './formats/link.js';\nimport Script from './formats/script.js';\nimport Strike from './formats/strike.js';\nimport Underline from './formats/underline.js';\n\nimport Formula from './formats/formula.js';\nimport Image from './formats/image.js';\nimport Video from './formats/video.js';\n\nimport CodeBlock, { Code as InlineCode } from './formats/code.js';\n\nimport Syntax from './modules/syntax.js';\nimport Table from './modules/table.js';\nimport Toolbar from './modules/toolbar.js';\n\nimport Icons from './ui/icons.js';\nimport Picker from './ui/picker.js';\nimport ColorPicker from './ui/color-picker.js';\nimport IconPicker from './ui/icon-picker.js';\nimport Tooltip from './ui/tooltip.js';\n\nimport BubbleTheme from './themes/bubble.js';\nimport SnowTheme from './themes/snow.js';\n\nQuill.register(\n  {\n    'attributors/attribute/direction': DirectionAttribute,\n\n    'attributors/class/align': AlignClass,\n    'attributors/class/background': BackgroundClass,\n    'attributors/class/color': ColorClass,\n    'attributors/class/direction': DirectionClass,\n    'attributors/class/font': FontClass,\n    'attributors/class/size': SizeClass,\n\n    'attributors/style/align': AlignStyle,\n    'attributors/style/background': BackgroundStyle,\n    'attributors/style/color': ColorStyle,\n    'attributors/style/direction': DirectionStyle,\n    'attributors/style/font': FontStyle,\n    'attributors/style/size': SizeStyle,\n  },\n  true,\n);\n\nQuill.register(\n  {\n    'formats/align': AlignClass,\n    'formats/direction': DirectionClass,\n    'formats/indent': Indent,\n\n    'formats/background': BackgroundStyle,\n    'formats/color': ColorStyle,\n    'formats/font': FontClass,\n    'formats/size': SizeClass,\n\n    'formats/blockquote': Blockquote,\n    'formats/code-block': CodeBlock,\n    'formats/header': Header,\n    'formats/list': List,\n\n    'formats/bold': Bold,\n    'formats/code': InlineCode,\n    'formats/italic': Italic,\n    'formats/link': Link,\n    'formats/script': Script,\n    'formats/strike': Strike,\n    'formats/underline': Underline,\n\n    'formats/formula': Formula,\n    'formats/image': Image,\n    'formats/video': Video,\n\n    'modules/syntax': Syntax,\n    'modules/table': Table,\n    'modules/toolbar': Toolbar,\n\n    'themes/bubble': BubbleTheme,\n    'themes/snow': SnowTheme,\n\n    'ui/icons': Icons,\n    'ui/picker': Picker,\n    'ui/icon-picker': IconPicker,\n    'ui/color-picker': ColorPicker,\n    'ui/tooltip': Tooltip,\n  },\n  true,\n);\n\nexport { Module } from './core.js';\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\nexport { Parchment, Range };\n\nexport default Quill;\n", "import Bold from './bold.js';\n\nclass Italic extends Bold {\n  static blotName = 'italic';\n  static tagName = ['EM', 'I'];\n}\n\nexport default Italic;\n", "import Bold from './bold.js';\n\nclass Strike extends Bold {\n  static blotName = 'strike';\n  static tagName = ['S', 'STRIKE'];\n}\n\nexport default Strike;\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "self", "t", "e", "n", "r", "Block", "BlockBlot", "cache", "delta", "this", "blockDelta", "deleteAt", "index", "length", "super", "formatAt", "name", "value", "scroll", "query", "Scope", "BLOCK", "format", "Math", "min", "insertAt", "def", "lines", "split", "text", "shift", "children", "tail", "block", "reduce", "lineIndex", "line", "insertBefore", "blot", "ref", "head", "Break", "remove", "moveChildren", "target", "optimize", "context", "path", "removeChild", "child", "force", "arguments", "clone", "parent", "next", "blotName", "tagName", "defaultChild", "allowedChildren", "Inline", "EmbedBlot", "TextBlot", "BlockEmbed", "attach", "attributes", "AttributorStore", "domNode", "Delta", "insert", "formats", "values", "attribute", "BLOCK_ATTRIBUTE", "pop", "blocks", "map", "create", "forEach", "filter", "descendants", "LeafBlot", "leaf", "bubbleFormats", "statics", "scope", "BLOCK_BLOT", "prev", "Container", "ContainerBlot", "Cursor", "constructor", "selection", "textNode", "document", "createTextNode", "CONTENTS", "appendChild", "savedLength", "detach", "offset", "node", "position", "data", "restore", "composing", "range", "getNativeRange", "lastChild", "parentNode", "prevTextBlot", "prevTextLength", "nextTextBlot", "nextText", "newText", "join", "mergedTextBlot", "newTextNode", "remapOffset", "start", "end", "startNode", "startOffset", "endNode", "endOffset", "update", "mutations", "some", "mutation", "type", "isolate", "unwrap", "static", "GUARD_TEXT", "Embed", "contentNode", "createElement", "setAttribute", "Array", "from", "childNodes", "childNode", "leftGuard", "rightGuard", "prevLength", "InlineBlot", "other", "selfIndex", "order", "indexOf", "otherIndex", "compare", "BLOT", "wrap", "Text", "escapeText", "replace", "s", "isLine", "isUpdatable", "updateContent", "Scroll", "ScrollBlot", "registry", "_ref", "emitter", "batch", "enable", "addEventListener", "handleDragStart", "batchStart", "isArray", "batchEnd", "emitMount", "emit", "Emitter", "events", "SCROLL_BLOT_MOUNT", "emitUnmount", "SCROLL_BLOT_UNMOUNT", "emitEmbedUpdate", "change", "SCROLL_EMBED_UPDATE", "first", "last", "enabled", "endsWith", "slice", "embed", "INLINE_BLOT", "wrapper", "insertContents", "renderBlocks", "deltaToRenderBlocks", "concat", "shouldInsertNewlineChar", "descendant", "key", "insertInlineContents", "newlineCharLength", "lineEndIndex", "AttributeMap", "diff", "Object", "keys", "refBlot", "refBlotOffset", "find", "renderBlock", "createBlock", "undefined", "blockEmbed", "isEnabled", "getAttribute", "Number", "MAX_VALUE", "getLines", "blotIndex", "blotLength", "lengthLeft", "forEachAt", "childIndex", "childLength", "push", "SCROLL_OPTIMIZE", "source", "sources", "USER", "observer", "takeRecords", "_ref2", "SCROLL_BEFORE_UPDATE", "SCROLL_UPDATE", "updateEmbedAt", "b", "event", "preventDefault", "currentBlockDelta", "op", "splitted", "INLINE", "entries", "_ref3", "_ref4", "inlineContents", "Op", "History", "Module", "quill", "options", "lastRecorded", "ignoreChange", "stack", "undo", "redo", "currentRange", "on", "Quill", "EDITOR_CHANGE", "eventName", "oldValue", "SELECTION_CHANGE", "SILENT", "TEXT_CHANGE", "userOnly", "transform", "record", "transformRange", "keyboard", "addBinding", "shortKey", "bind", "shiftKey", "test", "navigator", "platform", "inputType", "dest", "item", "base", "getContents", "inverseDelta", "invert", "updateContents", "restoreSelection", "clear", "cutoff", "changeDelta", "oldDelta", "ops", "undoDelta", "undoRange", "timestamp", "Date", "now", "delay", "compose", "maxStack", "transformStack", "stackItem", "setSelection", "deleteLength", "delete", "changeIndex", "lastOp", "attr", "remoteDelta", "i", "oldItem", "splice", "transformPosition", "Uploader", "native", "caretRangeFromPoint", "clientX", "clientY", "caretPositionFromPoint", "createRange", "setStart", "offsetNode", "setEnd", "normalized", "normalizeNative", "normalizedToRange", "dataTransfer", "files", "upload", "uploads", "file", "mimetypes", "includes", "handler", "call", "DEFAULTS", "promises", "Promise", "resolve", "reader", "FileReader", "onload", "result", "readAsDataURL", "all", "then", "images", "image", "retain", "INSERT_TYPES", "Input", "handleBeforeInput", "userAgent", "COMPOSITION_BEFORE_START", "handleCompositionStart", "deleteRange", "replaceText", "getFormat", "composition", "isComposing", "defaultPrevented", "staticRange", "getTargetRanges", "collapsed", "types", "getData", "getSelection", "isMac", "UINode", "isListening", "selectionChangeDeadline", "handleArrowKeys", "handleNavigationShortcuts", "ParentBlot", "uiNode", "isRTL", "getComputedStyle", "ctrlKey", "ensureListeningToSelectionChange", "listener", "handleSelectionChange", "once", "getRangeAt", "startContainer", "newRange", "setStartAfter", "setEndAfter", "removeAllRanges", "addRange", "register", "Clipboard", "Keyboard", "debug", "logger", "_len", "args", "_key", "querySelectorAll", "instances", "get", "handleDOM", "EventEmitter", "domListeners", "error", "_len2", "_key2", "log", "_len3", "_key3", "contains", "listenDOM", "COMPOSITION_START", "COMPOSITION_BEFORE_END", "COMPOSITION_END", "API", "WeakMap", "levels", "level", "method", "console", "namespace", "ns", "newLevel", "ASCII", "convertListHTML", "items", "lastIndent", "endTag", "getListType", "indent", "rest", "tag", "convertHTML", "previousType", "isRoot", "html", "list", "parts", "outerHTML", "innerHTML", "Element", "combineFormats", "combined", "merged", "combinedValue", "normalizeDelta", "normalizedDelta", "shiftRange", "amount", "Range", "getDelta", "applyDelta", "scrollLength", "deleteDelta", "isImplicitNewlinePrepended", "isImplicitNewlineAppended", "merge", "isInlineEmbed", "prependedLength", "addedLength", "deleteText", "formatLine", "max", "cloneDeep", "formatText", "leaves", "lineFormats", "leafFormats", "blots", "getHTML", "lineOffset", "lineLength", "getText", "contents", "insertEmbed", "insertText", "isBlank", "removeFormat", "suffixLength", "suffix", "selectionInfo", "match", "textBlot", "CursorBlot", "oldText", "relativeSelectionInfo", "oldRange", "isEqual", "setupListeners", "queueMicrotask", "handleCompositionEnd", "Node", "getElementRect", "element", "rect", "getBoundingClientRect", "scaleX", "abs", "width", "offsetWidth", "scaleY", "height", "offsetHeight", "top", "right", "left", "clientWidth", "bottom", "clientHeight", "paddingValueToInt", "number", "parseInt", "isNaN", "getScrollDistance", "targetStart", "targetEnd", "scrollStart", "scrollEnd", "scrollPaddingStart", "scrollPaddingEnd", "CORE_FORMATS", "globalRegistry", "Parchment", "uiClass", "limit", "bubble", "imports", "overwrite", "attrName", "warn", "startsWith", "container", "containerOrSelector", "resolveSelector", "Error", "theme", "Theme", "import", "modules", "quillModuleDefaults", "quillDefaults", "themeModuleDefaults", "themeDefaults", "userModuleOptions", "expandModuleConfig", "toolbar", "config", "omitUndefinedValuesFromOptions", "createRegistryWithFormats", "sourceRegistry", "Registry", "coreBlot", "iterations", "requiredContainer", "modulesWithDefaults", "moduleClass", "bounds", "trim", "classList", "add", "set", "addContainer", "scrollBlotName", "editor", "Editor", "Selection", "Composition", "addModule", "clipboard", "history", "uploader", "init", "toggle", "lastRange", "getRange", "modify", "convert", "setContents", "placeholder", "readOnly", "disable", "allowReadOnlyEdits", "refNode", "className", "blur", "setRange", "overload", "editReadOnly", "modifier", "focus", "preventScroll", "scrollSelectionIntoView", "getBounds", "containerBounds", "getLength", "getIndex", "getLeaf", "getLine", "getModule", "getSemanticHTML", "hasFocus", "off", "scrollRectIntoView", "targetRect", "ownerDocument", "current", "isDocumentBody", "body", "bounding", "window", "visualViewport", "documentElement", "style", "scrollDistanceX", "scrollPaddingLeft", "scrollPaddingRight", "scrollDistanceY", "scrollPaddingTop", "scrollPaddingBottom", "defaultView", "scrollBy", "scrollLeft", "scrollTop", "scrolledLeft", "scrolledTop", "parentElement", "getRootNode", "host", "scrollIntoView", "delete1", "applied", "delete2", "setText", "parchment", "selector", "querySelector", "expanded", "obj", "fromEntries", "entry", "lengthOrSource", "pos", "mouseDown", "cursor", "savedRange", "lastNative", "handleComposition", "handleDragging", "setTimeout", "setNativeRange", "triggeredByTyping", "ignored", "nativeRange", "after", "nextLine", "side", "rangeCount", "info", "isConnected", "activeElement", "positions", "indexes", "endContainer", "rangeToNative", "getPosition", "inclusive", "leafOffset", "ModuleClass", "default", "whitelist", "AlignAttribute", "Attributor", "AlignClass", "ClassAttributor", "AlignStyle", "StyleAttributor", "BackgroundClass", "BackgroundStyle", "ColorAttributor", "CodeBlockContainer", "code", "innerText", "CodeBlock", "Code", "component", "toString", "ColorClass", "ColorStyle", "DirectionAttribute", "DirectionClass", "DirectionStyle", "FontClass", "FontStyleAttributor", "FontStyle", "SizeClass", "SizeStyle", "normalWeightRegexp", "blockTagNames", "isBlockElement", "ignoreRegexp", "idRegexp", "indentRegexp", "NORMALIZERS", "doc", "msoList", "others", "listItems", "parseListItem", "idMatch", "id", "indentMatch", "typeRegexp", "RegExp", "typeMatch", "parsed", "childListItems", "nextElementSibling", "ul", "listItem", "li", "replaceChild", "fragment", "createDocumentFragment", "append", "br", "previousElementSibling", "CLIPBOARD_CONFIG", "TEXT_NODE", "isPre", "replacer", "collapse", "replaced", "previousSibling", "nextSibling", "matchNewline", "deltaEndsWith", "ELEMENT_NODE", "prototype", "applyFormat", "classes", "styles", "ATTRIBUTE", "ATTRIBUTE_ATTRIBUTORS", "keyName", "STYLE_ATTRIBUTORS", "newDelta", "fontStyle", "italic", "textDecoration", "underline", "strike", "fontWeight", "bold", "_ref5", "parseFloat", "textIndent", "composed", "checkedAttr", "table", "createMatchAlias", "memo", "onCaptureCopy", "onCapturePaste", "matchers", "matcher", "addMatcher", "normalizeHTML", "normalize", "DOMParser", "parseFromString", "nodeMatches", "elementMatchers", "textMatchers", "prepareMatching", "traverse", "dangerouslyPasteHTML", "paste", "isCut", "onCopy", "clipboardData", "setData", "normalizeURIList", "urlList", "url", "childElementCount", "firstElementChild", "onPaste", "pastedDelta", "pair", "has", "matches", "endText", "toLowerCase", "preNodes", "nodeType", "childrenDelta", "reducedDelta", "_node", "HTMLParagraphElement", "firstChild", "SHORTKEY", "evt", "binding", "which", "bindings", "handleEnter", "metaKey", "altKey", "handleBackspace", "handleDelete", "prefix", "handleDeleteRange", "listen", "keyBinding", "singleBinding", "keyCode", "leafStart", "offsetStart", "leafEnd", "offsetEnd", "prefixText", "suffixText", "curContext", "empty", "every", "curFormats", "prevFormats", "formatDelta", "nextFormats", "defaultOptions", "makeFormatHandler", "outdent", "makeCodeBlockHandler", "tab", "header", "row", "cell", "getTable", "_table", "blockquote", "numLines", "cur", "makeEmbedArrowHandler", "makeTableArrowHandler", "TAB", "textContent", "up", "targetRow", "targetCell", "targetLine", "firstFormats", "lastFormats", "hasOwnProperty", "Events", "EE", "fn", "addListener", "TypeError", "_events", "_eventsCount", "clearEvent", "__proto__", "eventNames", "names", "getOwnPropertySymbols", "listeners", "handlers", "l", "ee", "listenerCount", "a1", "a2", "a3", "a4", "a5", "len", "removeListener", "apply", "j", "removeAllListeners", "prefixed", "DIFF_DELETE", "DIFF_INSERT", "DIFF_EQUAL", "diff_main", "text1", "text2", "cursor_pos", "cleanup", "_fix_unicode", "editdiff", "oldLength", "newLength", "oldCursor", "oldBefore", "oldAfter", "maybeNewCursor", "newCursor", "newBefore", "newAfter", "prefixLength", "oldPrefix", "newPrefix", "make_edit_splice", "oldSuffix", "newSuffix", "commonlength", "diff_commonPrefix", "commonprefix", "substring", "diff_commonSuffix", "commonsuffix", "diffs", "longtext", "shorttext", "hm", "diff_halfMatchI_", "best_longtext_a", "best_longtext_b", "best_shorttext_a", "best_shorttext_b", "seed", "floor", "best_common", "text1_a", "text1_b", "text2_a", "text2_b", "hm1", "ceil", "hm2", "mid_common", "diffs_a", "diffs_b", "text1_length", "text2_length", "max_d", "v_offset", "v_length", "v1", "v2", "x", "front", "k1start", "k1end", "k2start", "k2end", "d", "k1", "k1_offset", "y1", "x1", "charAt", "k2_offset", "x2", "diff_bisectSplit_", "k2", "y2", "unshift", "diff_cleanupMerge", "changes", "equalities", "equalitiesLength", "lastequality", "pointer", "length_insertions1", "length_deletions1", "length_insertions2", "length_deletions2", "diff_cleanupSemanticScore_", "one", "two", "char1", "char2", "nonAlphaNumeric1", "nonAlphaNumericRegex_", "nonAlphaNumeric2", "whitespace1", "whitespaceRegex_", "whitespace2", "lineBreak1", "linebreakRegex_", "lineBreak2", "blankLine1", "blanklineEndRegex_", "blankLine2", "blanklineStartRegex_", "equality1", "edit", "equality2", "commonOffset", "commonString", "bestEquality1", "bestEdit", "bestEquality2", "bestScore", "score", "deletion", "insertion", "overlap_length1", "diff_commonOverlap_", "overlap_length2", "y", "text1a", "text2a", "text1b", "text2b", "diffsb", "pointermin", "pointermax", "pointermid", "pointerstart", "is_surrogate_pair_start", "charCodeAt", "text_length", "best", "pattern", "found", "pointerend", "is_surrogate_pair_end", "fix_unicode", "count_delete", "count_insert", "text_delete", "text_insert", "previous_equality", "ends_with_pair_start", "stray", "k", "starts_with_pair_end", "charCode", "str", "before", "oldMiddle", "newMiddle", "tuples", "ret", "INSERT", "DELETE", "EQUAL", "HASH_UNDEFINED", "MAX_SAFE_INTEGER", "argsTag", "boolTag", "dateTag", "funcTag", "genTag", "mapTag", "numberTag", "objectTag", "promiseTag", "regexpTag", "setTag", "stringTag", "symbolTag", "weakMapTag", "arrayBufferTag", "dataViewTag", "float32Tag", "float64Tag", "int8Tag", "int16Tag", "int32Tag", "uint8Tag", "uint8ClampedTag", "uint16Tag", "uint32Tag", "reFlags", "reIsHostCtor", "reIsUint", "cloneableTags", "freeGlobal", "g", "freeSelf", "Function", "freeExports", "freeModule", "moduleExports", "addMapEntry", "addSetEntry", "arrayReduce", "array", "iteratee", "accumulator", "initAccum", "isHostObject", "mapToArray", "size", "overArg", "func", "arg", "setToArray", "uid", "arrayProto", "funcProto", "objectProto", "coreJsData", "maskSrcKey", "exec", "IE_PROTO", "funcToString", "objectToString", "reIsNative", "Buffer", "Symbol", "Uint8Array", "getPrototype", "getPrototypeOf", "objectCreate", "propertyIsEnumerable", "nativeGetSymbols", "nativeIsBuffer", "isBuffer", "nativeKeys", "DataView", "getNative", "Map", "Set", "nativeCreate", "dataViewCtorString", "toSource", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "symbolProto", "symbolValueOf", "valueOf", "Hash", "ListCache", "MapCache", "Stack", "__data__", "assignValue", "object", "objValue", "eq", "assocIndexOf", "baseClone", "isDeep", "isFull", "customizer", "isObject", "isArr", "input", "getTag", "isFunc", "buffer", "copy", "isPrototype", "proto", "copyObject", "getSymbols", "cloneFunc", "symbol", "Ctor", "cloneArrayBuffer", "dataView", "byteOffset", "byteLength", "typedArray", "regexp", "lastIndex", "stacked", "props", "keysFunc", "symbolsFunc", "subValue", "arrayBuffer", "newValue", "getMapData", "isFunction", "pairs", "LARGE_ARRAY_SIZE", "isIndex", "ArrayBuffer", "ctorString", "isArrayLike", "inherited", "String", "skipIndexes", "COMPARE_PARTIAL_FLAG", "COMPARE_UNORDERED_FLAG", "arrayTag", "asyncTag", "errorTag", "nullTag", "proxyTag", "undefinedTag", "typedArrayTags", "freeProcess", "process", "nodeUtil", "nodeIsTypedArray", "isTypedArray", "arraySome", "predicate", "nativeObjectToString", "symToStringTag", "toStringTag", "SetCache", "baseGetTag", "isOwn", "unmasked", "baseIsArguments", "isObjectLike", "baseIsEqual", "bitmask", "equalFunc", "objIsArr", "othIsArr", "objTag", "othTag", "objIsObj", "othIsObj", "isSameTag", "equalArrays", "message", "isPartial", "objIsWrapped", "othIsWrapped", "objUnwrapped", "othUnwrapped", "objProps", "getAllKeys", "objLength", "skipCtor", "othValue", "compared", "objCtor", "othCtor", "arrLength", "othLength", "seen", "arrValue", "othIndex", "resIndex", "isArguments", "isLength", "isArg", "isBuff", "isType", "a", "keepNull", "attrs", "baseInverted", "priority", "OpIterator", "NULL_CHARACTER", "fromCharCode", "getEmbedTypeAndData", "embedType", "newOp", "chop", "passed", "failed", "initialValue", "changeLength", "elem", "Infinity", "iter", "hasNext", "nextOp", "thisIter", "otherIter", "firstOther", "peek", "firstLeft", "peekType", "peekLength", "thisOp", "otherOp", "action", "thisData", "otherData", "getHandler", "strings", "retDelta", "diffResult", "opLength", "newline", "inverted", "baseIndex", "baseOp", "opData", "baseOpData", "transformedData", "nextType", "retOp", "substr", "allocUnsafe", "isNew", "defineProperty", "global", "stubArray", "require", "keysIn", "nodeIsMap", "isMap", "nodeIsSet", "isSet", "isFlat", "arrStacked", "othStacked", "objStacked", "isProto", "count", "lastCalled", "assigner", "iterable", "objectCtorString", "srcIndex", "mergeFunc", "srcValue", "isCommon", "isTyped", "baseMerge", "nativeMax", "string", "nativeNow", "stamp", "remaining", "otherArgs", "thisArg", "guard", "TYPE", "LEVEL", "INLINE_ATTRIBUTE", "ANY", "attributeBit", "canAdd", "removeAttribute", "ParchmentError", "tags", "blotClass", "inline", "definitions", "definition", "isBlot", "isAttr", "toUpperCase", "camelize", "part", "build", "rawValue", "cloneNode", "_context", "replacement", "_force", "_mutations", "ShadowBlot", "_domNode", "compareDocumentPosition", "DOCUMENT_POSITION_CONTAINED_BY", "_inclusive", "LinkedList", "nodes", "iterator", "curNode", "callback", "curIndex", "curLength", "makeAttachedBlot", "reverse", "err", "criteria", "enforceAllowedChildren", "done", "splitAfter", "childBlot", "refDomNode", "targetParent", "replaceWith", "_length", "addedNodes", "removedNodes", "sort", "DOCUMENT_POSITION_FOLLOWING", "obj1", "obj2", "prop", "move", "checkMerge", "_scroll", "OBSERVER_CONFIG", "characterData", "characterDataOldValue", "childList", "subtree", "MutationObserver", "observe", "disconnect", "mutationsMap", "records", "mark", "markParent", "o", "grandChild", "splitText", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "loaded", "__webpack_modules__", "getter", "__esModule", "enumerable", "globalThis", "nmd", "paths", "IndentAttributor", "normalizedValue", "Blockquote", "Header", "ListContainer", "ListItem", "ui", "listEventHandler", "attachUI", "Bold", "Link", "sanitize", "PROTOCOL_WHITELIST", "SANITIZED_URL", "protocols", "anchor", "href", "protocol", "Script", "Underline", "Formula", "katex", "render", "throwOnError", "errorColor", "formula", "ATTRIBUTES", "Image", "hasAttribute", "Video", "video", "TokenAttributor", "CodeToken", "SyntaxCodeBlock", "SyntaxCodeBlockContainer", "forceNext", "highlight", "forced", "language", "cachedText", "codeBlock", "BreakBlot", "Syntax", "hljs", "languages", "highlightBlot", "initListener", "initTimer", "select", "label", "option", "timer", "clearTimeout", "interval", "lib", "versionString", "majorVersion", "nodeText", "TableCell", "tableId", "cellOffset", "rowOffset", "TableRow", "thisHead", "thisTail", "nextHead", "nextTail", "childFormats", "TableBody", "TableContainer", "balanceCells", "rows", "maxColumns", "fill", "cells", "column", "at", "deleteColumn", "insertColumn", "insertRow", "random", "Table", "listenBalanceCells", "balanceTables", "deleteRow", "deleteTable", "insertColumnLeft", "insertColumnRight", "insertRowAbove", "insertRowBelow", "insertTable", "columns", "old", "Toolbar", "groups", "controls", "group", "control", "addButton", "HTMLElement", "addHandler", "selectedIndex", "selected", "prompt", "isActive", "clean", "direction", "align", "link", "center", "justify", "background", "codeIcon", "color", "rtl", "bullet", "check", "ordered", "script", "sub", "optionsCounter", "toggleAriaAttribute", "buildPicker", "display", "togglePicker", "escape", "buildItem", "tabIndex", "selectItem", "buildLabel", "buildOptions", "close", "trigger", "dispatchEvent", "Event", "Picker", "backgroundColor", "colorLabel", "stroke", "icons", "defaultItem", "boundsContainer", "TEMPLATE", "el", "overflowY", "marginTop", "hide", "reference", "rootBounds", "verticalShift", "show", "ALIGNS", "COLORS", "FONTS", "HEADERS", "SIZES", "BaseTheme", "tooltip", "textbox", "pickers", "picker", "removeEventListener", "extendToolbar", "buildButtons", "buttons", "button", "buildPickers", "selects", "fillSelect", "IconPicker", "ColorPicker", "fileInput", "click", "BaseTooltip", "Tooltip", "save", "cancel", "restoreFocus", "mode", "preview", "linkRange", "defaultValue", "TOOLBAR_CONFIG", "BubbleTooltip", "lastLine", "indexBounds", "arrow", "marginLeft", "BubbleTheme", "SnowTooltip", "LinkBlot", "SnowTheme", "_range", "Indent", "List", "InlineCode", "Icons"]
}
