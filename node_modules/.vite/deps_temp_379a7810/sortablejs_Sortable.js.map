{
  "version": 3,
  "sources": ["../../sortablejs/Sortable.js"],
  "sourcesContent": ["/**!\n * Sortable 1.15.2\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Sortable = factory());\n}(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n      keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n    return target;\n  }\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n    return target;\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var version = \"1.15.2\";\n\n  function userAgent(pattern) {\n    if (typeof window !== 'undefined' && window.navigator) {\n      return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n    }\n  }\n  var IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\n  var Edge = userAgent(/Edge/i);\n  var FireFox = userAgent(/firefox/i);\n  var Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\n  var IOS = userAgent(/iP(ad|od|hone)/i);\n  var ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\n  var captureMode = {\n    capture: false,\n    passive: false\n  };\n  function on(el, event, fn) {\n    el.addEventListener(event, fn, !IE11OrLess && captureMode);\n  }\n  function off(el, event, fn) {\n    el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n  }\n  function matches( /**HTMLElement*/el, /**String*/selector) {\n    if (!selector) return;\n    selector[0] === '>' && (selector = selector.substring(1));\n    if (el) {\n      try {\n        if (el.matches) {\n          return el.matches(selector);\n        } else if (el.msMatchesSelector) {\n          return el.msMatchesSelector(selector);\n        } else if (el.webkitMatchesSelector) {\n          return el.webkitMatchesSelector(selector);\n        }\n      } catch (_) {\n        return false;\n      }\n    }\n    return false;\n  }\n  function getParentOrHost(el) {\n    return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n  }\n  function closest( /**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {\n    if (el) {\n      ctx = ctx || document;\n      do {\n        if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n          return el;\n        }\n        if (el === ctx) break;\n        /* jshint boss:true */\n      } while (el = getParentOrHost(el));\n    }\n    return null;\n  }\n  var R_SPACE = /\\s+/g;\n  function toggleClass(el, name, state) {\n    if (el && name) {\n      if (el.classList) {\n        el.classList[state ? 'add' : 'remove'](name);\n      } else {\n        var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n        el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n      }\n    }\n  }\n  function css(el, prop, val) {\n    var style = el && el.style;\n    if (style) {\n      if (val === void 0) {\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n          val = document.defaultView.getComputedStyle(el, '');\n        } else if (el.currentStyle) {\n          val = el.currentStyle;\n        }\n        return prop === void 0 ? val : val[prop];\n      } else {\n        if (!(prop in style) && prop.indexOf('webkit') === -1) {\n          prop = '-webkit-' + prop;\n        }\n        style[prop] = val + (typeof val === 'string' ? '' : 'px');\n      }\n    }\n  }\n  function matrix(el, selfOnly) {\n    var appliedTransforms = '';\n    if (typeof el === 'string') {\n      appliedTransforms = el;\n    } else {\n      do {\n        var transform = css(el, 'transform');\n        if (transform && transform !== 'none') {\n          appliedTransforms = transform + ' ' + appliedTransforms;\n        }\n        /* jshint boss:true */\n      } while (!selfOnly && (el = el.parentNode));\n    }\n    var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n    /*jshint -W056 */\n    return matrixFn && new matrixFn(appliedTransforms);\n  }\n  function find(ctx, tagName, iterator) {\n    if (ctx) {\n      var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n      if (iterator) {\n        for (; i < n; i++) {\n          iterator(list[i], i);\n        }\n      }\n      return list;\n    }\n    return [];\n  }\n  function getWindowScrollingElement() {\n    var scrollingElement = document.scrollingElement;\n    if (scrollingElement) {\n      return scrollingElement;\n    } else {\n      return document.documentElement;\n    }\n  }\n\n  /**\r\n   * Returns the \"bounding client rect\" of given element\r\n   * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n   * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n   * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n   * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n   * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n   * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n   */\n  function getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n    if (!el.getBoundingClientRect && el !== window) return;\n    var elRect, top, left, bottom, right, height, width;\n    if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n      elRect = el.getBoundingClientRect();\n      top = elRect.top;\n      left = elRect.left;\n      bottom = elRect.bottom;\n      right = elRect.right;\n      height = elRect.height;\n      width = elRect.width;\n    } else {\n      top = 0;\n      left = 0;\n      bottom = window.innerHeight;\n      right = window.innerWidth;\n      height = window.innerHeight;\n      width = window.innerWidth;\n    }\n    if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n      // Adjust for translate()\n      container = container || el.parentNode;\n\n      // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n      // Not needed on <= IE11\n      if (!IE11OrLess) {\n        do {\n          if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n            var containerRect = container.getBoundingClientRect();\n\n            // Set relative to edges of padding box of container\n            top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n            left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n            bottom = top + elRect.height;\n            right = left + elRect.width;\n            break;\n          }\n          /* jshint boss:true */\n        } while (container = container.parentNode);\n      }\n    }\n    if (undoScale && el !== window) {\n      // Adjust for scale()\n      var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n      if (elMatrix) {\n        top /= scaleY;\n        left /= scaleX;\n        width /= scaleX;\n        height /= scaleY;\n        bottom = top + height;\n        right = left + width;\n      }\n    }\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right,\n      width: width,\n      height: height\n    };\n  }\n\n  /**\r\n   * Checks if a side of an element is scrolled past a side of its parents\r\n   * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n   * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n   * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n   * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n   */\n  function isScrolledPast(el, elSide, parentSide) {\n    var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n\n    /* jshint boss:true */\n    while (parent) {\n      var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n      if (parentSide === 'top' || parentSide === 'left') {\n        visible = elSideVal >= parentSideVal;\n      } else {\n        visible = elSideVal <= parentSideVal;\n      }\n      if (!visible) return parent;\n      if (parent === getWindowScrollingElement()) break;\n      parent = getParentAutoScrollElement(parent, false);\n    }\n    return false;\n  }\n\n  /**\r\n   * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n   * and non-draggable elements\r\n   * @param  {HTMLElement} el       The parent element\r\n   * @param  {Number} childNum      The index of the child\r\n   * @param  {Object} options       Parent Sortable's options\r\n   * @return {HTMLElement}          The child at index childNum, or null if not found\r\n   */\n  function getChild(el, childNum, options, includeDragEl) {\n    var currentChild = 0,\n      i = 0,\n      children = el.children;\n    while (i < children.length) {\n      if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n        if (currentChild === childNum) {\n          return children[i];\n        }\n        currentChild++;\n      }\n      i++;\n    }\n    return null;\n  }\n\n  /**\r\n   * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n   * @param  {HTMLElement} el       Parent element\r\n   * @param  {selector} selector    Any other elements that should be ignored\r\n   * @return {HTMLElement}          The last child, ignoring ghostEl\r\n   */\n  function lastChild(el, selector) {\n    var last = el.lastElementChild;\n    while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n      last = last.previousElementSibling;\n    }\n    return last || null;\n  }\n\n  /**\r\n   * Returns the index of an element within its parent for a selected set of\r\n   * elements\r\n   * @param  {HTMLElement} el\r\n   * @param  {selector} selector\r\n   * @return {number}\r\n   */\n  function index(el, selector) {\n    var index = 0;\n    if (!el || !el.parentNode) {\n      return -1;\n    }\n\n    /* jshint boss:true */\n    while (el = el.previousElementSibling) {\n      if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n        index++;\n      }\n    }\n    return index;\n  }\n\n  /**\r\n   * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n   * The value is returned in real pixels.\r\n   * @param  {HTMLElement} el\r\n   * @return {Array}             Offsets in the format of [left, top]\r\n   */\n  function getRelativeScrollOffset(el) {\n    var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n    if (el) {\n      do {\n        var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n        offsetLeft += el.scrollLeft * scaleX;\n        offsetTop += el.scrollTop * scaleY;\n      } while (el !== winScroller && (el = el.parentNode));\n    }\n    return [offsetLeft, offsetTop];\n  }\n\n  /**\r\n   * Returns the index of the object within the given array\r\n   * @param  {Array} arr   Array that may or may not hold the object\r\n   * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n   * @return {Number}      The index of the object in the array, or -1\r\n   */\n  function indexOfObject(arr, obj) {\n    for (var i in arr) {\n      if (!arr.hasOwnProperty(i)) continue;\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n      }\n    }\n    return -1;\n  }\n  function getParentAutoScrollElement(el, includeSelf) {\n    // skip to window\n    if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n    var elem = el;\n    var gotSelf = false;\n    do {\n      // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n      if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n        var elemCSS = css(elem);\n        if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n          if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n          if (gotSelf || includeSelf) return elem;\n          gotSelf = true;\n        }\n      }\n      /* jshint boss:true */\n    } while (elem = elem.parentNode);\n    return getWindowScrollingElement();\n  }\n  function extend(dst, src) {\n    if (dst && src) {\n      for (var key in src) {\n        if (src.hasOwnProperty(key)) {\n          dst[key] = src[key];\n        }\n      }\n    }\n    return dst;\n  }\n  function isRectEqual(rect1, rect2) {\n    return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n  }\n  var _throttleTimeout;\n  function throttle(callback, ms) {\n    return function () {\n      if (!_throttleTimeout) {\n        var args = arguments,\n          _this = this;\n        if (args.length === 1) {\n          callback.call(_this, args[0]);\n        } else {\n          callback.apply(_this, args);\n        }\n        _throttleTimeout = setTimeout(function () {\n          _throttleTimeout = void 0;\n        }, ms);\n      }\n    };\n  }\n  function cancelThrottle() {\n    clearTimeout(_throttleTimeout);\n    _throttleTimeout = void 0;\n  }\n  function scrollBy(el, x, y) {\n    el.scrollLeft += x;\n    el.scrollTop += y;\n  }\n  function clone(el) {\n    var Polymer = window.Polymer;\n    var $ = window.jQuery || window.Zepto;\n    if (Polymer && Polymer.dom) {\n      return Polymer.dom(el).cloneNode(true);\n    } else if ($) {\n      return $(el).clone(true)[0];\n    } else {\n      return el.cloneNode(true);\n    }\n  }\n  function setRect(el, rect) {\n    css(el, 'position', 'absolute');\n    css(el, 'top', rect.top);\n    css(el, 'left', rect.left);\n    css(el, 'width', rect.width);\n    css(el, 'height', rect.height);\n  }\n  function unsetRect(el) {\n    css(el, 'position', '');\n    css(el, 'top', '');\n    css(el, 'left', '');\n    css(el, 'width', '');\n    css(el, 'height', '');\n  }\n  function getChildContainingRectFromElement(container, options, ghostEl) {\n    var rect = {};\n    Array.from(container.children).forEach(function (child) {\n      var _rect$left, _rect$top, _rect$right, _rect$bottom;\n      if (!closest(child, options.draggable, container, false) || child.animated || child === ghostEl) return;\n      var childRect = getRect(child);\n      rect.left = Math.min((_rect$left = rect.left) !== null && _rect$left !== void 0 ? _rect$left : Infinity, childRect.left);\n      rect.top = Math.min((_rect$top = rect.top) !== null && _rect$top !== void 0 ? _rect$top : Infinity, childRect.top);\n      rect.right = Math.max((_rect$right = rect.right) !== null && _rect$right !== void 0 ? _rect$right : -Infinity, childRect.right);\n      rect.bottom = Math.max((_rect$bottom = rect.bottom) !== null && _rect$bottom !== void 0 ? _rect$bottom : -Infinity, childRect.bottom);\n    });\n    rect.width = rect.right - rect.left;\n    rect.height = rect.bottom - rect.top;\n    rect.x = rect.left;\n    rect.y = rect.top;\n    return rect;\n  }\n  var expando = 'Sortable' + new Date().getTime();\n\n  function AnimationStateManager() {\n    var animationStates = [],\n      animationCallbackId;\n    return {\n      captureAnimationState: function captureAnimationState() {\n        animationStates = [];\n        if (!this.options.animation) return;\n        var children = [].slice.call(this.el.children);\n        children.forEach(function (child) {\n          if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n          animationStates.push({\n            target: child,\n            rect: getRect(child)\n          });\n          var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect);\n\n          // If animating: compensate for current animation\n          if (child.thisAnimationDuration) {\n            var childMatrix = matrix(child, true);\n            if (childMatrix) {\n              fromRect.top -= childMatrix.f;\n              fromRect.left -= childMatrix.e;\n            }\n          }\n          child.fromRect = fromRect;\n        });\n      },\n      addAnimationState: function addAnimationState(state) {\n        animationStates.push(state);\n      },\n      removeAnimationState: function removeAnimationState(target) {\n        animationStates.splice(indexOfObject(animationStates, {\n          target: target\n        }), 1);\n      },\n      animateAll: function animateAll(callback) {\n        var _this = this;\n        if (!this.options.animation) {\n          clearTimeout(animationCallbackId);\n          if (typeof callback === 'function') callback();\n          return;\n        }\n        var animating = false,\n          animationTime = 0;\n        animationStates.forEach(function (state) {\n          var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n          if (targetMatrix) {\n            // Compensate for current animation\n            toRect.top -= targetMatrix.f;\n            toRect.left -= targetMatrix.e;\n          }\n          target.toRect = toRect;\n          if (target.thisAnimationDuration) {\n            // Could also check if animatingRect is between fromRect and toRect\n            if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) &&\n            // Make sure animatingRect is on line between toRect & fromRect\n            (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n              // If returning to same place as started from animation and on same axis\n              time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n            }\n          }\n\n          // if fromRect != toRect: animate\n          if (!isRectEqual(toRect, fromRect)) {\n            target.prevFromRect = fromRect;\n            target.prevToRect = toRect;\n            if (!time) {\n              time = _this.options.animation;\n            }\n            _this.animate(target, animatingRect, toRect, time);\n          }\n          if (time) {\n            animating = true;\n            animationTime = Math.max(animationTime, time);\n            clearTimeout(target.animationResetTimer);\n            target.animationResetTimer = setTimeout(function () {\n              target.animationTime = 0;\n              target.prevFromRect = null;\n              target.fromRect = null;\n              target.prevToRect = null;\n              target.thisAnimationDuration = null;\n            }, time);\n            target.thisAnimationDuration = time;\n          }\n        });\n        clearTimeout(animationCallbackId);\n        if (!animating) {\n          if (typeof callback === 'function') callback();\n        } else {\n          animationCallbackId = setTimeout(function () {\n            if (typeof callback === 'function') callback();\n          }, animationTime);\n        }\n        animationStates = [];\n      },\n      animate: function animate(target, currentRect, toRect, duration) {\n        if (duration) {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n          target.animatingX = !!translateX;\n          target.animatingY = !!translateY;\n          css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n          this.forRepaintDummy = repaint(target); // repaint\n\n          css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n          css(target, 'transform', 'translate3d(0,0,0)');\n          typeof target.animated === 'number' && clearTimeout(target.animated);\n          target.animated = setTimeout(function () {\n            css(target, 'transition', '');\n            css(target, 'transform', '');\n            target.animated = false;\n            target.animatingX = false;\n            target.animatingY = false;\n          }, duration);\n        }\n      }\n    };\n  }\n  function repaint(target) {\n    return target.offsetWidth;\n  }\n  function calculateRealTime(animatingRect, fromRect, toRect, options) {\n    return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n  }\n\n  var plugins = [];\n  var defaults = {\n    initializeByDefault: true\n  };\n  var PluginManager = {\n    mount: function mount(plugin) {\n      // Set default static properties\n      for (var option in defaults) {\n        if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n          plugin[option] = defaults[option];\n        }\n      }\n      plugins.forEach(function (p) {\n        if (p.pluginName === plugin.pluginName) {\n          throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n        }\n      });\n      plugins.push(plugin);\n    },\n    pluginEvent: function pluginEvent(eventName, sortable, evt) {\n      var _this = this;\n      this.eventCanceled = false;\n      evt.cancel = function () {\n        _this.eventCanceled = true;\n      };\n      var eventNameGlobal = eventName + 'Global';\n      plugins.forEach(function (plugin) {\n        if (!sortable[plugin.pluginName]) return;\n        // Fire global events if it exists in this sortable\n        if (sortable[plugin.pluginName][eventNameGlobal]) {\n          sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n            sortable: sortable\n          }, evt));\n        }\n\n        // Only fire plugin event if plugin is enabled in this sortable,\n        // and plugin has event defined\n        if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n          sortable[plugin.pluginName][eventName](_objectSpread2({\n            sortable: sortable\n          }, evt));\n        }\n      });\n    },\n    initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n      plugins.forEach(function (plugin) {\n        var pluginName = plugin.pluginName;\n        if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n        var initialized = new plugin(sortable, el, sortable.options);\n        initialized.sortable = sortable;\n        initialized.options = sortable.options;\n        sortable[pluginName] = initialized;\n\n        // Add default options from plugin\n        _extends(defaults, initialized.defaults);\n      });\n      for (var option in sortable.options) {\n        if (!sortable.options.hasOwnProperty(option)) continue;\n        var modified = this.modifyOption(sortable, option, sortable.options[option]);\n        if (typeof modified !== 'undefined') {\n          sortable.options[option] = modified;\n        }\n      }\n    },\n    getEventProperties: function getEventProperties(name, sortable) {\n      var eventProperties = {};\n      plugins.forEach(function (plugin) {\n        if (typeof plugin.eventProperties !== 'function') return;\n        _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n      });\n      return eventProperties;\n    },\n    modifyOption: function modifyOption(sortable, name, value) {\n      var modifiedValue;\n      plugins.forEach(function (plugin) {\n        // Plugin must exist on the Sortable\n        if (!sortable[plugin.pluginName]) return;\n\n        // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n        if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n          modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n        }\n      });\n      return modifiedValue;\n    }\n  };\n\n  function dispatchEvent(_ref) {\n    var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n    sortable = sortable || rootEl && rootEl[expando];\n    if (!sortable) return;\n    var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n    // Support for new CustomEvent feature\n    if (window.CustomEvent && !IE11OrLess && !Edge) {\n      evt = new CustomEvent(name, {\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      evt = document.createEvent('Event');\n      evt.initEvent(name, true, true);\n    }\n    evt.to = toEl || rootEl;\n    evt.from = fromEl || rootEl;\n    evt.item = targetEl || rootEl;\n    evt.clone = cloneEl;\n    evt.oldIndex = oldIndex;\n    evt.newIndex = newIndex;\n    evt.oldDraggableIndex = oldDraggableIndex;\n    evt.newDraggableIndex = newDraggableIndex;\n    evt.originalEvent = originalEvent;\n    evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n    var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n    for (var option in allEventProperties) {\n      evt[option] = allEventProperties[option];\n    }\n    if (rootEl) {\n      rootEl.dispatchEvent(evt);\n    }\n    if (options[onName]) {\n      options[onName].call(sortable, evt);\n    }\n  }\n\n  var _excluded = [\"evt\"];\n  var pluginEvent = function pluginEvent(eventName, sortable) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, _excluded);\n    PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n      dragEl: dragEl,\n      parentEl: parentEl,\n      ghostEl: ghostEl,\n      rootEl: rootEl,\n      nextEl: nextEl,\n      lastDownEl: lastDownEl,\n      cloneEl: cloneEl,\n      cloneHidden: cloneHidden,\n      dragStarted: moved,\n      putSortable: putSortable,\n      activeSortable: Sortable.active,\n      originalEvent: originalEvent,\n      oldIndex: oldIndex,\n      oldDraggableIndex: oldDraggableIndex,\n      newIndex: newIndex,\n      newDraggableIndex: newDraggableIndex,\n      hideGhostForTarget: _hideGhostForTarget,\n      unhideGhostForTarget: _unhideGhostForTarget,\n      cloneNowHidden: function cloneNowHidden() {\n        cloneHidden = true;\n      },\n      cloneNowShown: function cloneNowShown() {\n        cloneHidden = false;\n      },\n      dispatchSortableEvent: function dispatchSortableEvent(name) {\n        _dispatchEvent({\n          sortable: sortable,\n          name: name,\n          originalEvent: originalEvent\n        });\n      }\n    }, data));\n  };\n  function _dispatchEvent(info) {\n    dispatchEvent(_objectSpread2({\n      putSortable: putSortable,\n      cloneEl: cloneEl,\n      targetEl: dragEl,\n      rootEl: rootEl,\n      oldIndex: oldIndex,\n      oldDraggableIndex: oldDraggableIndex,\n      newIndex: newIndex,\n      newDraggableIndex: newDraggableIndex\n    }, info));\n  }\n  var dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\n    ghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n\n    _silent = false,\n    savedInputChecked = [];\n\n  /** @const */\n  var documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\n    supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n      if (!documentExists) return;\n      // false when <= IE11\n      if (IE11OrLess) {\n        return false;\n      }\n      var el = document.createElement('x');\n      el.style.cssText = 'pointer-events:auto';\n      return el.style.pointerEvents === 'auto';\n    }(),\n    _detectDirection = function _detectDirection(el, options) {\n      var elCSS = css(el),\n        elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n        child1 = getChild(el, 0, options),\n        child2 = getChild(el, 1, options),\n        firstChildCSS = child1 && css(child1),\n        secondChildCSS = child2 && css(child2),\n        firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n        secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n      if (elCSS.display === 'flex') {\n        return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n      }\n      if (elCSS.display === 'grid') {\n        return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n      }\n      if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n        var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n        return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n      }\n      return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n    },\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n      var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n        dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n        dragElOppLength = vertical ? dragRect.width : dragRect.height,\n        targetS1Opp = vertical ? targetRect.left : targetRect.top,\n        targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n        targetOppLength = vertical ? targetRect.width : targetRect.height;\n      return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n    },\n    /**\r\n     * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n     * @param  {Number} x      X position\r\n     * @param  {Number} y      Y position\r\n     * @return {HTMLElement}   Element of the first found nearest Sortable\r\n     */\n    _detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n      var ret;\n      sortables.some(function (sortable) {\n        var threshold = sortable[expando].options.emptyInsertThreshold;\n        if (!threshold || lastChild(sortable)) return;\n        var rect = getRect(sortable),\n          insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n          insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n        if (insideHorizontally && insideVertically) {\n          return ret = sortable;\n        }\n      });\n      return ret;\n    },\n    _prepareGroup = function _prepareGroup(options) {\n      function toFn(value, pull) {\n        return function (to, from, dragEl, evt) {\n          var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n          if (value == null && (pull || sameGroup)) {\n            // Default pull value\n            // Default pull and put value if same group\n            return true;\n          } else if (value == null || value === false) {\n            return false;\n          } else if (pull && value === 'clone') {\n            return value;\n          } else if (typeof value === 'function') {\n            return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n          } else {\n            var otherGroup = (pull ? to : from).options.group.name;\n            return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n          }\n        };\n      }\n      var group = {};\n      var originalGroup = options.group;\n      if (!originalGroup || _typeof(originalGroup) != 'object') {\n        originalGroup = {\n          name: originalGroup\n        };\n      }\n      group.name = originalGroup.name;\n      group.checkPull = toFn(originalGroup.pull, true);\n      group.checkPut = toFn(originalGroup.put);\n      group.revertClone = originalGroup.revertClone;\n      options.group = group;\n    },\n    _hideGhostForTarget = function _hideGhostForTarget() {\n      if (!supportCssPointerEvents && ghostEl) {\n        css(ghostEl, 'display', 'none');\n      }\n    },\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n      if (!supportCssPointerEvents && ghostEl) {\n        css(ghostEl, 'display', '');\n      }\n    };\n\n  // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n  if (documentExists && !ChromeForAndroid) {\n    document.addEventListener('click', function (evt) {\n      if (ignoreNextClick) {\n        evt.preventDefault();\n        evt.stopPropagation && evt.stopPropagation();\n        evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n        ignoreNextClick = false;\n        return false;\n      }\n    }, true);\n  }\n  var nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n    if (dragEl) {\n      evt = evt.touches ? evt.touches[0] : evt;\n      var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n      if (nearest) {\n        // Create imitation event\n        var event = {};\n        for (var i in evt) {\n          if (evt.hasOwnProperty(i)) {\n            event[i] = evt[i];\n          }\n        }\n        event.target = event.rootEl = nearest;\n        event.preventDefault = void 0;\n        event.stopPropagation = void 0;\n        nearest[expando]._onDragOver(event);\n      }\n    }\n  };\n  var _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n    if (dragEl) {\n      dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n    }\n  };\n\n  /**\r\n   * @class  Sortable\r\n   * @param  {HTMLElement}  el\r\n   * @param  {Object}       [options]\r\n   */\n  function Sortable(el, options) {\n    if (!(el && el.nodeType && el.nodeType === 1)) {\n      throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n    }\n    this.el = el; // root element\n    this.options = options = _extends({}, options);\n\n    // Export instance\n    el[expando] = this;\n    var defaults = {\n      group: null,\n      sort: true,\n      disabled: false,\n      store: null,\n      handle: null,\n      draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n      swapThreshold: 1,\n      // percentage; 0 <= x <= 1\n      invertSwap: false,\n      // invert always\n      invertedSwapThreshold: null,\n      // will be set to same as swapThreshold if default\n      removeCloneOnHide: true,\n      direction: function direction() {\n        return _detectDirection(el, this.options);\n      },\n      ghostClass: 'sortable-ghost',\n      chosenClass: 'sortable-chosen',\n      dragClass: 'sortable-drag',\n      ignore: 'a, img',\n      filter: null,\n      preventOnFilter: true,\n      animation: 0,\n      easing: null,\n      setData: function setData(dataTransfer, dragEl) {\n        dataTransfer.setData('Text', dragEl.textContent);\n      },\n      dropBubble: false,\n      dragoverBubble: false,\n      dataIdAttr: 'data-id',\n      delay: 0,\n      delayOnTouchOnly: false,\n      touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n      forceFallback: false,\n      fallbackClass: 'sortable-fallback',\n      fallbackOnBody: false,\n      fallbackTolerance: 0,\n      fallbackOffset: {\n        x: 0,\n        y: 0\n      },\n      supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n      emptyInsertThreshold: 5\n    };\n    PluginManager.initializePlugins(this, el, defaults);\n\n    // Set default options\n    for (var name in defaults) {\n      !(name in options) && (options[name] = defaults[name]);\n    }\n    _prepareGroup(options);\n\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    // Setup drag mode\n    this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n    if (this.nativeDraggable) {\n      // Touch start threshold cannot be greater than the native dragstart threshold\n      this.options.touchStartThreshold = 1;\n    }\n\n    // Bind events\n    if (options.supportPointer) {\n      on(el, 'pointerdown', this._onTapStart);\n    } else {\n      on(el, 'mousedown', this._onTapStart);\n      on(el, 'touchstart', this._onTapStart);\n    }\n    if (this.nativeDraggable) {\n      on(el, 'dragover', this);\n      on(el, 'dragenter', this);\n    }\n    sortables.push(this.el);\n\n    // Restore sorting\n    options.store && options.store.get && this.sort(options.store.get(this) || []);\n\n    // Add animation state manager\n    _extends(this, AnimationStateManager());\n  }\n  Sortable.prototype = /** @lends Sortable.prototype */{\n    constructor: Sortable,\n    _isOutsideThisEl: function _isOutsideThisEl(target) {\n      if (!this.el.contains(target) && target !== this.el) {\n        lastTarget = null;\n      }\n    },\n    _getDirection: function _getDirection(evt, target) {\n      return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n    },\n    _onTapStart: function _onTapStart( /** Event|TouchEvent */evt) {\n      if (!evt.cancelable) return;\n      var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n      _saveInputCheckedState(el);\n\n      // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n      if (dragEl) {\n        return;\n      }\n      if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n        return; // only left button and enabled\n      }\n\n      // cancel dnd if original target is content editable\n      if (originalTarget.isContentEditable) {\n        return;\n      }\n\n      // Safari ignores further event handling after mousedown\n      if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n        return;\n      }\n      target = closest(target, options.draggable, el, false);\n      if (target && target.animated) {\n        return;\n      }\n      if (lastDownEl === target) {\n        // Ignoring duplicate `down`\n        return;\n      }\n\n      // Get the index of the dragged element within its parent\n      oldIndex = index(target);\n      oldDraggableIndex = index(target, options.draggable);\n\n      // Check filter\n      if (typeof filter === 'function') {\n        if (filter.call(this, evt, target, this)) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: originalTarget,\n            name: 'filter',\n            targetEl: target,\n            toEl: el,\n            fromEl: el\n          });\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          preventOnFilter && evt.cancelable && evt.preventDefault();\n          return; // cancel dnd\n        }\n      } else if (filter) {\n        filter = filter.split(',').some(function (criteria) {\n          criteria = closest(originalTarget, criteria.trim(), el, false);\n          if (criteria) {\n            _dispatchEvent({\n              sortable: _this,\n              rootEl: criteria,\n              name: 'filter',\n              targetEl: target,\n              fromEl: el,\n              toEl: el\n            });\n            pluginEvent('filter', _this, {\n              evt: evt\n            });\n            return true;\n          }\n        });\n        if (filter) {\n          preventOnFilter && evt.cancelable && evt.preventDefault();\n          return; // cancel dnd\n        }\n      }\n      if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n        return;\n      }\n\n      // Prepare `dragstart`\n      this._prepareDragStart(evt, touch, target);\n    },\n    _prepareDragStart: function _prepareDragStart( /** Event */evt, /** Touch */touch, /** HTMLElement */target) {\n      var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n      if (target && !dragEl && target.parentNode === el) {\n        var dragRect = getRect(target);\n        rootEl = el;\n        dragEl = target;\n        parentEl = dragEl.parentNode;\n        nextEl = dragEl.nextSibling;\n        lastDownEl = target;\n        activeGroup = options.group;\n        Sortable.dragged = dragEl;\n        tapEvt = {\n          target: dragEl,\n          clientX: (touch || evt).clientX,\n          clientY: (touch || evt).clientY\n        };\n        tapDistanceLeft = tapEvt.clientX - dragRect.left;\n        tapDistanceTop = tapEvt.clientY - dragRect.top;\n        this._lastX = (touch || evt).clientX;\n        this._lastY = (touch || evt).clientY;\n        dragEl.style['will-change'] = 'all';\n        dragStartFn = function dragStartFn() {\n          pluginEvent('delayEnded', _this, {\n            evt: evt\n          });\n          if (Sortable.eventCanceled) {\n            _this._onDrop();\n            return;\n          }\n          // Delayed drag has been triggered\n          // we can re-enable the events: touchmove/mousemove\n          _this._disableDelayedDragEvents();\n          if (!FireFox && _this.nativeDraggable) {\n            dragEl.draggable = true;\n          }\n\n          // Bind the events: dragstart/dragend\n          _this._triggerDragStart(evt, touch);\n\n          // Drag start event\n          _dispatchEvent({\n            sortable: _this,\n            name: 'choose',\n            originalEvent: evt\n          });\n\n          // Chosen item\n          toggleClass(dragEl, options.chosenClass, true);\n        };\n\n        // Disable \"draggable\"\n        options.ignore.split(',').forEach(function (criteria) {\n          find(dragEl, criteria.trim(), _disableDraggable);\n        });\n        on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n        on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n        on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n        on(ownerDocument, 'mouseup', _this._onDrop);\n        on(ownerDocument, 'touchend', _this._onDrop);\n        on(ownerDocument, 'touchcancel', _this._onDrop);\n\n        // Make dragEl draggable (must be before delay for FireFox)\n        if (FireFox && this.nativeDraggable) {\n          this.options.touchStartThreshold = 4;\n          dragEl.draggable = true;\n        }\n        pluginEvent('delayStart', this, {\n          evt: evt\n        });\n\n        // Delay is impossible for native DnD in Edge or IE\n        if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n          if (Sortable.eventCanceled) {\n            this._onDrop();\n            return;\n          }\n          // If the user moves the pointer or let go the click or touch\n          // before the delay has been reached:\n          // disable the delayed drag\n          on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n          on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n          on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n          on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n          on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n          options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n          _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n        } else {\n          dragStartFn();\n        }\n      }\n    },\n    _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler( /** TouchEvent|PointerEvent **/e) {\n      var touch = e.touches ? e.touches[0] : e;\n      if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n        this._disableDelayedDrag();\n      }\n    },\n    _disableDelayedDrag: function _disableDelayedDrag() {\n      dragEl && _disableDraggable(dragEl);\n      clearTimeout(this._dragStartTimer);\n      this._disableDelayedDragEvents();\n    },\n    _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n      var ownerDocument = this.el.ownerDocument;\n      off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n      off(ownerDocument, 'touchend', this._disableDelayedDrag);\n      off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n      off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n      off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n      off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n    },\n    _triggerDragStart: function _triggerDragStart( /** Event */evt, /** Touch */touch) {\n      touch = touch || evt.pointerType == 'touch' && evt;\n      if (!this.nativeDraggable || touch) {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._onTouchMove);\n        } else if (touch) {\n          on(document, 'touchmove', this._onTouchMove);\n        } else {\n          on(document, 'mousemove', this._onTouchMove);\n        }\n      } else {\n        on(dragEl, 'dragend', this);\n        on(rootEl, 'dragstart', this._onDragStart);\n      }\n      try {\n        if (document.selection) {\n          // Timeout neccessary for IE9\n          _nextTick(function () {\n            document.selection.empty();\n          });\n        } else {\n          window.getSelection().removeAllRanges();\n        }\n      } catch (err) {}\n    },\n    _dragStarted: function _dragStarted(fallback, evt) {\n      awaitingDragStarted = false;\n      if (rootEl && dragEl) {\n        pluginEvent('dragStarted', this, {\n          evt: evt\n        });\n        if (this.nativeDraggable) {\n          on(document, 'dragover', _checkOutsideTargetEl);\n        }\n        var options = this.options;\n\n        // Apply effect\n        !fallback && toggleClass(dragEl, options.dragClass, false);\n        toggleClass(dragEl, options.ghostClass, true);\n        Sortable.active = this;\n        fallback && this._appendGhost();\n\n        // Drag start event\n        _dispatchEvent({\n          sortable: this,\n          name: 'start',\n          originalEvent: evt\n        });\n      } else {\n        this._nulling();\n      }\n    },\n    _emulateDragOver: function _emulateDragOver() {\n      if (touchEvt) {\n        this._lastX = touchEvt.clientX;\n        this._lastY = touchEvt.clientY;\n        _hideGhostForTarget();\n        var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        var parent = target;\n        while (target && target.shadowRoot) {\n          target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n          if (target === parent) break;\n          parent = target;\n        }\n        dragEl.parentNode[expando]._isOutsideThisEl(target);\n        if (parent) {\n          do {\n            if (parent[expando]) {\n              var inserted = void 0;\n              inserted = parent[expando]._onDragOver({\n                clientX: touchEvt.clientX,\n                clientY: touchEvt.clientY,\n                target: target,\n                rootEl: parent\n              });\n              if (inserted && !this.options.dragoverBubble) {\n                break;\n              }\n            }\n            target = parent; // store last element\n          }\n          /* jshint boss:true */ while (parent = parent.parentNode);\n        }\n        _unhideGhostForTarget();\n      }\n    },\n    _onTouchMove: function _onTouchMove( /**TouchEvent*/evt) {\n      if (tapEvt) {\n        var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1);\n\n        // only set the status to dragging, when we are actually dragging\n        if (!Sortable.active && !awaitingDragStarted) {\n          if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n            return;\n          }\n          this._onDragStart(evt, true);\n        }\n        if (ghostEl) {\n          if (ghostMatrix) {\n            ghostMatrix.e += dx - (lastDx || 0);\n            ghostMatrix.f += dy - (lastDy || 0);\n          } else {\n            ghostMatrix = {\n              a: 1,\n              b: 0,\n              c: 0,\n              d: 1,\n              e: dx,\n              f: dy\n            };\n          }\n          var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n          css(ghostEl, 'webkitTransform', cssMatrix);\n          css(ghostEl, 'mozTransform', cssMatrix);\n          css(ghostEl, 'msTransform', cssMatrix);\n          css(ghostEl, 'transform', cssMatrix);\n          lastDx = dx;\n          lastDy = dy;\n          touchEvt = touch;\n        }\n        evt.cancelable && evt.preventDefault();\n      }\n    },\n    _appendGhost: function _appendGhost() {\n      // Bug if using scale(): https://stackoverflow.com/questions/2637058\n      // Not being adjusted for\n      if (!ghostEl) {\n        var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options;\n\n        // Position absolutely\n        if (PositionGhostAbsolutely) {\n          // Get relatively positioned parent\n          ghostRelativeParent = container;\n          while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n            ghostRelativeParent = ghostRelativeParent.parentNode;\n          }\n          if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n            if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n            rect.top += ghostRelativeParent.scrollTop;\n            rect.left += ghostRelativeParent.scrollLeft;\n          } else {\n            ghostRelativeParent = getWindowScrollingElement();\n          }\n          ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n        }\n        ghostEl = dragEl.cloneNode(true);\n        toggleClass(ghostEl, options.ghostClass, false);\n        toggleClass(ghostEl, options.fallbackClass, true);\n        toggleClass(ghostEl, options.dragClass, true);\n        css(ghostEl, 'transition', '');\n        css(ghostEl, 'transform', '');\n        css(ghostEl, 'box-sizing', 'border-box');\n        css(ghostEl, 'margin', 0);\n        css(ghostEl, 'top', rect.top);\n        css(ghostEl, 'left', rect.left);\n        css(ghostEl, 'width', rect.width);\n        css(ghostEl, 'height', rect.height);\n        css(ghostEl, 'opacity', '0.8');\n        css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n        css(ghostEl, 'zIndex', '100000');\n        css(ghostEl, 'pointerEvents', 'none');\n        Sortable.ghost = ghostEl;\n        container.appendChild(ghostEl);\n\n        // Set transform-origin\n        css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n      }\n    },\n    _onDragStart: function _onDragStart( /**Event*/evt, /**boolean*/fallback) {\n      var _this = this;\n      var dataTransfer = evt.dataTransfer;\n      var options = _this.options;\n      pluginEvent('dragStart', this, {\n        evt: evt\n      });\n      if (Sortable.eventCanceled) {\n        this._onDrop();\n        return;\n      }\n      pluginEvent('setupClone', this);\n      if (!Sortable.eventCanceled) {\n        cloneEl = clone(dragEl);\n        cloneEl.removeAttribute(\"id\");\n        cloneEl.draggable = false;\n        cloneEl.style['will-change'] = '';\n        this._hideClone();\n        toggleClass(cloneEl, this.options.chosenClass, false);\n        Sortable.clone = cloneEl;\n      }\n\n      // #1143: IFrame support workaround\n      _this.cloneId = _nextTick(function () {\n        pluginEvent('clone', _this);\n        if (Sortable.eventCanceled) return;\n        if (!_this.options.removeCloneOnHide) {\n          rootEl.insertBefore(cloneEl, dragEl);\n        }\n        _this._hideClone();\n        _dispatchEvent({\n          sortable: _this,\n          name: 'clone'\n        });\n      });\n      !fallback && toggleClass(dragEl, options.dragClass, true);\n\n      // Set proper drop events\n      if (fallback) {\n        ignoreNextClick = true;\n        _this._loopId = setInterval(_this._emulateDragOver, 50);\n      } else {\n        // Undo what was set in _prepareDragStart before drag started\n        off(document, 'mouseup', _this._onDrop);\n        off(document, 'touchend', _this._onDrop);\n        off(document, 'touchcancel', _this._onDrop);\n        if (dataTransfer) {\n          dataTransfer.effectAllowed = 'move';\n          options.setData && options.setData.call(_this, dataTransfer, dragEl);\n        }\n        on(document, 'drop', _this);\n\n        // #1276 fix:\n        css(dragEl, 'transform', 'translateZ(0)');\n      }\n      awaitingDragStarted = true;\n      _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n      on(document, 'selectstart', _this);\n      moved = true;\n      if (Safari) {\n        css(document.body, 'user-select', 'none');\n      }\n    },\n    // Returns true - if no further action is needed (either inserted or another condition)\n    _onDragOver: function _onDragOver( /**Event*/evt) {\n      var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n      if (_silent) return;\n      function dragOverEvent(name, extra) {\n        pluginEvent(name, _this, _objectSpread2({\n          evt: evt,\n          isOwner: isOwner,\n          axis: vertical ? 'vertical' : 'horizontal',\n          revert: revert,\n          dragRect: dragRect,\n          targetRect: targetRect,\n          canSort: canSort,\n          fromSortable: fromSortable,\n          target: target,\n          completed: completed,\n          onMove: function onMove(target, after) {\n            return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n          },\n          changed: changed\n        }, extra));\n      }\n\n      // Capture animation state\n      function capture() {\n        dragOverEvent('dragOverAnimationCapture');\n        _this.captureAnimationState();\n        if (_this !== fromSortable) {\n          fromSortable.captureAnimationState();\n        }\n      }\n\n      // Return invocation when dragEl is inserted (or completed)\n      function completed(insertion) {\n        dragOverEvent('dragOverCompleted', {\n          insertion: insertion\n        });\n        if (insertion) {\n          // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n          if (isOwner) {\n            activeSortable._hideClone();\n          } else {\n            activeSortable._showClone(_this);\n          }\n          if (_this !== fromSortable) {\n            // Set ghost class to new sortable's ghost class\n            toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n            toggleClass(dragEl, options.ghostClass, true);\n          }\n          if (putSortable !== _this && _this !== Sortable.active) {\n            putSortable = _this;\n          } else if (_this === Sortable.active && putSortable) {\n            putSortable = null;\n          }\n\n          // Animation\n          if (fromSortable === _this) {\n            _this._ignoreWhileAnimating = target;\n          }\n          _this.animateAll(function () {\n            dragOverEvent('dragOverAnimationComplete');\n            _this._ignoreWhileAnimating = null;\n          });\n          if (_this !== fromSortable) {\n            fromSortable.animateAll();\n            fromSortable._ignoreWhileAnimating = null;\n          }\n        }\n\n        // Null lastTarget if it is not inside a previously swapped element\n        if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n          lastTarget = null;\n        }\n\n        // no bubbling and not fallback\n        if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n          dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n\n          // Do not detect for empty insert if already inserted\n          !insertion && nearestEmptyInsertDetectEvent(evt);\n        }\n        !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n        return completedFired = true;\n      }\n\n      // Call when dragEl has been inserted\n      function changed() {\n        newIndex = index(dragEl);\n        newDraggableIndex = index(dragEl, options.draggable);\n        _dispatchEvent({\n          sortable: _this,\n          name: 'change',\n          toEl: el,\n          newIndex: newIndex,\n          newDraggableIndex: newDraggableIndex,\n          originalEvent: evt\n        });\n      }\n      if (evt.preventDefault !== void 0) {\n        evt.cancelable && evt.preventDefault();\n      }\n      target = closest(target, options.draggable, el, true);\n      dragOverEvent('dragOver');\n      if (Sortable.eventCanceled) return completedFired;\n      if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n        return completed(false);\n      }\n      ignoreNextClick = false;\n      if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n      : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n        vertical = this._getDirection(evt, target) === 'vertical';\n        dragRect = getRect(dragEl);\n        dragOverEvent('dragOverValid');\n        if (Sortable.eventCanceled) return completedFired;\n        if (revert) {\n          parentEl = rootEl; // actualization\n          capture();\n          this._hideClone();\n          dragOverEvent('revert');\n          if (!Sortable.eventCanceled) {\n            if (nextEl) {\n              rootEl.insertBefore(dragEl, nextEl);\n            } else {\n              rootEl.appendChild(dragEl);\n            }\n          }\n          return completed(true);\n        }\n        var elLastChild = lastChild(el, options.draggable);\n        if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n          // Insert to end of list\n\n          // If already at end of list: Do not insert\n          if (elLastChild === dragEl) {\n            return completed(false);\n          }\n\n          // if there is a last element, it is the target\n          if (elLastChild && el === evt.target) {\n            target = elLastChild;\n          }\n          if (target) {\n            targetRect = getRect(target);\n          }\n          if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n            capture();\n            if (elLastChild && elLastChild.nextSibling) {\n              // the last draggable element is not the last node\n              el.insertBefore(dragEl, elLastChild.nextSibling);\n            } else {\n              el.appendChild(dragEl);\n            }\n            parentEl = el; // actualization\n\n            changed();\n            return completed(true);\n          }\n        } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n          // Insert to start of list\n          var firstChild = getChild(el, 0, options, true);\n          if (firstChild === dragEl) {\n            return completed(false);\n          }\n          target = firstChild;\n          targetRect = getRect(target);\n          if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n            capture();\n            el.insertBefore(dragEl, firstChild);\n            parentEl = el; // actualization\n\n            changed();\n            return completed(true);\n          }\n        } else if (target.parentNode === el) {\n          targetRect = getRect(target);\n          var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n          if (lastTarget !== target) {\n            targetBeforeFirstSwap = targetRect[side1];\n            pastFirstInvertThresh = false;\n            isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n          }\n          direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n          var sibling;\n          if (direction !== 0) {\n            // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n            var dragIndex = index(dragEl);\n            do {\n              dragIndex -= direction;\n              sibling = parentEl.children[dragIndex];\n            } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n          }\n          // If dragEl is already beside target: Do not insert\n          if (direction === 0 || sibling === target) {\n            return completed(false);\n          }\n          lastTarget = target;\n          lastDirection = direction;\n          var nextSibling = target.nextElementSibling,\n            after = false;\n          after = direction === 1;\n          var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n          if (moveVector !== false) {\n            if (moveVector === 1 || moveVector === -1) {\n              after = moveVector === 1;\n            }\n            _silent = true;\n            setTimeout(_unsilent, 30);\n            capture();\n            if (after && !nextSibling) {\n              el.appendChild(dragEl);\n            } else {\n              target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n            }\n\n            // Undo chrome's scroll adjustment (has no effect on other browsers)\n            if (scrolledPastTop) {\n              scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n            }\n            parentEl = dragEl.parentNode; // actualization\n\n            // must be done before animation\n            if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n              targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n            }\n            changed();\n            return completed(true);\n          }\n        }\n        if (el.contains(dragEl)) {\n          return completed(false);\n        }\n      }\n      return false;\n    },\n    _ignoreWhileAnimating: null,\n    _offMoveEvents: function _offMoveEvents() {\n      off(document, 'mousemove', this._onTouchMove);\n      off(document, 'touchmove', this._onTouchMove);\n      off(document, 'pointermove', this._onTouchMove);\n      off(document, 'dragover', nearestEmptyInsertDetectEvent);\n      off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n      off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n    },\n    _offUpEvents: function _offUpEvents() {\n      var ownerDocument = this.el.ownerDocument;\n      off(ownerDocument, 'mouseup', this._onDrop);\n      off(ownerDocument, 'touchend', this._onDrop);\n      off(ownerDocument, 'pointerup', this._onDrop);\n      off(ownerDocument, 'touchcancel', this._onDrop);\n      off(document, 'selectstart', this);\n    },\n    _onDrop: function _onDrop( /**Event*/evt) {\n      var el = this.el,\n        options = this.options;\n\n      // Get the index of the dragged element within its parent\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      pluginEvent('drop', this, {\n        evt: evt\n      });\n      parentEl = dragEl && dragEl.parentNode;\n\n      // Get again after plugin event\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      if (Sortable.eventCanceled) {\n        this._nulling();\n        return;\n      }\n      awaitingDragStarted = false;\n      isCircumstantialInvert = false;\n      pastFirstInvertThresh = false;\n      clearInterval(this._loopId);\n      clearTimeout(this._dragStartTimer);\n      _cancelNextTick(this.cloneId);\n      _cancelNextTick(this._dragStartId);\n\n      // Unbind events\n      if (this.nativeDraggable) {\n        off(document, 'drop', this);\n        off(el, 'dragstart', this._onDragStart);\n      }\n      this._offMoveEvents();\n      this._offUpEvents();\n      if (Safari) {\n        css(document.body, 'user-select', '');\n      }\n      css(dragEl, 'transform', '');\n      if (evt) {\n        if (moved) {\n          evt.cancelable && evt.preventDefault();\n          !options.dropBubble && evt.stopPropagation();\n        }\n        ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n        if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n          // Remove clone(s)\n          cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n        }\n        if (dragEl) {\n          if (this.nativeDraggable) {\n            off(dragEl, 'dragend', this);\n          }\n          _disableDraggable(dragEl);\n          dragEl.style['will-change'] = '';\n\n          // Remove classes\n          // ghostClass is added in dragStarted\n          if (moved && !awaitingDragStarted) {\n            toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n          }\n          toggleClass(dragEl, this.options.chosenClass, false);\n\n          // Drag stop event\n          _dispatchEvent({\n            sortable: this,\n            name: 'unchoose',\n            toEl: parentEl,\n            newIndex: null,\n            newDraggableIndex: null,\n            originalEvent: evt\n          });\n          if (rootEl !== parentEl) {\n            if (newIndex >= 0) {\n              // Add event\n              _dispatchEvent({\n                rootEl: parentEl,\n                name: 'add',\n                toEl: parentEl,\n                fromEl: rootEl,\n                originalEvent: evt\n              });\n\n              // Remove event\n              _dispatchEvent({\n                sortable: this,\n                name: 'remove',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              // drag from one list and drop into another\n              _dispatchEvent({\n                rootEl: parentEl,\n                name: 'sort',\n                toEl: parentEl,\n                fromEl: rootEl,\n                originalEvent: evt\n              });\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n            putSortable && putSortable.save();\n          } else {\n            if (newIndex !== oldIndex) {\n              if (newIndex >= 0) {\n                // drag & drop within the same list\n                _dispatchEvent({\n                  sortable: this,\n                  name: 'update',\n                  toEl: parentEl,\n                  originalEvent: evt\n                });\n                _dispatchEvent({\n                  sortable: this,\n                  name: 'sort',\n                  toEl: parentEl,\n                  originalEvent: evt\n                });\n              }\n            }\n          }\n          if (Sortable.active) {\n            /* jshint eqnull:true */\n            if (newIndex == null || newIndex === -1) {\n              newIndex = oldIndex;\n              newDraggableIndex = oldDraggableIndex;\n            }\n            _dispatchEvent({\n              sortable: this,\n              name: 'end',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n\n            // Save sorting\n            this.save();\n          }\n        }\n      }\n      this._nulling();\n    },\n    _nulling: function _nulling() {\n      pluginEvent('nulling', this);\n      rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n      savedInputChecked.forEach(function (el) {\n        el.checked = true;\n      });\n      savedInputChecked.length = lastDx = lastDy = 0;\n    },\n    handleEvent: function handleEvent( /**Event*/evt) {\n      switch (evt.type) {\n        case 'drop':\n        case 'dragend':\n          this._onDrop(evt);\n          break;\n        case 'dragenter':\n        case 'dragover':\n          if (dragEl) {\n            this._onDragOver(evt);\n            _globalDragOver(evt);\n          }\n          break;\n        case 'selectstart':\n          evt.preventDefault();\n          break;\n      }\n    },\n    /**\r\n     * Serializes the item into an array of string.\r\n     * @returns {String[]}\r\n     */\n    toArray: function toArray() {\n      var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n      for (; i < n; i++) {\n        el = children[i];\n        if (closest(el, options.draggable, this.el, false)) {\n          order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n        }\n      }\n      return order;\n    },\n    /**\r\n     * Sorts the elements according to the array.\r\n     * @param  {String[]}  order  order of the items\r\n     */\n    sort: function sort(order, useAnimation) {\n      var items = {},\n        rootEl = this.el;\n      this.toArray().forEach(function (id, i) {\n        var el = rootEl.children[i];\n        if (closest(el, this.options.draggable, rootEl, false)) {\n          items[id] = el;\n        }\n      }, this);\n      useAnimation && this.captureAnimationState();\n      order.forEach(function (id) {\n        if (items[id]) {\n          rootEl.removeChild(items[id]);\n          rootEl.appendChild(items[id]);\n        }\n      });\n      useAnimation && this.animateAll();\n    },\n    /**\r\n     * Save the current sorting\r\n     */\n    save: function save() {\n      var store = this.options.store;\n      store && store.set && store.set(this);\n    },\n    /**\r\n     * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n     * @param   {HTMLElement}  el\r\n     * @param   {String}       [selector]  default: `options.draggable`\r\n     * @returns {HTMLElement|null}\r\n     */\n    closest: function closest$1(el, selector) {\n      return closest(el, selector || this.options.draggable, this.el, false);\n    },\n    /**\r\n     * Set/get option\r\n     * @param   {string} name\r\n     * @param   {*}      [value]\r\n     * @returns {*}\r\n     */\n    option: function option(name, value) {\n      var options = this.options;\n      if (value === void 0) {\n        return options[name];\n      } else {\n        var modifiedValue = PluginManager.modifyOption(this, name, value);\n        if (typeof modifiedValue !== 'undefined') {\n          options[name] = modifiedValue;\n        } else {\n          options[name] = value;\n        }\n        if (name === 'group') {\n          _prepareGroup(options);\n        }\n      }\n    },\n    /**\r\n     * Destroy\r\n     */\n    destroy: function destroy() {\n      pluginEvent('destroy', this);\n      var el = this.el;\n      el[expando] = null;\n      off(el, 'mousedown', this._onTapStart);\n      off(el, 'touchstart', this._onTapStart);\n      off(el, 'pointerdown', this._onTapStart);\n      if (this.nativeDraggable) {\n        off(el, 'dragover', this);\n        off(el, 'dragenter', this);\n      }\n      // Remove draggable attributes\n      Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n        el.removeAttribute('draggable');\n      });\n      this._onDrop();\n      this._disableDelayedDragEvents();\n      sortables.splice(sortables.indexOf(this.el), 1);\n      this.el = el = null;\n    },\n    _hideClone: function _hideClone() {\n      if (!cloneHidden) {\n        pluginEvent('hideClone', this);\n        if (Sortable.eventCanceled) return;\n        css(cloneEl, 'display', 'none');\n        if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n          cloneEl.parentNode.removeChild(cloneEl);\n        }\n        cloneHidden = true;\n      }\n    },\n    _showClone: function _showClone(putSortable) {\n      if (putSortable.lastPutMode !== 'clone') {\n        this._hideClone();\n        return;\n      }\n      if (cloneHidden) {\n        pluginEvent('showClone', this);\n        if (Sortable.eventCanceled) return;\n\n        // show clone at dragEl or original position\n        if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n          rootEl.insertBefore(cloneEl, dragEl);\n        } else if (nextEl) {\n          rootEl.insertBefore(cloneEl, nextEl);\n        } else {\n          rootEl.appendChild(cloneEl);\n        }\n        if (this.options.group.revertClone) {\n          this.animate(dragEl, cloneEl);\n        }\n        css(cloneEl, 'display', '');\n        cloneHidden = false;\n      }\n    }\n  };\n  function _globalDragOver( /**Event*/evt) {\n    if (evt.dataTransfer) {\n      evt.dataTransfer.dropEffect = 'move';\n    }\n    evt.cancelable && evt.preventDefault();\n  }\n  function _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n    var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal;\n    // Support for new CustomEvent feature\n    if (window.CustomEvent && !IE11OrLess && !Edge) {\n      evt = new CustomEvent('move', {\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      evt = document.createEvent('Event');\n      evt.initEvent('move', true, true);\n    }\n    evt.to = toEl;\n    evt.from = fromEl;\n    evt.dragged = dragEl;\n    evt.draggedRect = dragRect;\n    evt.related = targetEl || toEl;\n    evt.relatedRect = targetRect || getRect(toEl);\n    evt.willInsertAfter = willInsertAfter;\n    evt.originalEvent = originalEvent;\n    fromEl.dispatchEvent(evt);\n    if (onMoveFn) {\n      retVal = onMoveFn.call(sortable, evt, originalEvent);\n    }\n    return retVal;\n  }\n  function _disableDraggable(el) {\n    el.draggable = false;\n  }\n  function _unsilent() {\n    _silent = false;\n  }\n  function _ghostIsFirst(evt, vertical, sortable) {\n    var firstElRect = getRect(getChild(sortable.el, 0, sortable.options, true));\n    var childContainingRect = getChildContainingRectFromElement(sortable.el, sortable.options, ghostEl);\n    var spacer = 10;\n    return vertical ? evt.clientX < childContainingRect.left - spacer || evt.clientY < firstElRect.top && evt.clientX < firstElRect.right : evt.clientY < childContainingRect.top - spacer || evt.clientY < firstElRect.bottom && evt.clientX < firstElRect.left;\n  }\n  function _ghostIsLast(evt, vertical, sortable) {\n    var lastElRect = getRect(lastChild(sortable.el, sortable.options.draggable));\n    var childContainingRect = getChildContainingRectFromElement(sortable.el, sortable.options, ghostEl);\n    var spacer = 10;\n    return vertical ? evt.clientX > childContainingRect.right + spacer || evt.clientY > lastElRect.bottom && evt.clientX > lastElRect.left : evt.clientY > childContainingRect.bottom + spacer || evt.clientX > lastElRect.right && evt.clientY > lastElRect.top;\n  }\n  function _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n    var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n    if (!invertSwap) {\n      // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n      if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n        // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n        // check if past first invert threshold on side opposite of lastDirection\n        if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n          // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n          pastFirstInvertThresh = true;\n        }\n        if (!pastFirstInvertThresh) {\n          // dragEl shadow (target move distance shadow)\n          if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n          : mouseOnAxis > targetS2 - targetMoveDistance) {\n            return -lastDirection;\n          }\n        } else {\n          invert = true;\n        }\n      } else {\n        // Regular\n        if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n          return _getInsertDirection(target);\n        }\n      }\n    }\n    invert = invert || invertSwap;\n    if (invert) {\n      // Invert of regular\n      if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n        return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\r\n   * Gets the direction dragEl must be swapped relative to target in order to make it\r\n   * seem that dragEl has been \"inserted\" into that element's position\r\n   * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n   * @return {Number}                   Direction dragEl must be swapped\r\n   */\n  function _getInsertDirection(target) {\n    if (index(dragEl) < index(target)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n\n  /**\r\n   * Generate id\r\n   * @param   {HTMLElement} el\r\n   * @returns {String}\r\n   * @private\r\n   */\n  function _generateId(el) {\n    var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n    while (i--) {\n      sum += str.charCodeAt(i);\n    }\n    return sum.toString(36);\n  }\n  function _saveInputCheckedState(root) {\n    savedInputChecked.length = 0;\n    var inputs = root.getElementsByTagName('input');\n    var idx = inputs.length;\n    while (idx--) {\n      var el = inputs[idx];\n      el.checked && savedInputChecked.push(el);\n    }\n  }\n  function _nextTick(fn) {\n    return setTimeout(fn, 0);\n  }\n  function _cancelNextTick(id) {\n    return clearTimeout(id);\n  }\n\n  // Fixed #973:\n  if (documentExists) {\n    on(document, 'touchmove', function (evt) {\n      if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n        evt.preventDefault();\n      }\n    });\n  }\n\n  // Export utils\n  Sortable.utils = {\n    on: on,\n    off: off,\n    css: css,\n    find: find,\n    is: function is(el, selector) {\n      return !!closest(el, selector, el, false);\n    },\n    extend: extend,\n    throttle: throttle,\n    closest: closest,\n    toggleClass: toggleClass,\n    clone: clone,\n    index: index,\n    nextTick: _nextTick,\n    cancelNextTick: _cancelNextTick,\n    detectDirection: _detectDirection,\n    getChild: getChild\n  };\n\n  /**\r\n   * Get the Sortable instance of an element\r\n   * @param  {HTMLElement} element The element\r\n   * @return {Sortable|undefined}         The instance of Sortable\r\n   */\n  Sortable.get = function (element) {\n    return element[expando];\n  };\n\n  /**\r\n   * Mount a plugin to Sortable\r\n   * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\r\n   */\n  Sortable.mount = function () {\n    for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n      plugins[_key] = arguments[_key];\n    }\n    if (plugins[0].constructor === Array) plugins = plugins[0];\n    plugins.forEach(function (plugin) {\n      if (!plugin.prototype || !plugin.prototype.constructor) {\n        throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n      }\n      if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n      PluginManager.mount(plugin);\n    });\n  };\n\n  /**\r\n   * Create sortable instance\r\n   * @param {HTMLElement}  el\r\n   * @param {Object}      [options]\r\n   */\n  Sortable.create = function (el, options) {\n    return new Sortable(el, options);\n  };\n\n  // Export\n  Sortable.version = version;\n\n  var autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n  function AutoScrollPlugin() {\n    function AutoScroll() {\n      this.defaults = {\n        scroll: true,\n        forceAutoScrollFallback: false,\n        scrollSensitivity: 30,\n        scrollSpeed: 10,\n        bubbleScroll: true\n      };\n\n      // Bind all private methods\n      for (var fn in this) {\n        if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n          this[fn] = this[fn].bind(this);\n        }\n      }\n    }\n    AutoScroll.prototype = {\n      dragStarted: function dragStarted(_ref) {\n        var originalEvent = _ref.originalEvent;\n        if (this.sortable.nativeDraggable) {\n          on(document, 'dragover', this._handleAutoScroll);\n        } else {\n          if (this.options.supportPointer) {\n            on(document, 'pointermove', this._handleFallbackAutoScroll);\n          } else if (originalEvent.touches) {\n            on(document, 'touchmove', this._handleFallbackAutoScroll);\n          } else {\n            on(document, 'mousemove', this._handleFallbackAutoScroll);\n          }\n        }\n      },\n      dragOverCompleted: function dragOverCompleted(_ref2) {\n        var originalEvent = _ref2.originalEvent;\n        // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n        if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n          this._handleAutoScroll(originalEvent);\n        }\n      },\n      drop: function drop() {\n        if (this.sortable.nativeDraggable) {\n          off(document, 'dragover', this._handleAutoScroll);\n        } else {\n          off(document, 'pointermove', this._handleFallbackAutoScroll);\n          off(document, 'touchmove', this._handleFallbackAutoScroll);\n          off(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n        clearPointerElemChangedInterval();\n        clearAutoScrolls();\n        cancelThrottle();\n      },\n      nulling: function nulling() {\n        touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n        autoScrolls.length = 0;\n      },\n      _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n        this._handleAutoScroll(evt, true);\n      },\n      _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n        var _this = this;\n        var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n        touchEvt$1 = evt;\n\n        // IE does not seem to have native autoscroll,\n        // Edge's autoscroll seems too conditional,\n        // MACOS Safari does not have autoscroll,\n        // Firefox and Chrome are good\n        if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n          autoScroll(evt, this.options, elem, fallback);\n\n          // Listener for pointer element change\n          var ogElemScroller = getParentAutoScrollElement(elem, true);\n          if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n            pointerElemChangedInterval && clearPointerElemChangedInterval();\n            // Detect for pointer elem change, emulating native DnD behaviour\n            pointerElemChangedInterval = setInterval(function () {\n              var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n              if (newElem !== ogElemScroller) {\n                ogElemScroller = newElem;\n                clearAutoScrolls();\n              }\n              autoScroll(evt, _this.options, newElem, fallback);\n            }, 10);\n            lastAutoScrollX = x;\n            lastAutoScrollY = y;\n          }\n        } else {\n          // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n          if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n            clearAutoScrolls();\n            return;\n          }\n          autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n        }\n      }\n    };\n    return _extends(AutoScroll, {\n      pluginName: 'scroll',\n      initializeByDefault: true\n    });\n  }\n  function clearAutoScrolls() {\n    autoScrolls.forEach(function (autoScroll) {\n      clearInterval(autoScroll.pid);\n    });\n    autoScrolls = [];\n  }\n  function clearPointerElemChangedInterval() {\n    clearInterval(pointerElemChangedInterval);\n  }\n  var autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n    // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n    if (!options.scroll) return;\n    var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n    var scrollThisInstance = false,\n      scrollCustomFn;\n\n    // New scroll root, set scrollEl\n    if (scrollRootEl !== rootEl) {\n      scrollRootEl = rootEl;\n      clearAutoScrolls();\n      scrollEl = options.scroll;\n      scrollCustomFn = options.scrollFn;\n      if (scrollEl === true) {\n        scrollEl = getParentAutoScrollElement(rootEl, true);\n      }\n    }\n    var layersOut = 0;\n    var currentParent = scrollEl;\n    do {\n      var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n      if (el === winScroller) {\n        canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n        canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n      } else {\n        canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n        canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n      }\n      var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n      var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n      if (!autoScrolls[layersOut]) {\n        for (var i = 0; i <= layersOut; i++) {\n          if (!autoScrolls[i]) {\n            autoScrolls[i] = {};\n          }\n        }\n      }\n      if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n        autoScrolls[layersOut].el = el;\n        autoScrolls[layersOut].vx = vx;\n        autoScrolls[layersOut].vy = vy;\n        clearInterval(autoScrolls[layersOut].pid);\n        if (vx != 0 || vy != 0) {\n          scrollThisInstance = true;\n          /* jshint loopfunc:true */\n          autoScrolls[layersOut].pid = setInterval(function () {\n            // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n            if (isFallback && this.layer === 0) {\n              Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n            }\n            var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n            var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n            if (typeof scrollCustomFn === 'function') {\n              if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n                return;\n              }\n            }\n            scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n          }.bind({\n            layer: layersOut\n          }), 24);\n        }\n      }\n      layersOut++;\n    } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n    scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n  }, 30);\n\n  var drop = function drop(_ref) {\n    var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n    if (!originalEvent) return;\n    var toSortable = putSortable || activeSortable;\n    hideGhostForTarget();\n    var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n    var target = document.elementFromPoint(touch.clientX, touch.clientY);\n    unhideGhostForTarget();\n    if (toSortable && !toSortable.el.contains(target)) {\n      dispatchSortableEvent('spill');\n      this.onSpill({\n        dragEl: dragEl,\n        putSortable: putSortable\n      });\n    }\n  };\n  function Revert() {}\n  Revert.prototype = {\n    startIndex: null,\n    dragStart: function dragStart(_ref2) {\n      var oldDraggableIndex = _ref2.oldDraggableIndex;\n      this.startIndex = oldDraggableIndex;\n    },\n    onSpill: function onSpill(_ref3) {\n      var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n      this.sortable.captureAnimationState();\n      if (putSortable) {\n        putSortable.captureAnimationState();\n      }\n      var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n      if (nextSibling) {\n        this.sortable.el.insertBefore(dragEl, nextSibling);\n      } else {\n        this.sortable.el.appendChild(dragEl);\n      }\n      this.sortable.animateAll();\n      if (putSortable) {\n        putSortable.animateAll();\n      }\n    },\n    drop: drop\n  };\n  _extends(Revert, {\n    pluginName: 'revertOnSpill'\n  });\n  function Remove() {}\n  Remove.prototype = {\n    onSpill: function onSpill(_ref4) {\n      var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n      var parentSortable = putSortable || this.sortable;\n      parentSortable.captureAnimationState();\n      dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n      parentSortable.animateAll();\n    },\n    drop: drop\n  };\n  _extends(Remove, {\n    pluginName: 'removeOnSpill'\n  });\n\n  var lastSwapEl;\n  function SwapPlugin() {\n    function Swap() {\n      this.defaults = {\n        swapClass: 'sortable-swap-highlight'\n      };\n    }\n    Swap.prototype = {\n      dragStart: function dragStart(_ref) {\n        var dragEl = _ref.dragEl;\n        lastSwapEl = dragEl;\n      },\n      dragOverValid: function dragOverValid(_ref2) {\n        var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n        if (!activeSortable.options.swap) return;\n        var el = this.sortable.el,\n          options = this.options;\n        if (target && target !== el) {\n          var prevSwapEl = lastSwapEl;\n          if (onMove(target) !== false) {\n            toggleClass(target, options.swapClass, true);\n            lastSwapEl = target;\n          } else {\n            lastSwapEl = null;\n          }\n          if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n            toggleClass(prevSwapEl, options.swapClass, false);\n          }\n        }\n        changed();\n        completed(true);\n        cancel();\n      },\n      drop: function drop(_ref3) {\n        var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n        var toSortable = putSortable || this.sortable;\n        var options = this.options;\n        lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n        if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n          if (dragEl !== lastSwapEl) {\n            toSortable.captureAnimationState();\n            if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n            swapNodes(dragEl, lastSwapEl);\n            toSortable.animateAll();\n            if (toSortable !== activeSortable) activeSortable.animateAll();\n          }\n        }\n      },\n      nulling: function nulling() {\n        lastSwapEl = null;\n      }\n    };\n    return _extends(Swap, {\n      pluginName: 'swap',\n      eventProperties: function eventProperties() {\n        return {\n          swapItem: lastSwapEl\n        };\n      }\n    });\n  }\n  function swapNodes(n1, n2) {\n    var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n    if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n    i1 = index(n1);\n    i2 = index(n2);\n    if (p1.isEqualNode(p2) && i1 < i2) {\n      i2++;\n    }\n    p1.insertBefore(n2, p1.children[i1]);\n    p2.insertBefore(n1, p2.children[i2]);\n  }\n\n  var multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\n    multiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\n    folding = false,\n    // Folding any other time\n    dragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n  function MultiDragPlugin() {\n    function MultiDrag(sortable) {\n      // Bind all private methods\n      for (var fn in this) {\n        if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n          this[fn] = this[fn].bind(this);\n        }\n      }\n      if (!sortable.options.avoidImplicitDeselect) {\n        if (sortable.options.supportPointer) {\n          on(document, 'pointerup', this._deselectMultiDrag);\n        } else {\n          on(document, 'mouseup', this._deselectMultiDrag);\n          on(document, 'touchend', this._deselectMultiDrag);\n        }\n      }\n      on(document, 'keydown', this._checkKeyDown);\n      on(document, 'keyup', this._checkKeyUp);\n      this.defaults = {\n        selectedClass: 'sortable-selected',\n        multiDragKey: null,\n        avoidImplicitDeselect: false,\n        setData: function setData(dataTransfer, dragEl) {\n          var data = '';\n          if (multiDragElements.length && multiDragSortable === sortable) {\n            multiDragElements.forEach(function (multiDragElement, i) {\n              data += (!i ? '' : ', ') + multiDragElement.textContent;\n            });\n          } else {\n            data = dragEl.textContent;\n          }\n          dataTransfer.setData('Text', data);\n        }\n      };\n    }\n    MultiDrag.prototype = {\n      multiDragKeyDown: false,\n      isMultiDrag: false,\n      delayStartGlobal: function delayStartGlobal(_ref) {\n        var dragged = _ref.dragEl;\n        dragEl$1 = dragged;\n      },\n      delayEnded: function delayEnded() {\n        this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n      },\n      setupClone: function setupClone(_ref2) {\n        var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n        if (!this.isMultiDrag) return;\n        for (var i = 0; i < multiDragElements.length; i++) {\n          multiDragClones.push(clone(multiDragElements[i]));\n          multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n          multiDragClones[i].draggable = false;\n          multiDragClones[i].style['will-change'] = '';\n          toggleClass(multiDragClones[i], this.options.selectedClass, false);\n          multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n        }\n        sortable._hideClone();\n        cancel();\n      },\n      clone: function clone(_ref3) {\n        var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n        if (!this.isMultiDrag) return;\n        if (!this.options.removeCloneOnHide) {\n          if (multiDragElements.length && multiDragSortable === sortable) {\n            insertMultiDragClones(true, rootEl);\n            dispatchSortableEvent('clone');\n            cancel();\n          }\n        }\n      },\n      showClone: function showClone(_ref4) {\n        var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n        if (!this.isMultiDrag) return;\n        insertMultiDragClones(false, rootEl);\n        multiDragClones.forEach(function (clone) {\n          css(clone, 'display', '');\n        });\n        cloneNowShown();\n        clonesHidden = false;\n        cancel();\n      },\n      hideClone: function hideClone(_ref5) {\n        var _this = this;\n        var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n        if (!this.isMultiDrag) return;\n        multiDragClones.forEach(function (clone) {\n          css(clone, 'display', 'none');\n          if (_this.options.removeCloneOnHide && clone.parentNode) {\n            clone.parentNode.removeChild(clone);\n          }\n        });\n        cloneNowHidden();\n        clonesHidden = true;\n        cancel();\n      },\n      dragStartGlobal: function dragStartGlobal(_ref6) {\n        var sortable = _ref6.sortable;\n        if (!this.isMultiDrag && multiDragSortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n        }\n        multiDragElements.forEach(function (multiDragElement) {\n          multiDragElement.sortableIndex = index(multiDragElement);\n        });\n\n        // Sort multi-drag elements\n        multiDragElements = multiDragElements.sort(function (a, b) {\n          return a.sortableIndex - b.sortableIndex;\n        });\n        dragStarted = true;\n      },\n      dragStarted: function dragStarted(_ref7) {\n        var _this2 = this;\n        var sortable = _ref7.sortable;\n        if (!this.isMultiDrag) return;\n        if (this.options.sort) {\n          // Capture rects,\n          // hide multi drag elements (by positioning them absolute),\n          // set multi drag elements rects to dragRect,\n          // show multi drag elements,\n          // animate to rects,\n          // unset rects & remove from DOM\n\n          sortable.captureAnimationState();\n          if (this.options.animation) {\n            multiDragElements.forEach(function (multiDragElement) {\n              if (multiDragElement === dragEl$1) return;\n              css(multiDragElement, 'position', 'absolute');\n            });\n            var dragRect = getRect(dragEl$1, false, true, true);\n            multiDragElements.forEach(function (multiDragElement) {\n              if (multiDragElement === dragEl$1) return;\n              setRect(multiDragElement, dragRect);\n            });\n            folding = true;\n            initialFolding = true;\n          }\n        }\n        sortable.animateAll(function () {\n          folding = false;\n          initialFolding = false;\n          if (_this2.options.animation) {\n            multiDragElements.forEach(function (multiDragElement) {\n              unsetRect(multiDragElement);\n            });\n          }\n\n          // Remove all auxiliary multidrag items from el, if sorting enabled\n          if (_this2.options.sort) {\n            removeMultiDragElements();\n          }\n        });\n      },\n      dragOver: function dragOver(_ref8) {\n        var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n        if (folding && ~multiDragElements.indexOf(target)) {\n          completed(false);\n          cancel();\n        }\n      },\n      revert: function revert(_ref9) {\n        var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n        if (multiDragElements.length > 1) {\n          // Setup unfold animation\n          multiDragElements.forEach(function (multiDragElement) {\n            sortable.addAnimationState({\n              target: multiDragElement,\n              rect: folding ? getRect(multiDragElement) : dragRect\n            });\n            unsetRect(multiDragElement);\n            multiDragElement.fromRect = dragRect;\n            fromSortable.removeAnimationState(multiDragElement);\n          });\n          folding = false;\n          insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n        }\n      },\n      dragOverCompleted: function dragOverCompleted(_ref10) {\n        var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n        var options = this.options;\n        if (insertion) {\n          // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n          if (isOwner) {\n            activeSortable._hideClone();\n          }\n          initialFolding = false;\n          // If leaving sort:false root, or already folding - Fold to new location\n          if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n            // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n            var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n            multiDragElements.forEach(function (multiDragElement) {\n              if (multiDragElement === dragEl$1) return;\n              setRect(multiDragElement, dragRectAbsolute);\n\n              // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n              // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n              parentEl.appendChild(multiDragElement);\n            });\n            folding = true;\n          }\n\n          // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n          if (!isOwner) {\n            // Only remove if not folding (folding will remove them anyways)\n            if (!folding) {\n              removeMultiDragElements();\n            }\n            if (multiDragElements.length > 1) {\n              var clonesHiddenBefore = clonesHidden;\n              activeSortable._showClone(sortable);\n\n              // Unfold animation for clones if showing from hidden\n              if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n                multiDragClones.forEach(function (clone) {\n                  activeSortable.addAnimationState({\n                    target: clone,\n                    rect: clonesFromRect\n                  });\n                  clone.fromRect = clonesFromRect;\n                  clone.thisAnimationDuration = null;\n                });\n              }\n            } else {\n              activeSortable._showClone(sortable);\n            }\n          }\n        }\n      },\n      dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n        var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n        multiDragElements.forEach(function (multiDragElement) {\n          multiDragElement.thisAnimationDuration = null;\n        });\n        if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n          clonesFromRect = _extends({}, dragRect);\n          var dragMatrix = matrix(dragEl$1, true);\n          clonesFromRect.top -= dragMatrix.f;\n          clonesFromRect.left -= dragMatrix.e;\n        }\n      },\n      dragOverAnimationComplete: function dragOverAnimationComplete() {\n        if (folding) {\n          folding = false;\n          removeMultiDragElements();\n        }\n      },\n      drop: function drop(_ref12) {\n        var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n        var toSortable = putSortable || this.sortable;\n        if (!evt) return;\n        var options = this.options,\n          children = parentEl.children;\n\n        // Multi-drag selection\n        if (!dragStarted) {\n          if (options.multiDragKey && !this.multiDragKeyDown) {\n            this._deselectMultiDrag();\n          }\n          toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n          if (!~multiDragElements.indexOf(dragEl$1)) {\n            multiDragElements.push(dragEl$1);\n            dispatchEvent({\n              sortable: sortable,\n              rootEl: rootEl,\n              name: 'select',\n              targetEl: dragEl$1,\n              originalEvent: evt\n            });\n\n            // Modifier activated, select from last to dragEl\n            if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n              var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n              if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n                // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n                // (but previous selection existed)\n                var n, i;\n                if (currentIndex > lastIndex) {\n                  i = lastIndex;\n                  n = currentIndex;\n                } else {\n                  i = currentIndex;\n                  n = lastIndex + 1;\n                }\n                for (; i < n; i++) {\n                  if (~multiDragElements.indexOf(children[i])) continue;\n                  toggleClass(children[i], options.selectedClass, true);\n                  multiDragElements.push(children[i]);\n                  dispatchEvent({\n                    sortable: sortable,\n                    rootEl: rootEl,\n                    name: 'select',\n                    targetEl: children[i],\n                    originalEvent: evt\n                  });\n                }\n              }\n            } else {\n              lastMultiDragSelect = dragEl$1;\n            }\n            multiDragSortable = toSortable;\n          } else {\n            multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n            lastMultiDragSelect = null;\n            dispatchEvent({\n              sortable: sortable,\n              rootEl: rootEl,\n              name: 'deselect',\n              targetEl: dragEl$1,\n              originalEvent: evt\n            });\n          }\n        }\n\n        // Multi-drag drop\n        if (dragStarted && this.isMultiDrag) {\n          folding = false;\n          // Do not \"unfold\" after around dragEl if reverted\n          if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n            var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n            if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n            toSortable.captureAnimationState();\n            if (!initialFolding) {\n              if (options.animation) {\n                dragEl$1.fromRect = dragRect;\n                multiDragElements.forEach(function (multiDragElement) {\n                  multiDragElement.thisAnimationDuration = null;\n                  if (multiDragElement !== dragEl$1) {\n                    var rect = folding ? getRect(multiDragElement) : dragRect;\n                    multiDragElement.fromRect = rect;\n\n                    // Prepare unfold animation\n                    toSortable.addAnimationState({\n                      target: multiDragElement,\n                      rect: rect\n                    });\n                  }\n                });\n              }\n\n              // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n              // properly they must all be removed\n              removeMultiDragElements();\n              multiDragElements.forEach(function (multiDragElement) {\n                if (children[multiDragIndex]) {\n                  parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n                } else {\n                  parentEl.appendChild(multiDragElement);\n                }\n                multiDragIndex++;\n              });\n\n              // If initial folding is done, the elements may have changed position because they are now\n              // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n              // must be fired here as Sortable will not.\n              if (oldIndex === index(dragEl$1)) {\n                var update = false;\n                multiDragElements.forEach(function (multiDragElement) {\n                  if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                    update = true;\n                    return;\n                  }\n                });\n                if (update) {\n                  dispatchSortableEvent('update');\n                  dispatchSortableEvent('sort');\n                }\n              }\n            }\n\n            // Must be done after capturing individual rects (scroll bar)\n            multiDragElements.forEach(function (multiDragElement) {\n              unsetRect(multiDragElement);\n            });\n            toSortable.animateAll();\n          }\n          multiDragSortable = toSortable;\n        }\n\n        // Remove clones if necessary\n        if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n          multiDragClones.forEach(function (clone) {\n            clone.parentNode && clone.parentNode.removeChild(clone);\n          });\n        }\n      },\n      nullingGlobal: function nullingGlobal() {\n        this.isMultiDrag = dragStarted = false;\n        multiDragClones.length = 0;\n      },\n      destroyGlobal: function destroyGlobal() {\n        this._deselectMultiDrag();\n        off(document, 'pointerup', this._deselectMultiDrag);\n        off(document, 'mouseup', this._deselectMultiDrag);\n        off(document, 'touchend', this._deselectMultiDrag);\n        off(document, 'keydown', this._checkKeyDown);\n        off(document, 'keyup', this._checkKeyUp);\n      },\n      _deselectMultiDrag: function _deselectMultiDrag(evt) {\n        if (typeof dragStarted !== \"undefined\" && dragStarted) return;\n\n        // Only deselect if selection is in this sortable\n        if (multiDragSortable !== this.sortable) return;\n\n        // Only deselect if target is not item in this sortable\n        if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return;\n\n        // Only deselect if left click\n        if (evt && evt.button !== 0) return;\n        while (multiDragElements.length) {\n          var el = multiDragElements[0];\n          toggleClass(el, this.options.selectedClass, false);\n          multiDragElements.shift();\n          dispatchEvent({\n            sortable: this.sortable,\n            rootEl: this.sortable.el,\n            name: 'deselect',\n            targetEl: el,\n            originalEvent: evt\n          });\n        }\n      },\n      _checkKeyDown: function _checkKeyDown(evt) {\n        if (evt.key === this.options.multiDragKey) {\n          this.multiDragKeyDown = true;\n        }\n      },\n      _checkKeyUp: function _checkKeyUp(evt) {\n        if (evt.key === this.options.multiDragKey) {\n          this.multiDragKeyDown = false;\n        }\n      }\n    };\n    return _extends(MultiDrag, {\n      // Static methods & properties\n      pluginName: 'multiDrag',\n      utils: {\n        /**\r\n         * Selects the provided multi-drag item\r\n         * @param  {HTMLElement} el    The element to be selected\r\n         */\n        select: function select(el) {\n          var sortable = el.parentNode[expando];\n          if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n          if (multiDragSortable && multiDragSortable !== sortable) {\n            multiDragSortable.multiDrag._deselectMultiDrag();\n            multiDragSortable = sortable;\n          }\n          toggleClass(el, sortable.options.selectedClass, true);\n          multiDragElements.push(el);\n        },\n        /**\r\n         * Deselects the provided multi-drag item\r\n         * @param  {HTMLElement} el    The element to be deselected\r\n         */\n        deselect: function deselect(el) {\n          var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n          if (!sortable || !sortable.options.multiDrag || !~index) return;\n          toggleClass(el, sortable.options.selectedClass, false);\n          multiDragElements.splice(index, 1);\n        }\n      },\n      eventProperties: function eventProperties() {\n        var _this3 = this;\n        var oldIndicies = [],\n          newIndicies = [];\n        multiDragElements.forEach(function (multiDragElement) {\n          oldIndicies.push({\n            multiDragElement: multiDragElement,\n            index: multiDragElement.sortableIndex\n          });\n\n          // multiDragElements will already be sorted if folding\n          var newIndex;\n          if (folding && multiDragElement !== dragEl$1) {\n            newIndex = -1;\n          } else if (folding) {\n            newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n          } else {\n            newIndex = index(multiDragElement);\n          }\n          newIndicies.push({\n            multiDragElement: multiDragElement,\n            index: newIndex\n          });\n        });\n        return {\n          items: _toConsumableArray(multiDragElements),\n          clones: [].concat(multiDragClones),\n          oldIndicies: oldIndicies,\n          newIndicies: newIndicies\n        };\n      },\n      optionListeners: {\n        multiDragKey: function multiDragKey(key) {\n          key = key.toLowerCase();\n          if (key === 'ctrl') {\n            key = 'Control';\n          } else if (key.length > 1) {\n            key = key.charAt(0).toUpperCase() + key.substr(1);\n          }\n          return key;\n        }\n      }\n    });\n  }\n  function insertMultiDragElements(clonesInserted, rootEl) {\n    multiDragElements.forEach(function (multiDragElement, i) {\n      var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n      if (target) {\n        rootEl.insertBefore(multiDragElement, target);\n      } else {\n        rootEl.appendChild(multiDragElement);\n      }\n    });\n  }\n\n  /**\r\n   * Insert multi-drag clones\r\n   * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n   * @param  {HTMLElement} rootEl\r\n   */\n  function insertMultiDragClones(elementsInserted, rootEl) {\n    multiDragClones.forEach(function (clone, i) {\n      var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n      if (target) {\n        rootEl.insertBefore(clone, target);\n      } else {\n        rootEl.appendChild(clone);\n      }\n    });\n  }\n  function removeMultiDragElements() {\n    multiDragElements.forEach(function (multiDragElement) {\n      if (multiDragElement === dragEl$1) return;\n      multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n    });\n  }\n\n  Sortable.mount(new AutoScrollPlugin());\n  Sortable.mount(Remove, Revert);\n\n  Sortable.mount(new SwapPlugin());\n  Sortable.mount(new MultiDragPlugin());\n\n  return Sortable;\n\n})));\n"],
  "mappings": "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",
  "names": ["obj", "index", "ghostEl", "pluginEvent", "defaults", "rootEl", "cloneEl", "oldIndex", "newIndex", "oldDraggableIndex", "newDraggableIndex", "putSortable", "_detectDirection", "_dragElInRowColumn", "_detectNearestEmptySortable", "_prepareGroup", "dragEl", "_hideGhostForTarget", "_unhideGhostForTarget", "nearestEmptyInsertDetectEvent", "_checkOutsideTargetEl", "dragStartFn", "target", "after", "el", "plugins", "dragStarted", "drop", "autoScroll", "clone", "parentEl"]
}
